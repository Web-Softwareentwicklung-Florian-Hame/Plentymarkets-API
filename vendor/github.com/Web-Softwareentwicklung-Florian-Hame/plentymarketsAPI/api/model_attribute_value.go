/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// AttributeValue Variation attribute value model that is place in VariationAttributeValue model
type AttributeValue struct {
	Id *int32 `json:"id,omitempty"`
	AttributeId *int32 `json:"attributeId,omitempty"`
	BackendName *string `json:"backendName,omitempty"`
	Position *int32 `json:"position,omitempty"`
	Image *string `json:"image,omitempty"`
	Comment *string `json:"comment,omitempty"`
	AmazonValue *string `json:"amazonValue,omitempty"`
	OttoValue *string `json:"ottoValue,omitempty"`
	NeckermannAtEpValue *string `json:"neckermannAtEpValue,omitempty"`
	LaRedouteValue *string `json:"laRedouteValue,omitempty"`
	TracdelightValue *string `json:"tracdelightValue,omitempty"`
	PercentageDistribution *int32 `json:"percentageDistribution,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	Attribute *Attribute `json:"attribute,omitempty"`
}

// NewAttributeValue instantiates a new AttributeValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeValue() *AttributeValue {
	this := AttributeValue{}
	return &this
}

// NewAttributeValueWithDefaults instantiates a new AttributeValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeValueWithDefaults() *AttributeValue {
	this := AttributeValue{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AttributeValue) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AttributeValue) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AttributeValue) SetId(v int32) {
	o.Id = &v
}

// GetAttributeId returns the AttributeId field value if set, zero value otherwise.
func (o *AttributeValue) GetAttributeId() int32 {
	if o == nil || o.AttributeId == nil {
		var ret int32
		return ret
	}
	return *o.AttributeId
}

// GetAttributeIdOk returns a tuple with the AttributeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetAttributeIdOk() (*int32, bool) {
	if o == nil || o.AttributeId == nil {
		return nil, false
	}
	return o.AttributeId, true
}

// HasAttributeId returns a boolean if a field has been set.
func (o *AttributeValue) HasAttributeId() bool {
	if o != nil && o.AttributeId != nil {
		return true
	}

	return false
}

// SetAttributeId gets a reference to the given int32 and assigns it to the AttributeId field.
func (o *AttributeValue) SetAttributeId(v int32) {
	o.AttributeId = &v
}

// GetBackendName returns the BackendName field value if set, zero value otherwise.
func (o *AttributeValue) GetBackendName() string {
	if o == nil || o.BackendName == nil {
		var ret string
		return ret
	}
	return *o.BackendName
}

// GetBackendNameOk returns a tuple with the BackendName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetBackendNameOk() (*string, bool) {
	if o == nil || o.BackendName == nil {
		return nil, false
	}
	return o.BackendName, true
}

// HasBackendName returns a boolean if a field has been set.
func (o *AttributeValue) HasBackendName() bool {
	if o != nil && o.BackendName != nil {
		return true
	}

	return false
}

// SetBackendName gets a reference to the given string and assigns it to the BackendName field.
func (o *AttributeValue) SetBackendName(v string) {
	o.BackendName = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *AttributeValue) GetPosition() int32 {
	if o == nil || o.Position == nil {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetPositionOk() (*int32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *AttributeValue) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *AttributeValue) SetPosition(v int32) {
	o.Position = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *AttributeValue) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *AttributeValue) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *AttributeValue) SetImage(v string) {
	o.Image = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *AttributeValue) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *AttributeValue) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *AttributeValue) SetComment(v string) {
	o.Comment = &v
}

// GetAmazonValue returns the AmazonValue field value if set, zero value otherwise.
func (o *AttributeValue) GetAmazonValue() string {
	if o == nil || o.AmazonValue == nil {
		var ret string
		return ret
	}
	return *o.AmazonValue
}

// GetAmazonValueOk returns a tuple with the AmazonValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetAmazonValueOk() (*string, bool) {
	if o == nil || o.AmazonValue == nil {
		return nil, false
	}
	return o.AmazonValue, true
}

// HasAmazonValue returns a boolean if a field has been set.
func (o *AttributeValue) HasAmazonValue() bool {
	if o != nil && o.AmazonValue != nil {
		return true
	}

	return false
}

// SetAmazonValue gets a reference to the given string and assigns it to the AmazonValue field.
func (o *AttributeValue) SetAmazonValue(v string) {
	o.AmazonValue = &v
}

// GetOttoValue returns the OttoValue field value if set, zero value otherwise.
func (o *AttributeValue) GetOttoValue() string {
	if o == nil || o.OttoValue == nil {
		var ret string
		return ret
	}
	return *o.OttoValue
}

// GetOttoValueOk returns a tuple with the OttoValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetOttoValueOk() (*string, bool) {
	if o == nil || o.OttoValue == nil {
		return nil, false
	}
	return o.OttoValue, true
}

// HasOttoValue returns a boolean if a field has been set.
func (o *AttributeValue) HasOttoValue() bool {
	if o != nil && o.OttoValue != nil {
		return true
	}

	return false
}

// SetOttoValue gets a reference to the given string and assigns it to the OttoValue field.
func (o *AttributeValue) SetOttoValue(v string) {
	o.OttoValue = &v
}

// GetNeckermannAtEpValue returns the NeckermannAtEpValue field value if set, zero value otherwise.
func (o *AttributeValue) GetNeckermannAtEpValue() string {
	if o == nil || o.NeckermannAtEpValue == nil {
		var ret string
		return ret
	}
	return *o.NeckermannAtEpValue
}

// GetNeckermannAtEpValueOk returns a tuple with the NeckermannAtEpValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetNeckermannAtEpValueOk() (*string, bool) {
	if o == nil || o.NeckermannAtEpValue == nil {
		return nil, false
	}
	return o.NeckermannAtEpValue, true
}

// HasNeckermannAtEpValue returns a boolean if a field has been set.
func (o *AttributeValue) HasNeckermannAtEpValue() bool {
	if o != nil && o.NeckermannAtEpValue != nil {
		return true
	}

	return false
}

// SetNeckermannAtEpValue gets a reference to the given string and assigns it to the NeckermannAtEpValue field.
func (o *AttributeValue) SetNeckermannAtEpValue(v string) {
	o.NeckermannAtEpValue = &v
}

// GetLaRedouteValue returns the LaRedouteValue field value if set, zero value otherwise.
func (o *AttributeValue) GetLaRedouteValue() string {
	if o == nil || o.LaRedouteValue == nil {
		var ret string
		return ret
	}
	return *o.LaRedouteValue
}

// GetLaRedouteValueOk returns a tuple with the LaRedouteValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetLaRedouteValueOk() (*string, bool) {
	if o == nil || o.LaRedouteValue == nil {
		return nil, false
	}
	return o.LaRedouteValue, true
}

// HasLaRedouteValue returns a boolean if a field has been set.
func (o *AttributeValue) HasLaRedouteValue() bool {
	if o != nil && o.LaRedouteValue != nil {
		return true
	}

	return false
}

// SetLaRedouteValue gets a reference to the given string and assigns it to the LaRedouteValue field.
func (o *AttributeValue) SetLaRedouteValue(v string) {
	o.LaRedouteValue = &v
}

// GetTracdelightValue returns the TracdelightValue field value if set, zero value otherwise.
func (o *AttributeValue) GetTracdelightValue() string {
	if o == nil || o.TracdelightValue == nil {
		var ret string
		return ret
	}
	return *o.TracdelightValue
}

// GetTracdelightValueOk returns a tuple with the TracdelightValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetTracdelightValueOk() (*string, bool) {
	if o == nil || o.TracdelightValue == nil {
		return nil, false
	}
	return o.TracdelightValue, true
}

// HasTracdelightValue returns a boolean if a field has been set.
func (o *AttributeValue) HasTracdelightValue() bool {
	if o != nil && o.TracdelightValue != nil {
		return true
	}

	return false
}

// SetTracdelightValue gets a reference to the given string and assigns it to the TracdelightValue field.
func (o *AttributeValue) SetTracdelightValue(v string) {
	o.TracdelightValue = &v
}

// GetPercentageDistribution returns the PercentageDistribution field value if set, zero value otherwise.
func (o *AttributeValue) GetPercentageDistribution() int32 {
	if o == nil || o.PercentageDistribution == nil {
		var ret int32
		return ret
	}
	return *o.PercentageDistribution
}

// GetPercentageDistributionOk returns a tuple with the PercentageDistribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetPercentageDistributionOk() (*int32, bool) {
	if o == nil || o.PercentageDistribution == nil {
		return nil, false
	}
	return o.PercentageDistribution, true
}

// HasPercentageDistribution returns a boolean if a field has been set.
func (o *AttributeValue) HasPercentageDistribution() bool {
	if o != nil && o.PercentageDistribution != nil {
		return true
	}

	return false
}

// SetPercentageDistribution gets a reference to the given int32 and assigns it to the PercentageDistribution field.
func (o *AttributeValue) SetPercentageDistribution(v int32) {
	o.PercentageDistribution = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AttributeValue) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AttributeValue) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *AttributeValue) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetAttribute returns the Attribute field value if set, zero value otherwise.
func (o *AttributeValue) GetAttribute() Attribute {
	if o == nil || o.Attribute == nil {
		var ret Attribute
		return ret
	}
	return *o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValue) GetAttributeOk() (*Attribute, bool) {
	if o == nil || o.Attribute == nil {
		return nil, false
	}
	return o.Attribute, true
}

// HasAttribute returns a boolean if a field has been set.
func (o *AttributeValue) HasAttribute() bool {
	if o != nil && o.Attribute != nil {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given Attribute and assigns it to the Attribute field.
func (o *AttributeValue) SetAttribute(v Attribute) {
	o.Attribute = &v
}

func (o AttributeValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AttributeId != nil {
		toSerialize["attributeId"] = o.AttributeId
	}
	if o.BackendName != nil {
		toSerialize["backendName"] = o.BackendName
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.AmazonValue != nil {
		toSerialize["amazonValue"] = o.AmazonValue
	}
	if o.OttoValue != nil {
		toSerialize["ottoValue"] = o.OttoValue
	}
	if o.NeckermannAtEpValue != nil {
		toSerialize["neckermannAtEpValue"] = o.NeckermannAtEpValue
	}
	if o.LaRedouteValue != nil {
		toSerialize["laRedouteValue"] = o.LaRedouteValue
	}
	if o.TracdelightValue != nil {
		toSerialize["tracdelightValue"] = o.TracdelightValue
	}
	if o.PercentageDistribution != nil {
		toSerialize["percentageDistribution"] = o.PercentageDistribution
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.Attribute != nil {
		toSerialize["attribute"] = o.Attribute
	}
	return json.Marshal(toSerialize)
}

type NullableAttributeValue struct {
	value *AttributeValue
	isSet bool
}

func (v NullableAttributeValue) Get() *AttributeValue {
	return v.value
}

func (v *NullableAttributeValue) Set(val *AttributeValue) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeValue) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeValue(val *AttributeValue) *NullableAttributeValue {
	return &NullableAttributeValue{value: val, isSet: true}
}

func (v NullableAttributeValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


