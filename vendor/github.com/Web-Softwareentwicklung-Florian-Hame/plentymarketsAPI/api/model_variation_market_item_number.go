/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// VariationMarketItemNumber market item number model for variations
type VariationMarketItemNumber struct {
	Id *int32 `json:"id,omitempty"`
	VariationId *int32 `json:"variationId,omitempty"`
	CountryId *int32 `json:"countryId,omitempty"`
	Type *string `json:"type,omitempty"`
	Position *int32 `json:"position,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewVariationMarketItemNumber instantiates a new VariationMarketItemNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariationMarketItemNumber() *VariationMarketItemNumber {
	this := VariationMarketItemNumber{}
	return &this
}

// NewVariationMarketItemNumberWithDefaults instantiates a new VariationMarketItemNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariationMarketItemNumberWithDefaults() *VariationMarketItemNumber {
	this := VariationMarketItemNumber{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VariationMarketItemNumber) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationMarketItemNumber) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VariationMarketItemNumber) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *VariationMarketItemNumber) SetId(v int32) {
	o.Id = &v
}

// GetVariationId returns the VariationId field value if set, zero value otherwise.
func (o *VariationMarketItemNumber) GetVariationId() int32 {
	if o == nil || o.VariationId == nil {
		var ret int32
		return ret
	}
	return *o.VariationId
}

// GetVariationIdOk returns a tuple with the VariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationMarketItemNumber) GetVariationIdOk() (*int32, bool) {
	if o == nil || o.VariationId == nil {
		return nil, false
	}
	return o.VariationId, true
}

// HasVariationId returns a boolean if a field has been set.
func (o *VariationMarketItemNumber) HasVariationId() bool {
	if o != nil && o.VariationId != nil {
		return true
	}

	return false
}

// SetVariationId gets a reference to the given int32 and assigns it to the VariationId field.
func (o *VariationMarketItemNumber) SetVariationId(v int32) {
	o.VariationId = &v
}

// GetCountryId returns the CountryId field value if set, zero value otherwise.
func (o *VariationMarketItemNumber) GetCountryId() int32 {
	if o == nil || o.CountryId == nil {
		var ret int32
		return ret
	}
	return *o.CountryId
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationMarketItemNumber) GetCountryIdOk() (*int32, bool) {
	if o == nil || o.CountryId == nil {
		return nil, false
	}
	return o.CountryId, true
}

// HasCountryId returns a boolean if a field has been set.
func (o *VariationMarketItemNumber) HasCountryId() bool {
	if o != nil && o.CountryId != nil {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given int32 and assigns it to the CountryId field.
func (o *VariationMarketItemNumber) SetCountryId(v int32) {
	o.CountryId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VariationMarketItemNumber) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationMarketItemNumber) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VariationMarketItemNumber) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *VariationMarketItemNumber) SetType(v string) {
	o.Type = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *VariationMarketItemNumber) GetPosition() int32 {
	if o == nil || o.Position == nil {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationMarketItemNumber) GetPositionOk() (*int32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *VariationMarketItemNumber) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *VariationMarketItemNumber) SetPosition(v int32) {
	o.Position = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *VariationMarketItemNumber) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationMarketItemNumber) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *VariationMarketItemNumber) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *VariationMarketItemNumber) SetValue(v string) {
	o.Value = &v
}

func (o VariationMarketItemNumber) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.VariationId != nil {
		toSerialize["variationId"] = o.VariationId
	}
	if o.CountryId != nil {
		toSerialize["countryId"] = o.CountryId
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableVariationMarketItemNumber struct {
	value *VariationMarketItemNumber
	isSet bool
}

func (v NullableVariationMarketItemNumber) Get() *VariationMarketItemNumber {
	return v.value
}

func (v *NullableVariationMarketItemNumber) Set(val *VariationMarketItemNumber) {
	v.value = val
	v.isSet = true
}

func (v NullableVariationMarketItemNumber) IsSet() bool {
	return v.isSet
}

func (v *NullableVariationMarketItemNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariationMarketItemNumber(val *VariationMarketItemNumber) *NullableVariationMarketItemNumber {
	return &NullableVariationMarketItemNumber{value: val, isSet: true}
}

func (v NullableVariationMarketItemNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariationMarketItemNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


