/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// RestLoginResponse token data return after successful rest api authentication
type RestLoginResponse struct {
	ConcurrentSessions *int32 `json:"concurrent_sessions,omitempty"`
	MaxCurrentSessions *int32 `json:"max_current_sessions,omitempty"`
	UserId *int32 `json:"user_id,omitempty"`
	TokenType *string `json:"tokenType,omitempty"`
	ExpiresIn *int32 `json:"expiresIn,omitempty"`
	AccessToken *string `json:"accessToken,omitempty"`
	RefreshToken *string `json:"refreshToken,omitempty"`
}

// NewRestLoginResponse instantiates a new RestLoginResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestLoginResponse() *RestLoginResponse {
	this := RestLoginResponse{}
	return &this
}

// NewRestLoginResponseWithDefaults instantiates a new RestLoginResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestLoginResponseWithDefaults() *RestLoginResponse {
	this := RestLoginResponse{}
	return &this
}

// GetConcurrentSessions returns the ConcurrentSessions field value if set, zero value otherwise.
func (o *RestLoginResponse) GetConcurrentSessions() int32 {
	if o == nil || o.ConcurrentSessions == nil {
		var ret int32
		return ret
	}
	return *o.ConcurrentSessions
}

// GetConcurrentSessionsOk returns a tuple with the ConcurrentSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestLoginResponse) GetConcurrentSessionsOk() (*int32, bool) {
	if o == nil || o.ConcurrentSessions == nil {
		return nil, false
	}
	return o.ConcurrentSessions, true
}

// HasConcurrentSessions returns a boolean if a field has been set.
func (o *RestLoginResponse) HasConcurrentSessions() bool {
	if o != nil && o.ConcurrentSessions != nil {
		return true
	}

	return false
}

// SetConcurrentSessions gets a reference to the given int32 and assigns it to the ConcurrentSessions field.
func (o *RestLoginResponse) SetConcurrentSessions(v int32) {
	o.ConcurrentSessions = &v
}

// GetMaxCurrentSessions returns the MaxCurrentSessions field value if set, zero value otherwise.
func (o *RestLoginResponse) GetMaxCurrentSessions() int32 {
	if o == nil || o.MaxCurrentSessions == nil {
		var ret int32
		return ret
	}
	return *o.MaxCurrentSessions
}

// GetMaxCurrentSessionsOk returns a tuple with the MaxCurrentSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestLoginResponse) GetMaxCurrentSessionsOk() (*int32, bool) {
	if o == nil || o.MaxCurrentSessions == nil {
		return nil, false
	}
	return o.MaxCurrentSessions, true
}

// HasMaxCurrentSessions returns a boolean if a field has been set.
func (o *RestLoginResponse) HasMaxCurrentSessions() bool {
	if o != nil && o.MaxCurrentSessions != nil {
		return true
	}

	return false
}

// SetMaxCurrentSessions gets a reference to the given int32 and assigns it to the MaxCurrentSessions field.
func (o *RestLoginResponse) SetMaxCurrentSessions(v int32) {
	o.MaxCurrentSessions = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *RestLoginResponse) GetUserId() int32 {
	if o == nil || o.UserId == nil {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestLoginResponse) GetUserIdOk() (*int32, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *RestLoginResponse) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *RestLoginResponse) SetUserId(v int32) {
	o.UserId = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *RestLoginResponse) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestLoginResponse) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *RestLoginResponse) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *RestLoginResponse) SetTokenType(v string) {
	o.TokenType = &v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *RestLoginResponse) GetExpiresIn() int32 {
	if o == nil || o.ExpiresIn == nil {
		var ret int32
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestLoginResponse) GetExpiresInOk() (*int32, bool) {
	if o == nil || o.ExpiresIn == nil {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *RestLoginResponse) HasExpiresIn() bool {
	if o != nil && o.ExpiresIn != nil {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given int32 and assigns it to the ExpiresIn field.
func (o *RestLoginResponse) SetExpiresIn(v int32) {
	o.ExpiresIn = &v
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *RestLoginResponse) GetAccessToken() string {
	if o == nil || o.AccessToken == nil {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestLoginResponse) GetAccessTokenOk() (*string, bool) {
	if o == nil || o.AccessToken == nil {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *RestLoginResponse) HasAccessToken() bool {
	if o != nil && o.AccessToken != nil {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *RestLoginResponse) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *RestLoginResponse) GetRefreshToken() string {
	if o == nil || o.RefreshToken == nil {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestLoginResponse) GetRefreshTokenOk() (*string, bool) {
	if o == nil || o.RefreshToken == nil {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *RestLoginResponse) HasRefreshToken() bool {
	if o != nil && o.RefreshToken != nil {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *RestLoginResponse) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

func (o RestLoginResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConcurrentSessions != nil {
		toSerialize["concurrent_sessions"] = o.ConcurrentSessions
	}
	if o.MaxCurrentSessions != nil {
		toSerialize["max_current_sessions"] = o.MaxCurrentSessions
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	if o.TokenType != nil {
		toSerialize["tokenType"] = o.TokenType
	}
	if o.ExpiresIn != nil {
		toSerialize["expiresIn"] = o.ExpiresIn
	}
	if o.AccessToken != nil {
		toSerialize["accessToken"] = o.AccessToken
	}
	if o.RefreshToken != nil {
		toSerialize["refreshToken"] = o.RefreshToken
	}
	return json.Marshal(toSerialize)
}

type NullableRestLoginResponse struct {
	value *RestLoginResponse
	isSet bool
}

func (v NullableRestLoginResponse) Get() *RestLoginResponse {
	return v.value
}

func (v *NullableRestLoginResponse) Set(val *RestLoginResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRestLoginResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRestLoginResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestLoginResponse(val *RestLoginResponse) *NullableRestLoginResponse {
	return &NullableRestLoginResponse{value: val, isSet: true}
}

func (v NullableRestLoginResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestLoginResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


