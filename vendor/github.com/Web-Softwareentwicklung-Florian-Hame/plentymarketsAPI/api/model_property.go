/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// Property variation property model
type Property struct {
	PropertyId *int32 `json:"propertyId,omitempty"`
	RelationTypeIdentifier *string `json:"relationTypeIdentifier,omitempty"`
	RelationTargetId *int32 `json:"relationTargetId,omitempty"`
	SelectionRelationId *int32 `json:"selectionRelationId,omitempty"`
	GroupId *int32 `json:"groupId,omitempty"`
	Markup *int32 `json:"markup,omitempty"`
	RelationValues *[]PropertyRelationValues `json:"relationValues,omitempty"`
	PropertyRelation *PropertyRelation `json:"propertyRelation,omitempty"`
	Id *float32 `json:"id,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewProperty instantiates a new Property object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProperty() *Property {
	this := Property{}
	return &this
}

// NewPropertyWithDefaults instantiates a new Property object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertyWithDefaults() *Property {
	this := Property{}
	return &this
}

// GetPropertyId returns the PropertyId field value if set, zero value otherwise.
func (o *Property) GetPropertyId() int32 {
	if o == nil || o.PropertyId == nil {
		var ret int32
		return ret
	}
	return *o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Property) GetPropertyIdOk() (*int32, bool) {
	if o == nil || o.PropertyId == nil {
		return nil, false
	}
	return o.PropertyId, true
}

// HasPropertyId returns a boolean if a field has been set.
func (o *Property) HasPropertyId() bool {
	if o != nil && o.PropertyId != nil {
		return true
	}

	return false
}

// SetPropertyId gets a reference to the given int32 and assigns it to the PropertyId field.
func (o *Property) SetPropertyId(v int32) {
	o.PropertyId = &v
}

// GetRelationTypeIdentifier returns the RelationTypeIdentifier field value if set, zero value otherwise.
func (o *Property) GetRelationTypeIdentifier() string {
	if o == nil || o.RelationTypeIdentifier == nil {
		var ret string
		return ret
	}
	return *o.RelationTypeIdentifier
}

// GetRelationTypeIdentifierOk returns a tuple with the RelationTypeIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Property) GetRelationTypeIdentifierOk() (*string, bool) {
	if o == nil || o.RelationTypeIdentifier == nil {
		return nil, false
	}
	return o.RelationTypeIdentifier, true
}

// HasRelationTypeIdentifier returns a boolean if a field has been set.
func (o *Property) HasRelationTypeIdentifier() bool {
	if o != nil && o.RelationTypeIdentifier != nil {
		return true
	}

	return false
}

// SetRelationTypeIdentifier gets a reference to the given string and assigns it to the RelationTypeIdentifier field.
func (o *Property) SetRelationTypeIdentifier(v string) {
	o.RelationTypeIdentifier = &v
}

// GetRelationTargetId returns the RelationTargetId field value if set, zero value otherwise.
func (o *Property) GetRelationTargetId() int32 {
	if o == nil || o.RelationTargetId == nil {
		var ret int32
		return ret
	}
	return *o.RelationTargetId
}

// GetRelationTargetIdOk returns a tuple with the RelationTargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Property) GetRelationTargetIdOk() (*int32, bool) {
	if o == nil || o.RelationTargetId == nil {
		return nil, false
	}
	return o.RelationTargetId, true
}

// HasRelationTargetId returns a boolean if a field has been set.
func (o *Property) HasRelationTargetId() bool {
	if o != nil && o.RelationTargetId != nil {
		return true
	}

	return false
}

// SetRelationTargetId gets a reference to the given int32 and assigns it to the RelationTargetId field.
func (o *Property) SetRelationTargetId(v int32) {
	o.RelationTargetId = &v
}

// GetSelectionRelationId returns the SelectionRelationId field value if set, zero value otherwise.
func (o *Property) GetSelectionRelationId() int32 {
	if o == nil || o.SelectionRelationId == nil {
		var ret int32
		return ret
	}
	return *o.SelectionRelationId
}

// GetSelectionRelationIdOk returns a tuple with the SelectionRelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Property) GetSelectionRelationIdOk() (*int32, bool) {
	if o == nil || o.SelectionRelationId == nil {
		return nil, false
	}
	return o.SelectionRelationId, true
}

// HasSelectionRelationId returns a boolean if a field has been set.
func (o *Property) HasSelectionRelationId() bool {
	if o != nil && o.SelectionRelationId != nil {
		return true
	}

	return false
}

// SetSelectionRelationId gets a reference to the given int32 and assigns it to the SelectionRelationId field.
func (o *Property) SetSelectionRelationId(v int32) {
	o.SelectionRelationId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *Property) GetGroupId() int32 {
	if o == nil || o.GroupId == nil {
		var ret int32
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Property) GetGroupIdOk() (*int32, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *Property) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given int32 and assigns it to the GroupId field.
func (o *Property) SetGroupId(v int32) {
	o.GroupId = &v
}

// GetMarkup returns the Markup field value if set, zero value otherwise.
func (o *Property) GetMarkup() int32 {
	if o == nil || o.Markup == nil {
		var ret int32
		return ret
	}
	return *o.Markup
}

// GetMarkupOk returns a tuple with the Markup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Property) GetMarkupOk() (*int32, bool) {
	if o == nil || o.Markup == nil {
		return nil, false
	}
	return o.Markup, true
}

// HasMarkup returns a boolean if a field has been set.
func (o *Property) HasMarkup() bool {
	if o != nil && o.Markup != nil {
		return true
	}

	return false
}

// SetMarkup gets a reference to the given int32 and assigns it to the Markup field.
func (o *Property) SetMarkup(v int32) {
	o.Markup = &v
}

// GetRelationValues returns the RelationValues field value if set, zero value otherwise.
func (o *Property) GetRelationValues() []PropertyRelationValues {
	if o == nil || o.RelationValues == nil {
		var ret []PropertyRelationValues
		return ret
	}
	return *o.RelationValues
}

// GetRelationValuesOk returns a tuple with the RelationValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Property) GetRelationValuesOk() (*[]PropertyRelationValues, bool) {
	if o == nil || o.RelationValues == nil {
		return nil, false
	}
	return o.RelationValues, true
}

// HasRelationValues returns a boolean if a field has been set.
func (o *Property) HasRelationValues() bool {
	if o != nil && o.RelationValues != nil {
		return true
	}

	return false
}

// SetRelationValues gets a reference to the given []PropertyRelationValues and assigns it to the RelationValues field.
func (o *Property) SetRelationValues(v []PropertyRelationValues) {
	o.RelationValues = &v
}

// GetPropertyRelation returns the PropertyRelation field value if set, zero value otherwise.
func (o *Property) GetPropertyRelation() PropertyRelation {
	if o == nil || o.PropertyRelation == nil {
		var ret PropertyRelation
		return ret
	}
	return *o.PropertyRelation
}

// GetPropertyRelationOk returns a tuple with the PropertyRelation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Property) GetPropertyRelationOk() (*PropertyRelation, bool) {
	if o == nil || o.PropertyRelation == nil {
		return nil, false
	}
	return o.PropertyRelation, true
}

// HasPropertyRelation returns a boolean if a field has been set.
func (o *Property) HasPropertyRelation() bool {
	if o != nil && o.PropertyRelation != nil {
		return true
	}

	return false
}

// SetPropertyRelation gets a reference to the given PropertyRelation and assigns it to the PropertyRelation field.
func (o *Property) SetPropertyRelation(v PropertyRelation) {
	o.PropertyRelation = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Property) GetId() float32 {
	if o == nil || o.Id == nil {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Property) GetIdOk() (*float32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Property) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *Property) SetId(v float32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Property) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Property) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Property) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Property) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Property) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Property) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Property) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Property) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o Property) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PropertyId != nil {
		toSerialize["propertyId"] = o.PropertyId
	}
	if o.RelationTypeIdentifier != nil {
		toSerialize["relationTypeIdentifier"] = o.RelationTypeIdentifier
	}
	if o.RelationTargetId != nil {
		toSerialize["relationTargetId"] = o.RelationTargetId
	}
	if o.SelectionRelationId != nil {
		toSerialize["selectionRelationId"] = o.SelectionRelationId
	}
	if o.GroupId != nil {
		toSerialize["groupId"] = o.GroupId
	}
	if o.Markup != nil {
		toSerialize["markup"] = o.Markup
	}
	if o.RelationValues != nil {
		toSerialize["relationValues"] = o.RelationValues
	}
	if o.PropertyRelation != nil {
		toSerialize["propertyRelation"] = o.PropertyRelation
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableProperty struct {
	value *Property
	isSet bool
}

func (v NullableProperty) Get() *Property {
	return v.value
}

func (v *NullableProperty) Set(val *Property) {
	v.value = val
	v.isSet = true
}

func (v NullableProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProperty(val *Property) *NullableProperty {
	return &NullableProperty{value: val, isSet: true}
}

func (v NullableProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


