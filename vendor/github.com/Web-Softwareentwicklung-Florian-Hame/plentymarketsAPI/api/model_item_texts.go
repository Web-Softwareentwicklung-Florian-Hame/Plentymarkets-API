/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ItemTexts struct for ItemTexts
type ItemTexts struct {
	Lang *string `json:"lang,omitempty"`
	Name1 *string `json:"name1,omitempty"`
	Name2 *string `json:"name2,omitempty"`
	Name3 *string `json:"name3,omitempty"`
	ShortDescription *string `json:"shortDescription,omitempty"`
	Description *string `json:"description,omitempty"`
	MetaDescription *string `json:"metaDescription,omitempty"`
	TechnicalData *string `json:"technicalData,omitempty"`
	UrlPath *string `json:"urlPath,omitempty"`
	Keywords *string `json:"keywords,omitempty"`
}

// NewItemTexts instantiates a new ItemTexts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemTexts() *ItemTexts {
	this := ItemTexts{}
	return &this
}

// NewItemTextsWithDefaults instantiates a new ItemTexts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemTextsWithDefaults() *ItemTexts {
	this := ItemTexts{}
	return &this
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *ItemTexts) GetLang() string {
	if o == nil || o.Lang == nil {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTexts) GetLangOk() (*string, bool) {
	if o == nil || o.Lang == nil {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *ItemTexts) HasLang() bool {
	if o != nil && o.Lang != nil {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *ItemTexts) SetLang(v string) {
	o.Lang = &v
}

// GetName1 returns the Name1 field value if set, zero value otherwise.
func (o *ItemTexts) GetName1() string {
	if o == nil || o.Name1 == nil {
		var ret string
		return ret
	}
	return *o.Name1
}

// GetName1Ok returns a tuple with the Name1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTexts) GetName1Ok() (*string, bool) {
	if o == nil || o.Name1 == nil {
		return nil, false
	}
	return o.Name1, true
}

// HasName1 returns a boolean if a field has been set.
func (o *ItemTexts) HasName1() bool {
	if o != nil && o.Name1 != nil {
		return true
	}

	return false
}

// SetName1 gets a reference to the given string and assigns it to the Name1 field.
func (o *ItemTexts) SetName1(v string) {
	o.Name1 = &v
}

// GetName2 returns the Name2 field value if set, zero value otherwise.
func (o *ItemTexts) GetName2() string {
	if o == nil || o.Name2 == nil {
		var ret string
		return ret
	}
	return *o.Name2
}

// GetName2Ok returns a tuple with the Name2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTexts) GetName2Ok() (*string, bool) {
	if o == nil || o.Name2 == nil {
		return nil, false
	}
	return o.Name2, true
}

// HasName2 returns a boolean if a field has been set.
func (o *ItemTexts) HasName2() bool {
	if o != nil && o.Name2 != nil {
		return true
	}

	return false
}

// SetName2 gets a reference to the given string and assigns it to the Name2 field.
func (o *ItemTexts) SetName2(v string) {
	o.Name2 = &v
}

// GetName3 returns the Name3 field value if set, zero value otherwise.
func (o *ItemTexts) GetName3() string {
	if o == nil || o.Name3 == nil {
		var ret string
		return ret
	}
	return *o.Name3
}

// GetName3Ok returns a tuple with the Name3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTexts) GetName3Ok() (*string, bool) {
	if o == nil || o.Name3 == nil {
		return nil, false
	}
	return o.Name3, true
}

// HasName3 returns a boolean if a field has been set.
func (o *ItemTexts) HasName3() bool {
	if o != nil && o.Name3 != nil {
		return true
	}

	return false
}

// SetName3 gets a reference to the given string and assigns it to the Name3 field.
func (o *ItemTexts) SetName3(v string) {
	o.Name3 = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *ItemTexts) GetShortDescription() string {
	if o == nil || o.ShortDescription == nil {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTexts) GetShortDescriptionOk() (*string, bool) {
	if o == nil || o.ShortDescription == nil {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *ItemTexts) HasShortDescription() bool {
	if o != nil && o.ShortDescription != nil {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *ItemTexts) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ItemTexts) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTexts) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ItemTexts) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ItemTexts) SetDescription(v string) {
	o.Description = &v
}

// GetMetaDescription returns the MetaDescription field value if set, zero value otherwise.
func (o *ItemTexts) GetMetaDescription() string {
	if o == nil || o.MetaDescription == nil {
		var ret string
		return ret
	}
	return *o.MetaDescription
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTexts) GetMetaDescriptionOk() (*string, bool) {
	if o == nil || o.MetaDescription == nil {
		return nil, false
	}
	return o.MetaDescription, true
}

// HasMetaDescription returns a boolean if a field has been set.
func (o *ItemTexts) HasMetaDescription() bool {
	if o != nil && o.MetaDescription != nil {
		return true
	}

	return false
}

// SetMetaDescription gets a reference to the given string and assigns it to the MetaDescription field.
func (o *ItemTexts) SetMetaDescription(v string) {
	o.MetaDescription = &v
}

// GetTechnicalData returns the TechnicalData field value if set, zero value otherwise.
func (o *ItemTexts) GetTechnicalData() string {
	if o == nil || o.TechnicalData == nil {
		var ret string
		return ret
	}
	return *o.TechnicalData
}

// GetTechnicalDataOk returns a tuple with the TechnicalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTexts) GetTechnicalDataOk() (*string, bool) {
	if o == nil || o.TechnicalData == nil {
		return nil, false
	}
	return o.TechnicalData, true
}

// HasTechnicalData returns a boolean if a field has been set.
func (o *ItemTexts) HasTechnicalData() bool {
	if o != nil && o.TechnicalData != nil {
		return true
	}

	return false
}

// SetTechnicalData gets a reference to the given string and assigns it to the TechnicalData field.
func (o *ItemTexts) SetTechnicalData(v string) {
	o.TechnicalData = &v
}

// GetUrlPath returns the UrlPath field value if set, zero value otherwise.
func (o *ItemTexts) GetUrlPath() string {
	if o == nil || o.UrlPath == nil {
		var ret string
		return ret
	}
	return *o.UrlPath
}

// GetUrlPathOk returns a tuple with the UrlPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTexts) GetUrlPathOk() (*string, bool) {
	if o == nil || o.UrlPath == nil {
		return nil, false
	}
	return o.UrlPath, true
}

// HasUrlPath returns a boolean if a field has been set.
func (o *ItemTexts) HasUrlPath() bool {
	if o != nil && o.UrlPath != nil {
		return true
	}

	return false
}

// SetUrlPath gets a reference to the given string and assigns it to the UrlPath field.
func (o *ItemTexts) SetUrlPath(v string) {
	o.UrlPath = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *ItemTexts) GetKeywords() string {
	if o == nil || o.Keywords == nil {
		var ret string
		return ret
	}
	return *o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemTexts) GetKeywordsOk() (*string, bool) {
	if o == nil || o.Keywords == nil {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *ItemTexts) HasKeywords() bool {
	if o != nil && o.Keywords != nil {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given string and assigns it to the Keywords field.
func (o *ItemTexts) SetKeywords(v string) {
	o.Keywords = &v
}

func (o ItemTexts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Lang != nil {
		toSerialize["lang"] = o.Lang
	}
	if o.Name1 != nil {
		toSerialize["name1"] = o.Name1
	}
	if o.Name2 != nil {
		toSerialize["name2"] = o.Name2
	}
	if o.Name3 != nil {
		toSerialize["name3"] = o.Name3
	}
	if o.ShortDescription != nil {
		toSerialize["shortDescription"] = o.ShortDescription
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.MetaDescription != nil {
		toSerialize["metaDescription"] = o.MetaDescription
	}
	if o.TechnicalData != nil {
		toSerialize["technicalData"] = o.TechnicalData
	}
	if o.UrlPath != nil {
		toSerialize["urlPath"] = o.UrlPath
	}
	if o.Keywords != nil {
		toSerialize["keywords"] = o.Keywords
	}
	return json.Marshal(toSerialize)
}

type NullableItemTexts struct {
	value *ItemTexts
	isSet bool
}

func (v NullableItemTexts) Get() *ItemTexts {
	return v.value
}

func (v *NullableItemTexts) Set(val *ItemTexts) {
	v.value = val
	v.isSet = true
}

func (v NullableItemTexts) IsSet() bool {
	return v.isSet
}

func (v *NullableItemTexts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemTexts(val *ItemTexts) *NullableItemTexts {
	return &NullableItemTexts{value: val, isSet: true}
}

func (v NullableItemTexts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemTexts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


