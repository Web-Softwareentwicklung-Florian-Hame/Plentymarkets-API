/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// VariationProperty variation property model
type VariationProperty struct {
	Id *int32 `json:"id,omitempty"`
	ItemId *int32 `json:"itemId,omitempty"`
	PropertyId *int32 `json:"propertyId,omitempty"`
	PropertySelectionId *int32 `json:"propertySelectionId,omitempty"`
	ValueInt *int32 `json:"valueInt,omitempty"`
	ValueFloat *float32 `json:"valueFloat,omitempty"`
	Surcharge *float32 `json:"surcharge,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	VariationId *int32 `json:"variationId,omitempty"`
	Names *[]VariationPropertyName `json:"names,omitempty"`
	Property *VariationPropertyProperty `json:"property,omitempty"`
}

// NewVariationProperty instantiates a new VariationProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariationProperty() *VariationProperty {
	this := VariationProperty{}
	return &this
}

// NewVariationPropertyWithDefaults instantiates a new VariationProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariationPropertyWithDefaults() *VariationProperty {
	this := VariationProperty{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VariationProperty) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationProperty) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VariationProperty) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *VariationProperty) SetId(v int32) {
	o.Id = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *VariationProperty) GetItemId() int32 {
	if o == nil || o.ItemId == nil {
		var ret int32
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationProperty) GetItemIdOk() (*int32, bool) {
	if o == nil || o.ItemId == nil {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *VariationProperty) HasItemId() bool {
	if o != nil && o.ItemId != nil {
		return true
	}

	return false
}

// SetItemId gets a reference to the given int32 and assigns it to the ItemId field.
func (o *VariationProperty) SetItemId(v int32) {
	o.ItemId = &v
}

// GetPropertyId returns the PropertyId field value if set, zero value otherwise.
func (o *VariationProperty) GetPropertyId() int32 {
	if o == nil || o.PropertyId == nil {
		var ret int32
		return ret
	}
	return *o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationProperty) GetPropertyIdOk() (*int32, bool) {
	if o == nil || o.PropertyId == nil {
		return nil, false
	}
	return o.PropertyId, true
}

// HasPropertyId returns a boolean if a field has been set.
func (o *VariationProperty) HasPropertyId() bool {
	if o != nil && o.PropertyId != nil {
		return true
	}

	return false
}

// SetPropertyId gets a reference to the given int32 and assigns it to the PropertyId field.
func (o *VariationProperty) SetPropertyId(v int32) {
	o.PropertyId = &v
}

// GetPropertySelectionId returns the PropertySelectionId field value if set, zero value otherwise.
func (o *VariationProperty) GetPropertySelectionId() int32 {
	if o == nil || o.PropertySelectionId == nil {
		var ret int32
		return ret
	}
	return *o.PropertySelectionId
}

// GetPropertySelectionIdOk returns a tuple with the PropertySelectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationProperty) GetPropertySelectionIdOk() (*int32, bool) {
	if o == nil || o.PropertySelectionId == nil {
		return nil, false
	}
	return o.PropertySelectionId, true
}

// HasPropertySelectionId returns a boolean if a field has been set.
func (o *VariationProperty) HasPropertySelectionId() bool {
	if o != nil && o.PropertySelectionId != nil {
		return true
	}

	return false
}

// SetPropertySelectionId gets a reference to the given int32 and assigns it to the PropertySelectionId field.
func (o *VariationProperty) SetPropertySelectionId(v int32) {
	o.PropertySelectionId = &v
}

// GetValueInt returns the ValueInt field value if set, zero value otherwise.
func (o *VariationProperty) GetValueInt() int32 {
	if o == nil || o.ValueInt == nil {
		var ret int32
		return ret
	}
	return *o.ValueInt
}

// GetValueIntOk returns a tuple with the ValueInt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationProperty) GetValueIntOk() (*int32, bool) {
	if o == nil || o.ValueInt == nil {
		return nil, false
	}
	return o.ValueInt, true
}

// HasValueInt returns a boolean if a field has been set.
func (o *VariationProperty) HasValueInt() bool {
	if o != nil && o.ValueInt != nil {
		return true
	}

	return false
}

// SetValueInt gets a reference to the given int32 and assigns it to the ValueInt field.
func (o *VariationProperty) SetValueInt(v int32) {
	o.ValueInt = &v
}

// GetValueFloat returns the ValueFloat field value if set, zero value otherwise.
func (o *VariationProperty) GetValueFloat() float32 {
	if o == nil || o.ValueFloat == nil {
		var ret float32
		return ret
	}
	return *o.ValueFloat
}

// GetValueFloatOk returns a tuple with the ValueFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationProperty) GetValueFloatOk() (*float32, bool) {
	if o == nil || o.ValueFloat == nil {
		return nil, false
	}
	return o.ValueFloat, true
}

// HasValueFloat returns a boolean if a field has been set.
func (o *VariationProperty) HasValueFloat() bool {
	if o != nil && o.ValueFloat != nil {
		return true
	}

	return false
}

// SetValueFloat gets a reference to the given float32 and assigns it to the ValueFloat field.
func (o *VariationProperty) SetValueFloat(v float32) {
	o.ValueFloat = &v
}

// GetSurcharge returns the Surcharge field value if set, zero value otherwise.
func (o *VariationProperty) GetSurcharge() float32 {
	if o == nil || o.Surcharge == nil {
		var ret float32
		return ret
	}
	return *o.Surcharge
}

// GetSurchargeOk returns a tuple with the Surcharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationProperty) GetSurchargeOk() (*float32, bool) {
	if o == nil || o.Surcharge == nil {
		return nil, false
	}
	return o.Surcharge, true
}

// HasSurcharge returns a boolean if a field has been set.
func (o *VariationProperty) HasSurcharge() bool {
	if o != nil && o.Surcharge != nil {
		return true
	}

	return false
}

// SetSurcharge gets a reference to the given float32 and assigns it to the Surcharge field.
func (o *VariationProperty) SetSurcharge(v float32) {
	o.Surcharge = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *VariationProperty) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationProperty) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VariationProperty) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *VariationProperty) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VariationProperty) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationProperty) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VariationProperty) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *VariationProperty) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetVariationId returns the VariationId field value if set, zero value otherwise.
func (o *VariationProperty) GetVariationId() int32 {
	if o == nil || o.VariationId == nil {
		var ret int32
		return ret
	}
	return *o.VariationId
}

// GetVariationIdOk returns a tuple with the VariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationProperty) GetVariationIdOk() (*int32, bool) {
	if o == nil || o.VariationId == nil {
		return nil, false
	}
	return o.VariationId, true
}

// HasVariationId returns a boolean if a field has been set.
func (o *VariationProperty) HasVariationId() bool {
	if o != nil && o.VariationId != nil {
		return true
	}

	return false
}

// SetVariationId gets a reference to the given int32 and assigns it to the VariationId field.
func (o *VariationProperty) SetVariationId(v int32) {
	o.VariationId = &v
}

// GetNames returns the Names field value if set, zero value otherwise.
func (o *VariationProperty) GetNames() []VariationPropertyName {
	if o == nil || o.Names == nil {
		var ret []VariationPropertyName
		return ret
	}
	return *o.Names
}

// GetNamesOk returns a tuple with the Names field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationProperty) GetNamesOk() (*[]VariationPropertyName, bool) {
	if o == nil || o.Names == nil {
		return nil, false
	}
	return o.Names, true
}

// HasNames returns a boolean if a field has been set.
func (o *VariationProperty) HasNames() bool {
	if o != nil && o.Names != nil {
		return true
	}

	return false
}

// SetNames gets a reference to the given []VariationPropertyName and assigns it to the Names field.
func (o *VariationProperty) SetNames(v []VariationPropertyName) {
	o.Names = &v
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *VariationProperty) GetProperty() VariationPropertyProperty {
	if o == nil || o.Property == nil {
		var ret VariationPropertyProperty
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationProperty) GetPropertyOk() (*VariationPropertyProperty, bool) {
	if o == nil || o.Property == nil {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *VariationProperty) HasProperty() bool {
	if o != nil && o.Property != nil {
		return true
	}

	return false
}

// SetProperty gets a reference to the given VariationPropertyProperty and assigns it to the Property field.
func (o *VariationProperty) SetProperty(v VariationPropertyProperty) {
	o.Property = &v
}

func (o VariationProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ItemId != nil {
		toSerialize["itemId"] = o.ItemId
	}
	if o.PropertyId != nil {
		toSerialize["propertyId"] = o.PropertyId
	}
	if o.PropertySelectionId != nil {
		toSerialize["propertySelectionId"] = o.PropertySelectionId
	}
	if o.ValueInt != nil {
		toSerialize["valueInt"] = o.ValueInt
	}
	if o.ValueFloat != nil {
		toSerialize["valueFloat"] = o.ValueFloat
	}
	if o.Surcharge != nil {
		toSerialize["surcharge"] = o.Surcharge
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.VariationId != nil {
		toSerialize["variationId"] = o.VariationId
	}
	if o.Names != nil {
		toSerialize["names"] = o.Names
	}
	if o.Property != nil {
		toSerialize["property"] = o.Property
	}
	return json.Marshal(toSerialize)
}

type NullableVariationProperty struct {
	value *VariationProperty
	isSet bool
}

func (v NullableVariationProperty) Get() *VariationProperty {
	return v.value
}

func (v *NullableVariationProperty) Set(val *VariationProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableVariationProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableVariationProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariationProperty(val *VariationProperty) *NullableVariationProperty {
	return &NullableVariationProperty{value: val, isSet: true}
}

func (v NullableVariationProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariationProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


