openapi: 3.0.1
info:
  title: Plentymarkets-API
  version: 1.0.0

servers:
  - url: /

paths:
  /rest/login:
    post:
      summary: login for authentication at rest api
      description: needed for authenticate at the plentymarkets rest api
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/RestLoginBody'
      responses:
        200:
          description: returns token data after successful authentication
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/RestLoginResponse'
  /rest/items/variations:
    get:
      summary: fetching variations with pagination and the possibility to fetch additional related data by 'with' query param
      description: fetching variations
      parameters:
        - in: query
          name: with
          schema:
            type: array
            items:
              type: string
              enum:
                - properties
                - variationProperties
                - variationBarcodes
                - variationBundleComponents
                - variationComponentBundles
                - variationSalesPrices
                - marketItemNumbers
                - variationCategories
                - variationClients
                - variationMarkets
                - variationDefaultCategory
                - variationSuppliers
                - variationWarehouses
                - images
                - itemImages
                - variationAttributeValues
                - variationSkus
                - variationAdditionalSkus
                - unit
                - parent
                - item
                - stock
          explode: false
        - in: query
          name: lang
          description: The language of the variation information.
          schema:
            type: string
        - in: query
          name: page
          description: Limits the results to a specific page.
          schema:
            type: integer
        - in: query
          name: itemsPerPage
          description: Limits the number of results listed per page to a specific number.
          schema:
            type: integer
        - in: query
          name: id
          description: Filter restricts the list of results to variations with the specified variation ID. An variation ID must be specified. More than one ID should be separated by commas.
          schema:
            type: array
            items:
              type: integer
          explode: false
        - in: query
          name: itemId
          description: Filter restricts the list of results to variations with the specified item ID. An item ID must be specified. More than one ID should be separated by commas.
          schema:
            type: array
            items:
              type: integer
          explode: false
        - in: query
          name: variationTagId
          description: Filter restricts the list of results to variations with the specified item name. An item name must be specified.
          schema:
            type: array
            items:
              type: integer
          explode: false
        - in: query
          name: itemName
          description: Filter restricts the list of results to variations with the specified item name
          schema:
            type: string
        - in: query
          name: flagOne
          description: Filter restricts the list of results to variations of items with the flag one.
          schema:
            type: integer
        - in: query
          name: flagTwo
          description: Filter restricts the list of results to variations of items with the flag two.
          schema:
            type: integer
        - in: query
          name: storeSpecial
          description: "Filter restricts the list of results to variations of items with the specified store special. The following values are allowed: 0 (None), 1 (Special offer), 2 (New item), 3 (Top item)"
          schema:
            type: number
            enum:
              - 0
              - 1
              - 2
              - 3
        - in: query
          name: categoryId
          description: Filter restricts the list of results to variations with the specified category id
          schema:
            type: integer
        - in: query
          name: isMain
          description: Filter restricts the list of results to variations that are main variations.
          schema:
            type: boolean
        - in: query
          name: isActive
          description: Filter restricts the list of results to variations that are active.
          schema:
            type: boolean
        - in: query
          name: barcode
          description: Filter restricts the list of results to variations with the specified barcode.
          schema:
            type: string
        - in: query
          name: numberExact
          description: Filter restricts the list of results to the variation with the variation number specified.
          schema:
            type: string
        - in: query
          name: numberFuzzy
          description: "Filter restricts the list of results to variations with numbers that contain the variation number specified (SQL LIKE operator). For example, if variations with variation numbers 1 to 400 exist in the system, filtering by 12 will list variation numbers 12, 112, 120-129, 212 and 312."
          schema:
            type: string
        - in: query
          name: isBundle
          description: Filter restricts the list of results to variations to which variations were added to create a bundle.
          schema:
            type: boolean
        - in: query
          name: plentyId
          description: Filter restricts the list of results to variations that are visible in specified clients. Separate more than one client by commas.
          schema:
            type: array
            items:
              type: integer
          explode: false
        - in: query
          name: referrerId
          description: Filter restricts the list of results to variations that are visible in specified markets. Separate more than one referrer by commas.
          schema:
            type: array
            items:
              type: number
          explode: false
        - in: query
          name: supplierNumber
          description: Filter restricts the list of results to variations with the specified supplier number.
          schema:
            type: string
        - in: query
          name: sku
          description: "Filter restricts the list of results to variations with the specified SKU. In additional, results can also be restricted to a specific referrer by specifying the referrer ID after a colon. Example: L0R3MIP5UM:104.1"
          schema:
            type: string
        - in: query
          name: manufacturerId
          description: Filter restricts the list of results to variations with the specified manufacturer ID.
          schema:
            type: integer
        - in: query
          name: updatedBetween
          description: Filter restricts the list of results to variations updated during the specified period. The end date (to) is optional. If no end date is specified, variations updated between the start date (from) and the present will be listed. The dates can be specified as unix timestamps or in the ISO 8601 date format. Start date and optional end date are separated by a comma. For example, .../variations?updatedBetween=1451606400,1456790400 will list variations updated between 2016-01-01 and 2016-03-01. .../variations?updatedBetween=1451606400 will list variations updated since 2016-01-01. The PHP function strtotime is also supported.
          schema:
            type: string
        - in: query
          name: createdBetween
          description: Filter restricts the list of results to variations created during the specified period. The end date (to) is optional. If no end date is specified, variations created between the start date (from) and the present will be listed. The dates can be specified as unix timestamps or in the ISO 8601 date format. Start date and optional end date are separated by a comma. For example, .../variations?createdBetween=1451606400,1456790400 will list variations created between 2016-01-01 and 2016-03-01. .../variations?createdBetween=1451606400 will list variations created since 2016-01-01. The PHP function strtotime is also supported.
          schema:
            type: string
        - in: query
          name: relatedUpdatedBetween
          description: Filter restricts the list of results to those variations for which related information was updated during the specified period. Related information is defined as information linked to the variation, i.e. barcodes, categories, images, markets, clients (stores), prices, suppliers, warehouses and the default category. See variationUpdatedBetween for supported formats.
          schema:
            type: string
        - in: query
          name: itemDescription
          description: Filter restricts the list of results to variations with descriptions that contain the specified string.
          schema:
            type: string
        - in: query
          name: stockWarehouseId
          description: Filter restricts the list of results to variations which have physical stock on the given warehouse.
          schema:
            type: string
        - in: query
          name: supplierId
          description: Filter restricts the list of results to variations with the specified supplier ID.
          schema:
            type: integer

      responses:
        200:
          description: variation pagination response
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/VariationPagination'
    put:
      summary: updating up to 50 variations
      description: updating up to 50 variations
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Variation'
      responses:
        200:
          description: successful updated items or in case multiple variations were updated errors are in 'failed' field
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/MultipleVariationsUpdatedResponse'
  /rest/items/{itemId}/variations:
    post:
      summary: creating variations for an item
      description: creating variations for an item
      parameters:
        - in: path
          name: itemId
          schema:
            type: integer
          required: true
          description: numeric itemId of the item where the variations belongs to
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Variation'
      responses:
        200:
          description: successful created variation response
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Variation'
  /rest/categories:
    get:
      summary: fetching categories with pagination and optional filter queries
      description: fetching categories
      parameters:
        - in: query
          name: page
          description: Limits the results to a specific page.
          schema:
            type: integer

      responses:
        200:
          description: category variation response
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CategoryPagination'
    post:
      summary: creating new categories
      description: creating new categories
      responses:
        200:
          description: successfuly created categories
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Category'
  /rest/items:
    get:
      summary: fetching items with optional extra data or filters given in query parameter
      description: fetching items with optional extra data or filters given in query parameter
      parameters:
        - in: query
          description: Includes the specified variation information in the results
          name: with
          schema:
            type: array
            items:
              type: string
              enum:
                - itemProperties
                - itemCrossSelling
                - variations
                - itemImages
                - itemShippingProfiles
                - ebayTitles
        - in: query
          name: lang
          description: The language of the variation information.
          schema:
            type: string
        - in: query
          name: page
          description: Limits the results to a specific page.
          schema:
            type: integer
        - in: query
          name: itemsPerPage
          description: Limits the number of results listed per page to a specific number.
          schema:
            type: integer
        - in: query
          name: name
          description: Filter restricts the list of results to items with the specified item name.
          schema:
            type: string
        - in: query
          name: manufacturerId
          description: Filter restricts the list of results to items with the specified manufacturerId.
          schema:
            type: integer
        - in: query
          name: id
          description: Filter restricts the list of results to items with the specified ID. More than one ID should be separated by commas.
          schema:
            type: array
            items:
              type: integer
          explode: false
        - in: query
          name: flagOne
          description: Filter restricts the list of results to items with the specified flagOne.
          schema:
            type: integer
        - in: query
          name: flagTwo
          description: Filter restricts the list of results to items with the specified flagTwo.
          schema:
            type: integer
        - in: query
          name: updatedBetween
          description: Filter restricts the list of results to items updated during the specified period. The end date (to) is optional. If no end date is specified, items updated between the start date (from) and the present will be listed. The dates can be specified as unix timestamps or in the ISO 8601 date format. Start date and optional end date are separated by a comma. For example, .../items?updatedBetween=1451606400,1456790400 will list items updated between 2016-01-01 and 2016-03-01. .../items?updatedBetween=1451606400 will list items updated since 2016-01-01. The PHP function strtotime is also supported.
          schema:
            type: string
        - in: query
          name: variationUpdatedBetween
          description: Filter restricts the list of results to items with variations that were updated during the specified period. The end date (to) is optional. If no end date is specified, items with variations updated between the start date (from) and the present will be listed. The dates can be specified as unix timestamps or in the ISO 8601 date format. Start date and optional end date are separated by a comma. For example, .../items?updatedBetween=1451606400,1456790400 will list items with variations that were updated between 2016-01-01 and 2016-03-01. .../items?updatedBetween=1451606400 will list items with variations that were updated since 2016-01-01. The PHP function strtotime is also supported.
          schema:
            type: string
        - in: query
          name: variationRelatedUpdatedBetween
          description: Filter restricts the list of results to items with variations for which related information was updated during the specified period. Related information is defined as information linked to the variation, i.e. barcodes, categories, images, markets, clients (stores), prices, suppliers, warehouses and the default category. See variationUpdatedBetween for supported formats.
          schema:
            type: string
        - in: query
          name: or
          description: "Filters can be defined in this param to link them via OR instead of AND. The syntax looks like the following: or=(updatedBetween=1573050718&varitionUpdatedBetween=1573050718). Everything in the brackets is written in the normal URL-Syntax. The or-param can be used multiple times if it is used like this: or[]=(...)&or[]=(...)"
          schema:
            type: string
      responses:
        200:
          description: successfuly fetched items
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemPagination'
    post:
      summary: creates items
      description: creates items
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ItemRequest'

      responses:
        200:
          description: successfuly created item
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CreateItemsResponse'
  /rest/items/attributes:
    get:
      summary: "fetching attributes with pagination"
      description: "fetching attributes with pagination"
      parameters:
        - in: query
          name: page
          description: Limits the results to a specific page.
          schema:
            type: integer
        - in: query
          name: with
          schema:
            type: array
            items:
              type: string
              enum:
                - names
                - values
                - maps

      responses:
        200:
          description: "successful get attributes response"
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/AttributePagination"
    post:
      summary: "creating new attributes"
      description: "creating new attributes"
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/Attribute"
      responses:
        200:
          description: successful created attribute response
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Attribute"
  /rest/items/attributes/{attributeId}/values:
    get:
      summary: "fetching attributes values with pagination"
      description: "fetching attributes values with pagination"
      parameters:
        - in: path
          name: attributeId
          schema:
            type: integer
          required: true
        - in: query
          name: page
          description: Limits the results to a specific page.
          schema:
            type: integer
        - in: query
          name: with
          schema:
            type: array
            items:
              type: string
              enum:
                - attribute
                - names
                - marketNames
                - valueMap

      responses:
        200:
          description: "successful get attribute values response"
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/AttributeValuePagination"
    post:
      summary: "creating new attribute values"
      description: "creating new attribute values"
      parameters:
        - in: path
          name: attributeId
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/AttributeValue"
      responses:
        200:
          description: successful created attribute response
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/AttributeValue"
  /rest/items/attributes/{attributeId}/names:
    post:
      summary: "creating names for attribute"
      description: "creating names for attribute"
      parameters:
        - in: path
          name: attributeId
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/AttributeName"
      responses:
        200:
          description: "successfull created attribute name"
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/AttributeName"
  /rest/items/attribute_values/{valueId}/names:
    post:
      summary: "creating attribute values names"
      description: "creating attribute values names"
      parameters:
        - in: path
          name: valueId
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/AttributeName"
      responses:
        200:
          description: successful created attribute value name
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/AttributeName"
  /rest/items/manufacturers:
    get:
      summary: "list manufacturers"
      description: "list manufacturers"
      parameters:
        - in: query
          name: page
          description: Limits the results to a specific page.
          schema:
            type: integer
        - in: query
          name: with
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - comissions
                - externals
        - in: query
          name: updatedAt
          description: "Filter restricts the list of results to records updated after the specified date. The date can be specified as unix timestamps or in the ISO 8601 date format. The PHP function strtotime is also supported."
          schema:
            type: string
        - in: query
          name: name
          description: "Filter restricts the list of results to records with specified name."
          schema:
            type: string
      responses:
        200:
          description: manufactuers pagination response
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/ManufacturersPagination"
    post:
      summary: "creates a manufacturer"
      description: "creates a manufacturer"
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/Manufacturer"
      responses:
        200:
          description: successfuly created manufacturer
          content:
            application/json;charset=utf-8:
              schema:
                $ref: "#/components/schemas/Manufacturer"
  /rest/stockmanagement/warehouses/{warehouseId}/stock/correction:
    parameters:
      - in: path
        name: warehouseId
        required: true
        schema:
          type: integer
    put:
      summary: set stocks
      description: set stocks
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: "#/components/schemas/StockCorrections"
      responses:
        200:
          description: successfuly updated stocks - no response body
  /rest/elastic-sync/sync/{syncId}/run:
    post:
      summary: "runs an existing elastic sync"
      description: "runs an existing elastic sync"
      parameters:
        - in: path
          name: syncId
          required: true
          schema:
            type: integer
      responses:
        200:
          description: successfuly started sync
  /rest/orders/search:
    get:
      summary: searches for orders. The results can be restricted by using filters
      description: search for orders
      parameters:
        - in: query
          name: orderId
          schema:
            type: integer
        - in: query
          name: plentyId
          schema:
            type: integer
        - in: query
          name: orderTypeId
          schema:
            type: string
        - in: query
          name: statusId
          schema:
            type: number
        - in: query
          name: referrerId
          schema:
            type: number
        - in: query
          name: ownerId
          schema:
            type: integer
        - in: query
          name: locationId
          schema:
            type: integer
        - in: query
          name: updatedAt
          schema:
            format: date-time
            type: string
        - in: query
          name: createdAt
          schema:
            type: string
        - in: query
          name: lockStatus
          schema:
            type: string
        - in: query
          name: orderAddressData
          schema:
            type: string
        - in: query
          name: contactData
          schema:
            type: string
        - in: query
          name: orderItemTypeId
          schema:
            type: integer
        - in: query
          name: itemId
          schema:
            type: integer
        - in: query
          name: itemVariationId
          schema:
            type: integer
        - in: query
          name: variationNumber
          schema:
            type: string
        - in: query
          name: orderItemName
          schema:
            type: string
        - in: query
          name: documentNumber
          schema:
            type: string
        - in: query
          name: hasValidInvoice
          schema:
            type: boolean
        - in: query
          name: packageNumbber
          schema:
            type: string
        - in: query
          name: contactClassId
          schema:
            type: string
        - in: query
          name: itemManufacturerId
          schema:
            type: integer
        - in: query
          name: orderItemWarehouseId
          schema:
            type: integer
        - in: query
          name: invoiceTotalSystemCurrency
          schema:
            type: number
        - in: query
          name: isDeliveryAddressPackingStation
          schema:
            type: boolean
        - in: query
          name: serialNumber
          schema:
            type: string
        - in: query
          name: isGuestContact
          schema:
            type: boolean
        - in: query
          name: variationSupplierId
          schema:
            type: integer
        - in: query
          name: orderItemReferrerId
          schema:
            type: number
        - in: query
          name: tag
          schema:
            type: integer
        - in: query
          name: excludeMainOrders
          schema:
            type: boolean
        - in: query
          name: soldCouponCode
          schema:
            type: string
        - in: query
          name: redeemedCouponCode
          schema:
            type: string
        - in: query
          name: orderBillingAddressCountryId
          schema:
            type: integer
        - in: query
          name: orderDeliveryAddressCountryId
          schema:
            type: integer
        - in: query
          name: shippingServiceProviderId
          schema:
            type: integer
        - in: query
          name: shippingServiceProviderType
          schema:
            type: string
        - in: query
          name: shippingStatus
          schema:
            type: string
        - in: query
          name: shippingShipmentDate
          schema:
            type: string
        - in: query
          name: sortBy
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: itemsPerPage
          schema:
            type: integer
        - in: query
          name: with[]
          explode: true
          style: form
          schema:
            type: array
            items:
              type: string
              enum:
                - addresses
                - relations
                - comments
                - location
                - payments
                - documents
                - contactSender
                - contactReceiver
                - warehouseSender
                - warehouseReceiver
                - orderItems.variation
                - orderItems.amounts
                - orderItems.variation.propertiesV2
                - orderItems.giftCardCodes
                - orderItems.transactions
                - orderItems.serialNumbers
                - orderItems.variationBarcodes
                - orderItems.comments
                - originOrderReferences
                - shippingPackages
                - shippingPackages.items
                - shippingInformation
                - paymentTerms
        - in: query
          name: lazyLoaded
          schema:
            type: boolean

      responses:
        200:
          description: "OK"
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchOrderPagination'


  /rest/pim/variations:
    get:
      summary: "Lists variations"
      description: "Lists variations with the specified data."
      responses:
        200:
          description: "OK"
          content:
            application/json;charset=utf-8:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    description: "Current page of the response"
                  
                  totalsCount:
                    type: integer
                    description: "The total number of entries in the response"
                  
                  isLastPage:
                    type: "boolean"
                    "description": "Flag that indicates if the page shown is the last page of the response"
                  
                  lastPageNumber: 
                    type: integer
                    description: "The last page number"
                  
                  firstOnPage: 
                    type: integer
                    description: "The index of the first item of the current page result"
                  
                  lastOnPage: 
                    type: integer
                    description: "The index of the last item of the current page result"
                  
                  itemsPerPage: 
                    type: integer
                    description: "The requested amount of items per result page"
                  
                  entries: 
                    type: array
                    description: "List of Variation"
                    items:
                      $ref: "#/components/schemas/PimVariation"
        "401":
          "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
      parameters:
        - in: query
          name: with
          required: false
          description: "Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li>'additionalSkus' = The additional skus of the variation.</li><li>'attributeValues' = The attribute values of the variation.</li><li>'attributeValues.attribute'/b> = Includes attributeValues. The attribute data to the related attribute ID.</li><li>'attributeValues.attributeValue' = Includes attributeValues. The attribute value data to the related attribute value ID.</li><li>'barcodes' = The barcodes of the variation.</li><li>'barcodes.barcode' = Includes barcodes. The barcode data to the related barcode ID.</li><li>'base' = The variation base.</li><li>'base.item' = Includes base. The item data of the variation.</li><li>'base.itemSerialNumber' = Includes base. The item serial numbers of the variation.</li><li>'base.feedback' = Includes base. The feedback of the variation.</li><li>'base.characteristics' = Includes base. The characteristics of the variation.</li><li>'base.crossSelling' = Includes base. The cross selling items of the variation.</li><li>'base.texts' = Includes base. The texts of the variation.</li><li>'base.availability' = Includes base. The availability data related to the variation's availability ID.</li><li>'base.images' = Includes base. The images linked to the item.</li><li>'base.shippingProfiles' = Includes base. The shipping profiles linked to the item.</li><li>'base.stock' = Includes base. The stock of the variation.</li><li>'base.stockStorageLocations' = Includes base. The stock storage locations of the variation.</li><li>'bundleComponents' = The bundle components of the variation.</li><li>'categories' = The categories of the variation.</li><li>'categories.category' = Includes categories. The related category data for each category ID.</li><li>'categories.categoryBranch' = Includes categories. The related category branch data for each category ID.</li><li>'clients' = The clients of the variation.</li><li>'defaultCategories' = The default categories of the variation</li><li>'defaultCategories.category' = Includes defaultCategories. The category data to the related category ID.</li><li>'images' = The images of the variation</li><li>'images.image' = Includes images. The image data to the related image ID.</li><li>'markets' = The markets of the variation.</li><li>'marketIdentNumbers' = The market ident numbers of the variation</li><li>'salesPrices' = The sales prices of the variation.</li><li>'salesPrices.salesPrice' = Includes salesPrices. The sales price data to the related sales price ID.</li><li>'skus' = The skus of the variation.</li><li>'supplier' = The supplier of the variation.</li><li>'supplier.supplier' = Includes supplier. The contact data to the related supplier ID.</li><li>'timestamps' = The timetamps of the variation.</li><li>'warehouses' = The warehouses of the variation</li><li>'warehouses.warehouse' = Includes warehouses. The warehouse data to the related warehouse ID.</li><li>'unit' = The unit of the variation</li><li>'unit.unit' = Includes unit. The unit data of the related unit ID.</li><li>'tags' = The tags of the variation.</li><li>'tags.tag' = Includes tags. The tag data to the related tag ID.</li><li>'properties' = The properties of the variation.</li><li>'properties.property' = Includes properties. The property data to the related property ID.</li></ul>"
          schema:
            type: array
            items:
              type: string
              enum:
                - additionalSkus
                - attributeValues
                - attributeValues.attribute
                - attributeValues.attributeValue
                - barcodes
                - barcodes.barcode
                - base
                - base.item
                - base.itemSerialNumber
                - base.feedback
                - base.characteristics
                - base.crossSelling
                - base.texts
                - base.availability
                - base.images
                - base.shippingProfiles
                - base.stock
                - base.stockStorageLocations
                - bundleComponents
                - categories
                - categories.category
                - categories.categoryBranch
                - clients
                - defaultCategories
                - defaultCategories.category
                - images
                - images.image
                - markets
                - marketIdentNumbers
                - salesPrices
                - salesPrices.salesPrice
                - skus
                - supplier
                - supplier.supplier
                - timestamps
                - warehouses
                - warehouses.warehouse
                - unit
                - tags
                - tags.tag
                - properties
                - properties.property

        - in: query
          name: sortBy
          schema:
            type: string
          required: false
          description: "Sorts the results. Append '_asc' or '_desc' to specify the sorting order. '_desc' is the default value if no other is specified. More than one parameter should be separated by commas. The following parameters are available:<ul><li>'id'</li><li>'itemId'</li><li>'isMain'</li><li>'position'</li><li>'availabilityId'</li><li>'createdAt'</li><li>'updatedAt'</li><li>'itemUpdatedAt'</li><li>'relatedUpdatedAt'</li><li>'variationName'</li><li>'number'</li></ul>"

        - in: query
          name: groupBy
          schema:
            type: string
          required: false
          description: "Groups the result. The following parameters are available:<ul><li>'itemId' = Groups the result by the item ID.</li><li>'itemAttributeValue' = Groups the result by the attribute with the flag 'isGroupable'.</li></ul>"

        - in: query
          name: ids
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations with the specified IDs. More than one parameter should be separated by commas."

        - in: query
          name: itemId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations with the specified item ID."

        - in: query
          name: itemIds
          required: false
          description: "Filter restricts the list of results to variations with the specified item IDs. More than one parameter should be separated by commas."
          schema:
            type: string

        - in: query
          name: isActive
          required: false
          description: "Filter restricts the list of results to variations which are active/inactive."
          schema:
            type: boolean

        - in: query
          name: isMain
          required: false
          description: "Filter restricts the list of results to variations which are main/not main."
          schema:
            type: boolean

        - in: query
          name: isSalable
          schema:
            type: boolean
          required: false
          description: "Filter restricts the list of results to variations which are salable."

        - in: query
          name: supplierId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations which have the given supplier ID."

        - in: query
          name: availabilityIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations with the specified availability IDs. More than one parameter should be separated by commas."

        - in: query
          name: hasChildren
          schema:
            type: boolean
          required: false
          description: "Filter restricts the list of results to variations which have children."

        - in: query
          name: hasActiveChildren
          schema:
            type: boolean
          required: false
          description: "Filter restricts the list of results to variations which have active children."

        - in: query
          name: attributeId
          schema:
            type: integer
          required: false
          description: " Filter restricts the list of results to variations which have the specified attribute ID."

        - in: query
          name: anyAttributeId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified attribute IDs. More than one parameter should be separated by commas."

        - in: query
          name: allAttributeIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified attribute IDs. More than one parameter should be separated by commas."

        - in: query
          name: attributeValueId
          schema:
            type: integer
          required: false
          description: " Filter restricts the list of results to variations which have the specified attribute value ID."

        - in: query
          name: anyAttributeValueId
          schema:
            type: string
          required: false
          description: " Filter restricts the list of results to variations which have the any of the specified attribute value IDs. More than one parameter should be separated by commas."

        - in: query
          name: allAttributeValueIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified attribute value IDs. More than one parameter should be separated by commas."

        - in: query
          name: barcodeCode
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have a barcode with the specified code."

        - in: query
          name: barcodeId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations which have a barcode with the specified ID."

        - in: query
          name: bundleType
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations with the specified bundle type."

        - in: query
          name: categoryId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations which have the specified category ID."

        - in: query
          name: anyCategoryId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified category IDs. More than one parameter should be separated by commas."

        - in: query
          name: allCategoryIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified category IDs. More than one parameter should be separated by commas."

        - in: query
          name: anyCharacteristicId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified characteristic IDs."

        - in: query
          name: allCharacteristicIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified characteristic IDs."

        - in: query
          name: clientId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations which have the specified client ID."

        - in: query
          name: anyClientId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified client IDs. More than one parameter should be separated by commas."

        - in: query
          name: allClientIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified client IDs. More than one parameter should be separated by commas."

        - in: query
          name: automaticClientVisibilities
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified automatic client visibilities. More than one parameter should be separated by commas."

        - in: query
          name: imageHasMarketId
          schema:
            type: number
          required: false
          description: " Filter restricts the list of results to variations which have an image available for the specified market ID."

        - in: query
          name: flag1
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations with the specified flag one."

        - in: query
          name: flag2
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations with the specified flag two."

        - in: query
          name: manufacturerId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations with the specified manufacturer ID."

        - in: query
          name: anyManufacturerId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations with any of the specified manufacturer IDs."

        - in: query
          name: itemType
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have the specified item type."

        - in: query
          name: marketId
          schema:
            type: number
          required: false
          description: "Filter restricts the list of results to variations which have the specified market ID."

        - in: query
          name: anyMarketId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified market IDs."

        - in: query
          name: allMarketIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified market IDs."

        - in: query
          name: priceBetween
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have a sales price between the specified minimum and maximum value. Minimum and maximum value should be separated by a comma."

        - in: query
          name: priceBetweenById
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations where the specified sales price is between the specified minimum and maximum value. Sales price ID, Minimum and maximum value should be separated by a comma."

        - in: query
          name: anySalesPriceId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified sales price IDs. More than one parameter should be separated by commas."

        - in: query
          name: propertySelectionId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations which have the specified property selection ID."

        - in: query
          name: anyPropertySelectionId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified property selection IDs."

        - in: query
          name: allPropertySelectionIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified property selection IDs."

        - in: query
          name: hasNameInLanguage
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have a name in the specified language."

        - in: query
          name: createdAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have been created in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: updatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: itemCreatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose item has been created in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: itemUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose item has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: availabilityUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose availablity has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: stockUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose stock has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: "The requested page of results. Default value is 1."

        - in: query
          name: itemsPerPage
          schema:
            type: integer
          required: false
          description: "The number of results per page. Maximum value is 250. Default value is 50."

    put:
      summary: Create a list of variations and their related data
      description: " Creates a list of variations and their related data."
      responses:
        200:
          description: "OK"
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PimVariation'
        401:
          description: "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."

      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/PimVariation"

        

  /rest/pim/variations/scroll:
    get:
      summary: "Scrolls through variations"
      description: "Scrolls through variations with the specified data."
      responses:
        200:
          description: "OK"
          content:
            application/json;charset=utf-8:
              schema:
               $ref: '#/components/schemas/PimVariationScrollResponse'
        "401":
          "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
      parameters:
        - in: query
          name: with
          required: false
          description: "Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li>'additionalSkus' = The additional skus of the variation.</li><li>'attributeValues' = The attribute values of the variation.</li><li>'attributeValues.attribute'/b> = Includes attributeValues. The attribute data to the related attribute ID.</li><li>'attributeValues.attributeValue' = Includes attributeValues. The attribute value data to the related attribute value ID.</li><li>'barcodes' = The barcodes of the variation.</li><li>'barcodes.barcode' = Includes barcodes. The barcode data to the related barcode ID.</li><li>'base' = The variation base.</li><li>'base.item' = Includes base. The item data of the variation.</li><li>'base.itemSerialNumber' = Includes base. The item serial numbers of the variation.</li><li>'base.feedback' = Includes base. The feedback of the variation.</li><li>'base.characteristics' = Includes base. The characteristics of the variation.</li><li>'base.crossSelling' = Includes base. The cross selling items of the variation.</li><li>'base.texts' = Includes base. The texts of the variation.</li><li>'base.availability' = Includes base. The availability data related to the variation's availability ID.</li><li>'base.images' = Includes base. The images linked to the item.</li><li>'base.shippingProfiles' = Includes base. The shipping profiles linked to the item.</li><li>'base.stock' = Includes base. The stock of the variation.</li><li>'base.stockStorageLocations' = Includes base. The stock storage locations of the variation.</li><li>'bundleComponents' = The bundle components of the variation.</li><li>'categories' = The categories of the variation.</li><li>'categories.category' = Includes categories. The related category data for each category ID.</li><li>'categories.categoryBranch' = Includes categories. The related category branch data for each category ID.</li><li>'clients' = The clients of the variation.</li><li>'defaultCategories' = The default categories of the variation</li><li>'defaultCategories.category' = Includes defaultCategories. The category data to the related category ID.</li><li>'images' = The images of the variation</li><li>'images.image' = Includes images. The image data to the related image ID.</li><li>'markets' = The markets of the variation.</li><li>'marketIdentNumbers' = The market ident numbers of the variation</li><li>'salesPrices' = The sales prices of the variation.</li><li>'salesPrices.salesPrice' = Includes salesPrices. The sales price data to the related sales price ID.</li><li>'skus' = The skus of the variation.</li><li>'supplier' = The supplier of the variation.</li><li>'supplier.supplier' = Includes supplier. The contact data to the related supplier ID.</li><li>'timestamps' = The timetamps of the variation.</li><li>'warehouses' = The warehouses of the variation</li><li>'warehouses.warehouse' = Includes warehouses. The warehouse data to the related warehouse ID.</li><li>'unit' = The unit of the variation</li><li>'unit.unit' = Includes unit. The unit data of the related unit ID.</li><li>'tags' = The tags of the variation.</li><li>'tags.tag' = Includes tags. The tag data to the related tag ID.</li><li>'properties' = The properties of the variation.</li><li>'properties.property' = Includes properties. The property data to the related property ID.</li></ul>"
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - additionalSkus
                - attributeValues
                - attributeValues.attribute
                - attributeValues.attributeValue
                - barcodes
                - barcodes.barcode
                - base
                - base.item
                - base.itemSerialNumber
                - base.feedback
                - base.characteristics
                - base.crossSelling
                - base.texts
                - base.availability
                - base.images
                - base.shippingProfiles
                - base.stock
                - base.stockStorageLocations
                - bundleComponents
                - categories
                - categories.category
                - categories.categoryBranch
                - clients
                - defaultCategories
                - defaultCategories.category
                - images
                - images.image
                - markets
                - marketIdentNumbers
                - salesPrices
                - salesPrices.salesPrice
                - skus
                - supplier
                - supplier.supplier
                - timestamps
                - warehouses
                - warehouses.warehouse
                - unit
                - tags
                - tags.tag
                - properties
                - properties.property

        - in: query
          name: groupBy
          schema:
            type: string
          required: false
          description: "Groups the result. The following parameters are available:<ul><li>'itemId' = Groups the result by the item ID.</li><li>'itemAttributeValue' = Groups the result by the attribute with the flag 'isGroupable'.</li></ul>"

        - in: query
          name: itemsPerPage
          schema:
            type: integer
          required: false
          description: "Restricts the number of items per page. Maximum value is 250. Default value is 50."

        - in: query
          name: ids
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations with the specified IDs. More than one parameter should be separated by commas."

        - in: query
          name: itemId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations with the specified item ID."

        - in: query
          name: itemIds
          required: false
          description: "Filter restricts the list of results to variations with the specified item IDs. More than one parameter should be separated by commas."
          schema:
            type: string

        - in: query
          name: isActive
          required: false
          description: "Filter restricts the list of results to variations which are active/inactive."
          schema:
            type: boolean

        - in: query
          name: isMain
          required: false
          description: "Filter restricts the list of results to variations which are main/not main."
          schema:
            type: boolean

        - in: query
          name: isSalable
          schema:
            type: boolean
          required: false
          description: "Filter restricts the list of results to variations which are salable."

        - in: query
          name: supplierId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations which have the given supplier ID."

        - in: query
          name: availabilityIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations with the specified availability IDs. More than one parameter should be separated by commas."

        - in: query
          name: hasChildren
          schema:
            type: boolean
          required: false
          description: "Filter restricts the list of results to variations which have children."

        - in: query
          name: hasActiveChildren
          schema:
            type: boolean
          required: false
          description: "Filter restricts the list of results to variations which have active children."

        - in: query
          name: attributeId
          schema:
            type: integer
          required: false
          description: " Filter restricts the list of results to variations which have the specified attribute ID."

        - in: query
          name: anyAttributeId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified attribute IDs. More than one parameter should be separated by commas."

        - in: query
          name: allAttributeIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified attribute IDs. More than one parameter should be separated by commas."

        - in: query
          name: attributeValueId
          schema:
            type: integer
          required: false
          description: " Filter restricts the list of results to variations which have the specified attribute value ID."

        - in: query
          name: anyAttributeValueId
          schema:
            type: string
          required: false
          description: " Filter restricts the list of results to variations which have the any of the specified attribute value IDs. More than one parameter should be separated by commas."

        - in: query
          name: allAttributeValueIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified attribute value IDs. More than one parameter should be separated by commas."

        - in: query
          name: barcodeCode
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have a barcode with the specified code."

        - in: query
          name: barcodeId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations which have a barcode with the specified ID."

        - in: query
          name: bundleType
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations with the specified bundle type."

        - in: query
          name: categoryId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations which have the specified category ID."

        - in: query
          name: anyCategoryId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified category IDs. More than one parameter should be separated by commas."

        - in: query
          name: allCategoryIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified category IDs. More than one parameter should be separated by commas."

        - in: query
          name: anyCharacteristicId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified characteristic IDs."

        - in: query
          name: allCharacteristicIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified characteristic IDs."

        - in: query
          name: clientId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations which have the specified client ID."

        - in: query
          name: anyClientId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified client IDs. More than one parameter should be separated by commas."

        - in: query
          name: allClientIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified client IDs. More than one parameter should be separated by commas."

        - in: query
          name: automaticClientVisibilities
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified automatic client visibilities. More than one parameter should be separated by commas."

        - in: query
          name: imageHasMarketId
          schema:
            type: number
          required: false
          description: " Filter restricts the list of results to variations which have an image available for the specified market ID."

        - in: query
          name: flag1
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations with the specified flag one."

        - in: query
          name: flag2
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations with the specified flag two."

        - in: query
          name: manufacturerId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations with the specified manufacturer ID."

        - in: query
          name: anyManufacturerId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations with any of the specified manufacturer IDs."

        - in: query
          name: itemType
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have the specified item type."

        - in: query
          name: marketId
          schema:
            type: number
          required: false
          description: "Filter restricts the list of results to variations which have the specified market ID."

        - in: query
          name: anyMarketId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified market IDs."

        - in: query
          name: allMarketIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified market IDs."

        - in: query
          name: priceBetween
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have a sales price between the specified minimum and maximum value. Minimum and maximum value should be separated by a comma."

        - in: query
          name: priceBetweenById
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations where the specified sales price is between the specified minimum and maximum value. Sales price ID, Minimum and maximum value should be separated by a comma."

        - in: query
          name: anySalesPriceId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified sales price IDs. More than one parameter should be separated by commas."

        - in: query
          name: referrerIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have/not have any of the specified market IDs."

        - in: query
          name: priceCalculationUuid
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations with the specified price calculiation uuid."

        - in: query
          name: propertySelectionId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations which have the specified property selection ID."

        - in: query
          name: anyPropertySelectionId
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have any of the specified property selection IDs."

        - in: query
          name: allPropertySelectionIds
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have all specified property selection IDs."

        - in: query
          name: hasNameInLanguage
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have a name in the specified language."

        - in: query
          name: createdAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have been created in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: updatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: itemCreatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose item has been created in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: itemUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose item has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: availabilityUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose availablity has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: stockUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose stock has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: barcodeUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose barcodes has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: categoryUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose categories has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: clientUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose clients has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: marketUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose markets has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: propertyUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose properties has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: supplierUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose suppliers has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: tagUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose tags has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: warehouseUpdatedAt
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations whose warehouse has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead."

        - in: query
          name: hasLowestPrice
          schema:
            type: boolean
          required: false
          description: "Filter restricts the list of results to variations which has or has not lowest price."

        - in: query
          name: number
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which matching the number of the variation."

        - in: query
          name: bundleComponentVariationId
          schema:
            type: integer
          required: false
          description: "Filter restricts the list of results to variations which have the specified bundle component variation ID."

        - in: query
          name: itemNames
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations matching any name of the item."

        - in: query
          name: itemName1
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations matching name 1 of the item"

        - in: query
          name: itemName2
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations matching name 2 of the item"

        - in: query
          name: itemName3
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations matching name 3 of the item"

        - in: query
          name: model
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which matching the model of the variation."

        - in: query
          name: supplierItemNumber
          schema:
            type: string
          required: false
          description: "Filter restricts the list of results to variations which matching the supplier item number of the variation."

        - in: query
          name: lang
          schema:
            type: string
          required: false
          description: "Specifies the language of the language-dependent filters"

        - in: query
          name: cursor
          schema:
            type: string
          required: false
          description: "The cursor to get the next entries"

components:
  schemas:

    PimVariationAdditionalSku:
      type: object
      properties:
        marketId:
          type: number
        marketAccountId:
          type: number
        sku:
          type: string

    PimVariationBundleComponent:
      type: object
      properties:
        componentVariationId:
          type: number
        componentQuantity:
          type: number

    PimVariationWarehouse:
      type: object
      properties:
        warehouseId:
          type: integer
        zoneId:
          type: integer
        storageLocationType:
          type: string
        reorderLevel:
          type: integer
        maximumStock:
          type: integer
        stockTurnoverInDays:
          type: integer
        storageLocation:
          type: integer
        stockBuffer:
          type: integer
        isBatch:
          type: boolean
        isBestBeforeDate:
          type: boolean

    PimVariationProperty:
      type: object
      properties:
        propertyId:
          type: integer
        value:
          description: "can have any type"
        values:
          type: array
          items:
            type: object
            properties:
              lang:
                type: string
              value:
                type: string
              description:
                type: string
        groupId:
          type: integer
        selectionValues:
          type: array
          items:
            type: object
            properties:
              selectionId:
                type: integer


    PimVariationTag:
      type: object
      properties:
        tagId:
          type: integer

    PimVariationComment:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        text:
          type: string
        isVisibleForContact:
          type: boolean

    PimVariationUnit:
      type: object
      properties:
        unitId:
          type: integer
        unitCombinationId:
          type: integer
        content:
          type: number

    PimVariationStock:
      type: object
      properties:
        itemId:
          type: integer
        warehouseId:
          type: integer
        stockPhysical:
          type: number
        reservedStock:
          type: number
        reservedEbay:
          type: number
        reorderDelta:
          type: number
        stockNet:
          type: number
        storehouse_type:
          type: string
        reordered:
          type: number
        reservedBundle:
          type: number
        averagePurchasePrice:
          type: number
        warehousePriority:
          type: string
        updatedAt:
          type: string
          format: date-time
        variationId:
          type: integer

    PimVariationItem:
      type: object
      properties:
        id:
          type: integer
        flagOne:
          type: integer
        flagTwo:
          type: integer

    PimVariationBase:
      type: object
      properties:
        isMain:
          type: boolean
        mainVariationId:
          type: integer
        itemId:
          type: integer
        position:
          type: integer
        isActive:
          type: boolean
        number:
          type: string
        model:
          type: string
        externalId:
          type: string
        availability:
          type: integer
        availabilityId:
          type: integer
        estimatedAvailableAt:
          format: date-time
          type: string
        purchasePrice:
          type: number
        movingAveragePrice:
          type: number
        priceCalculationUUID:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        relatedUpdatedAt:
          format: date-time
          type: string
        priceCalculationId:
          type: integer
        picking:
          type: string
        stockLimitation:
          type: integer
        isVisibleIfNetStockIsPositive:
          type: boolean
        isInvisibleIfNetStockIsNotPositive:
          type: boolean
        isAvailableIfNetStockIsPositive:
          type: boolean
        isUnavailableIfNetStockIsNotPositive:
          type: boolean
        isVisibleInListIfNetStockIsPositive:
          type: boolean
        isInvisibleInListIfNetStockIsNotPositive:
          type: boolean
        mainWarehouseId:
          type: integer
        maximumOrderQuantity:
          type: number
        minimumOrderQuantity:
          type: number
        intervalOrderQuantity:
          type: number
        availableUntil:
          type: string
          format: date-time
        releasedAt:
          type: string
          format: date-time
        name:
          type: string
        weightG:
          type: integer
        weightNetG:
          type: integer
        widthMM:
          type: number
        lengthMM:
          type: number
        heightMM:
          type: number
        extraShippingCharge1:
          type: number
        extraShippingCharge2:
          type: number
        unitsContained:
          type: integer
        palletTypeId:
          type: integer
        packingUnits:
          type: integer
        packingUnitTypeId:
          type: integer
        transportationCosts:
          type: number
        storageCosts:
          type: number
        customs:
          type: number
        operatingCosts:
          type: number
        vatId:
          type: integer
        bundleType:
          type: string
        automaticClientVisibility:
          type: integer
        automaticListVisibility:
          type: integer
        isHiddenInCategoryList:
          type: boolean
        defaultShippingCosts:
          type: number
        categoriesInherited:
          type: boolean
        referrerInherited:
          type: boolean
        clientsInherited:
          type: boolean
        salesPricesInherited:
          type: boolean
        supplierInherited:
          type: boolean
        warehousesInherited:
          type: boolean
        propertiesInherited:
          type: boolean
        tagsInherited:
          type: boolean
        images:
          type: array
          items:
            $ref: '#/components/schemas/VariationImage'
        stock:
          type: array
          items:
            $ref: '#/components/schemas/PimVariationStock'
        item:
          $ref: '#/components/schemas/PimVariationItem'

    PimVariation:
      type: object
      properties:
        id:
          type: integer
          description: "The id of the variation. optional"
        additionalSkus:
          type: array
          items:
            $ref: "#/components/schemas/PimVariationAdditionalSku"
        attributeValues:
          type: array
          items:
            $ref: "#/components/schemas/VariationAttributeValue"
        barcodes:
          type: array
          items:
            $ref: "#/components/schemas/VariationBarcode"
        bundleComponents:
          type: array
          items:
            $ref: "#/components/schemas/PimVariationBundleComponent"
        categories:
          type: array
          items:
            $ref: "#/components/schemas/VariationCategory"
        clients:
          type: array
          items:
            $ref: "#/components/schemas/VariationClient"
        defaultCategories:
          type: array
          items:
            $ref: '#/components/schemas/PimVariationDefaultCategory'
        images:
          type: array
          items:
            $ref: '#/components/schemas/VariationImage'
        markets:
          type: array
          items:
            $ref: "#/components/schemas/VariationMarket"
        marketIdentNumbers:
          type: array
          items:
            $ref: "#/components/schemas/VariationMarketItemNumber"
        salesPrices:
          type: array
          items:
            $ref: "#/components/schemas/VariationSalesPrice"
        skus:
          type: array
          items:
            $ref: '#/components/schemas/VariationSku'
        supplier:
          type: array
          items:
            $ref: "#/components/schemas/VariationSupplier"
        warehouses:
          type: array
          items:
            $ref: "#/components/schemas/PimVariationWarehouse"
        properties:
          type: array
          items:
            $ref: "#/components/schemas/PimVariationProperty"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/PimVariationTag"
        comments:
          type: array
          items:
            $ref: "#/components/schemas/PimVariationComment"
        unit:
          $ref: "#/components/schemas/PimVariationUnit"
        base:
          $ref: "#/components/schemas/PimVariationBase"
    StockCorrections:
      type: object
      properties:
        corrections:
          type: array
          items:
            $ref: "#/components/schemas/StockCorrectionEntry"
    StockCorrectionEntry:
      type: object
      properties:
        variationid:
          type: integer
        reasonId:
          type: integer
        quantity:
          type: integer
        storageLocationId:
          type: integer
    RestLoginBody:
      type: object
      description: payload for authenticate at the rest api
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    RestLoginResponse:
      type: object
      description: token data return after successful rest api authentication
      properties:
        concurrent_sessions:
          type: integer
        max_current_sessions:
          type: integer
        user_id:
          type: integer
        tokenType:
          type: string
        expiresIn:
          type: integer
        accessToken:
          type: string
        refreshToken:
          type: string
    Variation:
      type: object
      description: variation object model
      properties:
        id:
          type: integer
        isMain:
          type: boolean
        mainVariationId:
          type: integer
        itemId:
          type: integer
        categoryVariationId:
          type: integer
        marketVariationId:
          type: integer
        clientVariationId:
          type: integer
        salesPriceVariationId:
          type: integer
        supplierVariationId:
          type: integer
        warehouseVariationId:
          type: integer
        position:
          type: integer
        isActive:
          type: boolean
        number:
          type: string
        model:
          type: string
        externalId:
          type: string
        parentVariationId:
          type: integer
        parentVariationQuantity:
          type: integer
        availability:
          type: integer
        estimatedAvailableAt:
          type: string
          format: date-time
        purchasePrice:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        relatedUpdatedAt:
          type: string
          format: date-time
        priceCalculationId:
          type: string
        priceCalculationUUID:
          type: string
        picking:
          type: string
        stockLimitation:
          type: integer
        isVisibleIfNetStockIsPositive:
          type: boolean
        isInvisibleIfNetStockIsNotPositive:
          type: boolean
        isAvailableIfNetStockIsPositive:
          type: boolean
        isUnavailableIfNetStockIsNotPositive:
          type: boolean
        mainWarehouseId:
          type: integer
        maximumOrderQuantity:
          type: number
        minimumOrderQuantity:
          type: number
        intervalOrderQuantity:
          type: number
        availableUntil:
          type: string
        releasedAt:
          type: string
          format: date-time
        unitCombinationId:
          type: number
        name:
          type: string
        weightG:
          type: integer
        weightNetG:
          type: integer
        widthMM:
          type: integer
        lengthMM:
          type: integer
        heightMM:
          type: integer
        extraShippingCharge1:
          type: number
        extraShippingCharge2:
          type: number
        unitsContained:
          type: number
        palletTypeId:
          type: integer
        packingUnits:
          type: number
        packingUnitTypeId:
          type: integer
        transportationCosts:
          type: number
        storageCosts:
          type: number
        operatingCosts:
          type: number
        vatId:
          type: integer
        automaticClientVisibility:
          type: integer
        isHiddenInCategoryList:
          type: boolean
        defaultShippingCosts:
          type: number
        mayShowUnitPrice:
          type: boolean
        movingAveragePrice:
          type: number
        propertyVariationId:
          type: string
        automaticListVisibility:
          type: integer
        isVisibleInListIfNetStockIsPositive:
          type: boolean
        isInvisibleInListIfNetStockIsNotPositive:
          type: boolean
        singleItemCount:
          type: integer
        availabilityUpdatedAt:
          type: string
          format: date-time
        tagVariationId:
          type: string
        hasCalculatedBundleWeight:
          type: boolean
        hasCalculatedBundleNetWeight:
          type: boolean
        hasCalculatedBundlePurchasePrice:
          type: boolean
        hasCalculatedBundleMovingAveragePrice:
          type: boolean
        customsTariffNumber:
          type: string
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
        variationProperties:
          type: array
          items:
            $ref: '#/components/schemas/VariationProperty'
        variationBarcodes:
          type: array
          items:
            $ref: '#/components/schemas/VariationBarcode'
        variationSalesPrices:
          type: array
          items:
            $ref: '#/components/schemas/VariationSalesPrice'
        marketItemNumbers:
          type: array
          items:
            $ref: '#/components/schemas/VariationMarketItemNumber'
        variationCategories:
          type: array
          items:
            $ref: '#/components/schemas/VariationCategory'
        variationClients:
          type: array
          items:
            $ref: '#/components/schemas/VariationClient'
        variationMarkets:
          type: array
          items:
            $ref: '#/components/schemas/VariationMarket'
        variationDefaultCategory:
          type: array
          items:
            $ref: '#/components/schemas/VariationDefaultCategory'
        variationSuppliers:
          type: array
          items:
            $ref: '#/components/schemas/VariationSupplier'
        images:
          type: array
          items:
            $ref: '#/components/schemas/VariationImage'
        itemImages:
          type: array
          items:
            $ref: '#/components/schemas/VariationImage'
        variationAttributeValues:
          type: array
          items:
            $ref: '#/components/schemas/VariationAttributeValue'
        variationSkus:
          type: array
          items:
            $ref: '#/components/schemas/VariationSku'
        unit:
          $ref: '#/components/schemas/VariationUnit'
        parent:
          $ref: '#/components/schemas/Variation'
        item:
          $ref: '#/components/schemas/VariationItem'
        stock:
          type: array
          items:
            $ref: '#/components/schemas/VariationStock'
        propertiesV2:
          type: array
          items:
            $ref: '#/components/schemas/PropertyV2'

    VariationStock:
      type: object
      description: variation stock model
      properties:
        quantity:
          type: number
        storageLocationId:
          type: integer
        purchasePrice:
          type: number
        reservedListing:
          type: number
        reservedBundles:
          type: number
        variationId:
          type: integer
        itemId:
          type: integer
        warehouseId:
          type: integer
        physicalStock:
          type: number
        reservedStock:
          type: number
        netStock:
          type: number
        reorderLevel:
          type: number
        deltaReorderLevel:
          type: number
    VariationItem:
      type: object
      description: item model superior to the variation
      properties:
        id:
          type: integer
        position:
          type: integer
        manufacturerId:
          type: integer
        stockType:
          type: integer
        add_cms_page:
          type: string
        storeSpecial:
          type: integer
        condition:
          type: integer
        amazonFedas:
          type: string
        updatedAt:
          type: string
          format: date-time
        free1:
          type: string
        free2:
          type: string
        free3:
          type: string
        free4:
          type: string
        free5:
          type: string
        free6:
          type: string
        free7:
          type: string
        free8:
          type: string
        free9:
          type: string
        free10:
          type: string
        free11:
          type: string
        free12:
          type: string
        free13:
          type: string
        free14:
          type: string
        free15:
          type: string
        free16:
          type: string
        free17:
          type: string
        free18:
          type: string
        free19:
          type: string
        free20:
          type: string
        customsTariffNumber:
          type: string
        producingCountryId:
          type: integer
        revenueAccount:
          type: integer
        couponRestriction:
          type: integer
        flagOne:
          type: integer
        flagTwo:
          type: integer
        ageRestriction:
          type: integer
        createdAt:
          type: string
          format: date-time
        amazonProductType:
          type: integer
        ebayPresetId:
          type: integer
        ebayCategory:
          type: string
        ebayCategory2:
          type: string
        ebayStoreCategory:
          type: string
        ebayStoreCategory2:
          type: string
        amazonFbaPlatform:
          type: integer
        feedback:
          type: integer
        gimahhot:
          type: string
        maximumOrderQuantity:
          type: number
        isSubscribable:
          type: boolean
        rakutenCategoryId:
          type: integer
        isShippingPackage:
          type: boolean
        conditionApi:
          type: number
        isSerialNumber:
          type: boolean
        isShippableByAmazon:
          type: boolean
        ownerId:
          type: integer
        itemType:
          type: string
        mainVariationId:
          type: integer
    VariationUnit:
      type: object
      description: variation unit model
      properties:
        id:
          type: integer
        unitId:
          type: integer
        content:
          type: integer
    VariationSku:
      type: object
      description: variation sku model
      properties:
        id:
          type: integer
        variationId:
          type: integer
        marketId:
          type: integer
        accountId:
          type: integer
        initialSku:
          type: string
        sku:
          type: string
        parentSku:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        exportedAt:
          type: string
          format: date-time
        stockUpdatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        status:
          type: string
        additionalInformation:
          type: string
    VariationAttributeValue:
      type: object
      description: variation attribute value model
      properties:
        attributeValueSetId:
          type: integer
        attributeId:
          type: integer
        valueId:
          type: integer
        isLinkableToImage:
          type: boolean
        attribute:
          $ref: '#/components/schemas/Attribute'
        attributeValue:
          $ref: '#/components/schemas/AttributeValue'
    AttributeValue:
      type: object
      description: Variation attribute value model that is place in VariationAttributeValue model
      properties:
        id:
          type: integer
        attributeId:
          type: integer
        backendName:
          type: string
        position:
          type: integer
        image:
          type: string
        comment:
          type: string
        amazonValue:
          type: string
        ottoValue:
          type: string
        neckermannAtEpValue:
          type: string
        laRedouteValue:
          type: string
        tracdelightValue:
          type: string
        percentageDistribution:
          type: integer
        updatedAt:
          type: string
          format: date-time
        attribute:
          $ref: "#/components/schemas/Attribute"
    Attribute:
      type: object
      description: Variation attribute model that is place in VariationAttributeValue model
      properties:
        id:
          type: integer
        backendName:
          type: string
        position:
          type: integer
        isSurchargePercental:
          type: boolean
        isLinkableToImage:
          type: boolean
        amazonAttribute:
          type: string
        fruugoAttribute:
          type: string
        pixmaniaAttribute:
          type: integer
        ottoAttribute:
          type: string
        googleShoppingAttribute:
          type: string
        neckermannAtEpAttribute:
          type: integer
        typeOfSelectionInOnlineStore:
          type: string
        laRedouteAttribute:
          type: integer
        isGroupable:
          type: boolean
        updatedAt:
          type: string
        values:
          description: "only accessible for get attributes call when with flag is set"
          type: array
          items:
            $ref: "#/components/schemas/AttributeValue"
    VariationImage:
      type: object
      description: variation image model
      properties:
        # plenty cannot decide how their response looks like...
        imageId:
          type: integer
        id:
          type: integer
        itemId:
          type: integer
        type:
          type: string
        fileType:
          type: string
        path:
          type: string
        position:
          type: integer
        lastUpdate:
          type: string
        insert:
          type: string
        md5Checksum:
          type: string
        width:
          type: integer
        height:
          type: integer
        size:
          type: integer
        storageProviderId:
          type: string
        md5ChecksumOriginal:
          type: string
        cleanImageName:
          type: string
        uploadUrl:
          type: string
        url:
          type: string
        urlMiddle:
          type: string
        urlPreview:
          type: string
        urlSecondPreview:
          type: string
        documentUploadPath:
          type: string
        documentUploadPathPreview:
          type: string
        documentUploadPreviewWidth:
          type: integer
        documentUploadPreviewHeight:
          type: integer
        hasVariationLink:
          type: boolean
        availabilities:
          type: array
          items:
            $ref: '#/components/schemas/ImageAvailability'
        names:
          type: array
          items:
            $ref: '#/components/schemas/ImageName'
        attributeValueImages:
          type: array
          items:
            $ref: '#/components/schemas/ImageMarketAttributeValue'
    ImageName:
      type: object
      description: image name model
      properties:
        imageId:
          type: integer
        lang:
          type: string
        name:
          type: string
        alternate:
          type: string
    ImageAvailability:
      type: object
      description: image availability model
      properties:
        imageId:
          type: integer
        type:
          type: string
        value:
          type: number
    ImageMarketAttributeValue:
      type: object
      description: image market attribute value model
      properties:
        valueId:
          type: string
        attributeId:
          type: string
        imageId:
          type: string
        itemId:
          type: string
    VariationSupplier:
      type: object
      description: variation supplier model
      properties:
        id:
          type: integer
        variationId:
          type: integer
        supplierId:
          type: integer
        purchasePrice:
          type: number
        minimumPurchase:
          type: number
        itemNumber:
          type: string
        lastPriceQuery:
          type: boolean
        deliveryTimeInDays:
          type: integer
        discount:
          type: number
        isDiscountable:
          type: boolean
        packagingUnit:
          type: number
        lastUpdateTimestamp:
          type: string
        createdAt:
          type: string
          format: date-time
        currencyPurchasePrice:
          type: number
        itemDescription:
          type: string
    VariationDefaultCategory:
      type: object
      description: variation default category model
      properties:
        variationId:
          type: integer
        branchId:
          type: integer
        plentyId:
          type: integer
        manually:
          type: string
    PimVariationDefaultCategory:
      type: object
      description: variation default category model
      properties:
        variationId:
          type: integer
        branchId:
          type: integer
        plentyId:
          type: integer
        manually:
          type: boolean
    VariationMarket:
      type: object
      description: variation market link model
      properties:
        variationId:
          type: integer
        marketId:
          type: number
        createdAt:
          type: string
          format: date-time
    VariationClient:
      type: object
      description: variation client model
      properties:
        variationId:
          type: integer
        plentyId:
          type: integer
        createdAt:
          type: string
          format: date-time
    VariationCategory:
      type: object
      description: variation category model
      properties:
        variationId:
          type: integer
        categoryId:
          type: integer
        position:
          type: integer
        isNeckermannPrimary:
          type: boolean
    VariationMarketItemNumber:
      type: object
      description: market item number model for variations
      properties:
        id:
          type: integer
        variationId:
          type: integer
        countryId:
          type: integer
        type:
          type: string
        position:
          type: integer
        value:
          type: string
    VariationSalesPrice:
      type: object
      description: variation sales price model
      properties:
        variationId:
          type: integer
        salesPriceId:
          type: integer
        price:
          type: number
        updatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    VariationProperty:
      type: object
      description: variation property model
      properties:
        id:
          type: integer
        itemId:
          type: integer
        propertyId:
          type: integer
        propertySelectionId:
          type: integer
        valueInt:
          type: integer
        valueFloat:
          type: number
        surcharge:
          type: number
        updatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        variationId:
          type: integer
        names:
          type: array
          items:
            $ref: '#/components/schemas/VariationPropertyName'
        property:
          $ref: '#/components/schemas/VariationPropertyProperty'
    VariationBarcode:
      type: object
      description: Variation barcode model
      properties:
        barcodeId:
          type: integer
        variationId:
          type: integer
        code:
          type: string
        createdAt:
          type: string
          format: date-time
    VariationPropertyProperty:
      type: object
      description: Property model within the variationProperty model
      properties:
        id:
          type: integer
        position:
          type: integer
        unit:
          type: integer
        propertyGroupId:
          type: integer
        backendName:
          type: string
        valueType:
          type: string
        isSearchable:
          type: boolean
        isOderProperty:
          type: boolean
        isShownOnItemPage:
          type: boolean
        isShownOnItemList:
          type: boolean
        isShownAtCheckout:
          type: boolean
        isShownInPdf:
          type: boolean
        comment:
          type: string
        surcharge:
          type: number
        isShownAsAdditionalCosts:
          type: boolean
        updatedAt:
          type: string
          format: date-time
    VariationPropertyName:
      type: object
      description: Variation property name model
      properties:
        propertyValueId:
          type: integer
        lang:
          type: string
        value:
          type: string
    Property:
      type: object
      description: variation property model
      properties:
        propertyId:
          type: integer
        relationTypeIdentifier:
          type: string
        relationTargetId:
          type: integer
        selectionRelationId:
          type: integer
        groupId:
          type: integer
        markup:
          type: integer
        relationValues:
          type: array
          items:
            $ref: '#/components/schemas/PropertyRelationValues'
        propertyRelation:
          $ref: '#/components/schemas/PropertyRelation'
        id:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    PropertyRelationValues:
      type: object
      description: relation values of properties model
      properties:
        lang:
          type: string
        value:
          type: string
        description:
          type: string
        propertyRelationId:
          type: integer
        id:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    PropertyRelation:
      type: object
      description: propertyRelation model
      properties:
        cast:
          type: string
        typeIdentifier:
          type: string
        position:
          type: integer
        id:
          type: integer
        propertyId:
          type: integer
        propertyGroupId:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Category:
      type: object
      description: category model
      properties:
        id:
          type: integer
        parentCategoryId:
          type: integer
        level:
          type: integer
        type:
          type: string
        linklist:
          type: string
        right:
          type: string
        sitemap:
          type: string
        hasChildren:
          type: boolean
        details:
          type: array
          items:
            $ref: '#/components/schemas/CategoryDetails'
    CategoryDetails:
      type: object
      description: category details model
      properties:
        categoryId:
          type: string
        lang:
          type: string
        name:
          type: string
        description:
          type: string
        description2:
          type: string
        shortDescription:
          type: string
        metaKeywords:
          type: string
        metaDescription:
          type: string
        nameUrl:
          type: string
        metaTitle:
          type: string
        position:
          type: string
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
        itemListView:
          type: string
        singleItemView:
          type: string
        pageView:
          type: string
        fulltext:
          type: string
        metaRobots:
          type: string
        canonicalLink:
          type: string
        previewUrl:
          type: string
        image:
          type: string
        imagePath:
          type: string
        image2:
          type: string
        image2Path:
          type: string
        plentyId:
          type: integer
    ItemRequest:
      type: object
      description: item type
      required:
        - ageRestriction
        - profileId
        - propertyId
        - variations
      properties:
        producingCountryId:
          type: integer
        position:
          type: integer
        stockType:
          type: integer
          description: "values: 0 = Stocked item (default)1 = Production item2 = Colli 3 = Special order item"
          enum:
            - 0
            - 1
            - 2
            - 3
        storeSpecial:
          type: integer
          description: "Option to present items more prominently in the online store. 1 = Special offer 2 = New items 3 = Top items"
          enum:
            - 0
            - 1
            - 2
            - 3
        ownerId:
          type: integer
          description: "The plentymarkets user that is assigned as owner of this item."
        manufacturerId:
          type: integer
          description: "The ID of the manufacturer of the item"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        customsTariffNumber:
          type: string
          description: "Deprecated: The customs tariff number of the item; usually a 11 digit code number based on the Harmonised System"
        revenueAccount:
          type: integer
          description: "The revenue account the item is linked to. An individual revenue account can be saved for each item in plentymarkets. If this is not done, plentymarkets automatically determines a revenue account based on the VAT rate."
        couponRestriction:
          type: integer
          description: "Indicates if the item can be purchased using a promotional coupon. 0 = Permitted 1 = Not permitted 2 = Purchasable with coupon only"
          enum:
            - 0
            - 1
            - 2
        condition:
          type: integer
          description: "The condition of the item. Possible values: 0 = New 1 = Used 2 = Boxed as new 3 = New with label 4 = Factory seconds"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        conditionApi:
          type: integer
          description: "The condition of the item that is transferred to markets via API. 0 = New 1 = Used but as new 2 = Used but very good 3 = Used but good 4 = Used but acceptable 5 = Factory seconds"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        isSubscribable:
          type: boolean
          description: "Flag that indicates if the item can be ordered as a subscription item. If yes, the item can be ordered for delivery at regular intervals."
        isShippingPackage:
          type: boolean
          description: "Flag that indicates if a shipping package is to be used for this item. If yes and the variation's dimensions are entered in the Settings tab of a variation, the correct shipping package is assigned automatically."
        amazonFbaPlatform:
          type: integer
          description: "Indicates the platform used for Fulfilment by Amazon (FBA). 0 = Do not use 1 = AMAZON EU (Europe) 2 = AMAZON FE (Far East) 3 = AMAZON NA (North America)"
          enum:
            - 0
            - 1
            - 2
            - 3
        isShippableByAmazon:
          type: boolean
        amazonProductType:
          type: integer
          description: "The Amazon product type of the item. List of IDs: https://www.plentymarkets.co.uk/manual/data-exchange/data-formats/item/"
        amazonFedas:
          type: string
          description: "The FEDAS product classification key of the item."
        ebayPresetId:
          type: integer
          description: "The eBay preset ID. This plentymarkets ID must be specified to save values for $ebayCategory, $ebayCategory2, $ebayStoreCategory and $ebayStoreCategory2"
        ebayCategory:
          type: integer
          description: "The eBay category 1 of the item. This category is used when a new listing is created."
        ebayCategory2:
          type: integer
          description: "The eBay category 2 of the item. This category is used when a new listing is created."
        rakutenCategoryId:
          type: integer
          description: "The ID of the Rakuten category of this item."
        flagOne:
          type: integer
          description: "Flag 1 of the item. Flags can be used to organise and filter items. Each item can be assigned up to two flags. 0 = no flag"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
        flagTwo:
          type: integer
          description: "Flag 2 of the item. Flags can be used to organise and filter items. Each item can be assigned up to two flags. 0 = no flag"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
        ageRestriction:
          type: integer
          description: "The age customers must be to purchase the item. Items with an age rating of 18+ must be linked to a shipping profile for which the PostIdent option is activated. 0 = None available 3 = Released for ages 3 and up 6 = Ages 6 and up 9 = Ages 9 and up 12 = Ages 12 and up 14 = Ages 14 and up 16 = Ages 16 and up 18 = Ages 18 and up 50 = Not marked 88 = Not 99 = Unknown"
          enum:
            - 0
            - 3
            - 6
            - 9
            - 12
            - 14
            - 16
            - 18
            - 50
            - 88
            - 99
        feedback:
          type: integer
          description: "The feedback, i.e. rating, that this item received. Possible values are 1 to 5 or 1 to 10 depending on the maximum rating setting. An initial feedback can be saved for items. The saved value will then be displayed as the initial feedback. Every time new feedback is submitted, the average value will be recalculated automatically."
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
        itemType:
          type: string
          description: "The type of the item. Because Set items are managed using a separate route, this value is always Default. optional allowed values are default, multiPack, set"
        ebayTitles:
          type: array
          items:
            $ref: '#/components/schemas/ItemEbayTitle'
        itemShippingProfiles:
          type: array
          items:
            $ref: '#/components/schemas/ItemShippingProfileRequest'
        profileId:
          type: integer
          description: "The unique ID of the shipping profile"
        itemProperties:
          type: array
          items:
            $ref: '#/components/schemas/ItemProperty'
        propertyId:
          type: integer
          description: "The id of the property item"
        propertySelectionId:
          type: integer
          description: "The id of the property selection"
        id:
          type: integer
        texts:
          type: array
          items:
            $ref: "#/components/schemas/ItemTexts"
        variations:
          type: array
          items:
            $ref: '#/components/schemas/Variation'
    ItemResponse:
      type: object
      description: item type
      required:
        - ageRestriction
        - profileId
        - propertyId
        - variations
      properties:
        producingCountryId:
          type: integer
        position:
          type: integer
        stockType:
          type: integer
          description: "values: 0 = Stocked item (default)1 = Production item2 = Colli 3 = Special order item"
          enum:
            - 0
            - 1
            - 2
            - 3
        storeSpecial:
          type: integer
          description: "Option to present items more prominently in the online store. 1 = Special offer 2 = New items 3 = Top items"
          enum:
            - 0
            - 1
            - 2
            - 3
        ownerId:
          type: integer
          description: "The plentymarkets user that is assigned as owner of this item."
        manufacturerId:
          type: integer
          description: "The ID of the manufacturer of the item"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        customsTariffNumber:
          type: string
          description: "Deprecated: The customs tariff number of the item; usually a 11 digit code number based on the Harmonised System"
        revenueAccount:
          type: integer
          description: "The revenue account the item is linked to. An individual revenue account can be saved for each item in plentymarkets. If this is not done, plentymarkets automatically determines a revenue account based on the VAT rate."
        couponRestriction:
          type: integer
          description: "Indicates if the item can be purchased using a promotional coupon. 0 = Permitted 1 = Not permitted 2 = Purchasable with coupon only"
          enum:
            - 0
            - 1
            - 2
        condition:
          type: integer
          description: "The condition of the item. Possible values: 0 = New 1 = Used 2 = Boxed as new 3 = New with label 4 = Factory seconds"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
        conditionApi:
          type: integer
          description: "The condition of the item that is transferred to markets via API. 0 = New 1 = Used but as new 2 = Used but very good 3 = Used but good 4 = Used but acceptable 5 = Factory seconds"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        isSubscribable:
          type: boolean
          description: "Flag that indicates if the item can be ordered as a subscription item. If yes, the item can be ordered for delivery at regular intervals."
        isShippingPackage:
          type: boolean
          description: "Flag that indicates if a shipping package is to be used for this item. If yes and the variation's dimensions are entered in the Settings tab of a variation, the correct shipping package is assigned automatically."
        amazonFbaPlatform:
          type: integer
          description: "Indicates the platform used for Fulfilment by Amazon (FBA). 0 = Do not use 1 = AMAZON EU (Europe) 2 = AMAZON FE (Far East) 3 = AMAZON NA (North America)"
          enum:
            - 0
            - 1
            - 2
            - 3
        isShippableByAmazon:
          type: boolean
        amazonProductType:
          type: integer
          description: "The Amazon product type of the item. List of IDs: https://www.plentymarkets.co.uk/manual/data-exchange/data-formats/item/"
        amazonFedas:
          type: string
          description: "The FEDAS product classification key of the item."
        ebayPresetId:
          type: integer
          description: "The eBay preset ID. This plentymarkets ID must be specified to save values for $ebayCategory, $ebayCategory2, $ebayStoreCategory and $ebayStoreCategory2"
        ebayCategory:
          type: integer
          description: "The eBay category 1 of the item. This category is used when a new listing is created."
        ebayCategory2:
          type: integer
          description: "The eBay category 2 of the item. This category is used when a new listing is created."
        rakutenCategoryId:
          type: integer
          description: "The ID of the Rakuten category of this item."
        flagOne:
          type: integer
          description: "Flag 1 of the item. Flags can be used to organise and filter items. Each item can be assigned up to two flags. 0 = no flag"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
        flagTwo:
          type: integer
          description: "Flag 2 of the item. Flags can be used to organise and filter items. Each item can be assigned up to two flags. 0 = no flag"
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
        ageRestriction:
          type: integer
          description: "The age customers must be to purchase the item. Items with an age rating of 18+ must be linked to a shipping profile for which the PostIdent option is activated. 0 = None available 3 = Released for ages 3 and up 6 = Ages 6 and up 9 = Ages 9 and up 12 = Ages 12 and up 14 = Ages 14 and up 16 = Ages 16 and up 18 = Ages 18 and up 50 = Not marked 88 = Not 99 = Unknown"
          enum:
            - 0
            - 3
            - 6
            - 9
            - 12
            - 14
            - 16
            - 18
            - 50
            - 88
            - 99
        feedback:
          type: integer
          description: "The feedback, i.e. rating, that this item received. Possible values are 1 to 5 or 1 to 10 depending on the maximum rating setting. An initial feedback can be saved for items. The saved value will then be displayed as the initial feedback. Every time new feedback is submitted, the average value will be recalculated automatically."
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
        itemType:
          type: string
          description: "The type of the item. Because Set items are managed using a separate route, this value is always Default. optional allowed values are default, multiPack, set"
        ebayTitles:
          type: array
          items:
            $ref: '#/components/schemas/ItemEbayTitle'
        itemShippingProfiles:
          type: array
          items:
            $ref: '#/components/schemas/ItemShippingProfileResponse'
        profileId:
          type: integer
          description: "The unique ID of the shipping profile"
        itemProperties:
          type: array
          items:
            $ref: '#/components/schemas/ItemProperty'
        propertyId:
          type: integer
          description: "The id of the property item"
        propertySelectionId:
          type: integer
          description: "The id of the property selection"
        id:
          type: integer
        texts:
          type: array
          items:
            $ref: "#/components/schemas/ItemTexts"
        variations:
          type: array
          items:
            $ref: '#/components/schemas/Variation'
    ItemEbayTitle:
      type: object
      properties:
        title:
          type: string
        itemId:
          type: integer
        id:
          type: integer
    ItemShippingProfileResponse:
      type: object
      properties:
        id:
          type: integer
        itemId:
          type: integer
        profileId:
          type: integer
    ItemShippingProfileRequest:
      type: object
      properties:
        id:
          type: integer
        itemId:
          type: integer
        profileId:
          type: string
    ItemProperty:
      type: object
      properties:
        id:
          type: integer
        itemId:
          type: integer
        propertyId:
          type: integer
        propertySelectionId:
          type: integer
        valueInt:
          type: integer
        valueFloat:
          type: number
        valuefile:
          type: string
        surcharge:
          type: number
    AttributeName:
      type: object
      properties:
        lang:
          type: string
        name:
          type: string
    ItemTexts:
      type: object
      properties:
        lang:
          type: string
        name1:
          type: string
        name2:
          type: string
        name3:
          type: string
        shortDescription:
          type: string
        description:
          type: string
        metaDescription:
          type: string
        technicalData:
          type: string
        urlPath:
          type: string
        keywords:
          type: string
    Manufacturer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        externalName:
          type: string
        logo:
          type: string
        url:
          type: string
        street:
          type: string
        houseNo:
          type: string
        postcode:
          type: string
        town:
          type: string
        phoneNumber:
          type: string
        faxNumber:
          type: string
        email:
          type: string
        countryId:
          type: integer
        pixmaniaBrandId:
          type: integer
        neckermannAtEpBrandId:
          type: integer
        laRedouteBrandId:
          type: integer
        position:
          type: integer
        comment:
          type: string
        updatedAt:
          type: string
    PropertyV2:
      type: object
      properties:
        id:
          type: integer
        propertyId:
          type: integer
        groupId:
          type: integer
        type:
          type: string
        targetId:
          type: integer
        value:
          type: string
        markup:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        values:
          type: array
          items:
            $ref: '#/components/schemas/PropertiesV2Values'
        selectionValues:
          type: array
          items:
            $ref: '#/components/schemas/PropertiesV2SelectionValues'
        property:
          $ref: '#/components/schemas/PropertyV2Property'
    PropertyV2Property:
      type: object
      properties:
        id:
          type: integer
        cast:
          type: string
        type:
          type: string
        position:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    PropertiesV2SelectionValues:
      type: object
      properties:
        id:
          type: integer
        relationId:
          type: integer
        selectionId:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    PropertiesV2Values:
      type: object
      properties:
        id:
          type: integer
        relationId:
          type: integer
        lang:
          type: string
        value:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Order:
      type: object
      properties:
        id:
          type: integer
        referrerId:
          type: number
        roundTotalsOnly:
          type: boolean
        numberOfDecimals:
          type: integer
        contactReceiver:
          $ref: '#/components/schemas/Contact'
        contactSender:
          $ref: '#/components/schemas/Contact'
        warehouseReceiver:
          $ref: '#/components/schemas/WarehouseContact'
        warehouseSender:
          $ref: '#/components/schemas/WarehouseContact'
        plentyId:
          type: integer
        typeid:
          type: integer
        lockStatus:
          type: string
        locationId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        statusId:
          type: number
        ownerId:
          type: string
        relations:
          type: array
          items:
            $ref: '#/components/schemas/OrderRelation'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/OrderAddress'
        location:
          $ref: '#/components/schemas/OrderLocation'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/OrderDocument'
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'

    OrderItem:
      type: object
      properties:
        id:
          type: integer
        orderId:
          type: integer
        typeId:
          type: integer
        referrerId:
          type: number
        itemVariationId:
          type: integer
        quantity:
          type: number
        orderItemName:
          type: string
        attributeValues:
          type: string
        shippingProfileId:
          type: integer
        countryVatId:
          type: integer
        vatField:
          type: integer
        vatRate:
          type: number
        position:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        warehouseId:
          type: integer
        variation:
          $ref: '#/components/schemas/Variation'
        variationBarcodes:
          type: array
          items:
            $ref: '#/components/schemas/VariationBarcode'
        amounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemAmount'

    OrderItemAmount:
      type: object
      properties:
        id:
          type: integer
        orderItemId:
          type: integer
        isSystemCurrency:
          type: boolean
        currency:
          type: string
        exchangeRate:
          type: number
        purchasePrice:
          type: number
        priceOriginalGross:
          type: number
        priceOriginalNet:
          type: number
        priceGross:
          type: number
        priceNet:
          type: number
        surcharge:
          type: number
        discount:
          type: number
        isPercentage:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    OrderDocument:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        number:
          type: string
        numberWithPrefix:
          type: string
        path:
          type: string
        userId:
          type: string
        source:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        displayDate:
          type: string
          format: date-time
        newOrderArchitecture:
          type: string
        status:
          type: string
        pivot:
          type: object
          properties:
            plenty_document_reference_value:
              type: string
            plenty_document_reference_document_id:
              type: string


    OrderLocation:
      type: object
      properties:
        id:
          type: integer
        countryId:
          type: integer
        name:
          type: string
        clientId:
          type: integer
        plentyId:
          type: integer

    OrderAddress:
      type: object
      properties:
        id:
          type: integer
        gender:
          type: string
        name1:
          type: string
        name2:
          type: string
        name3:
          type: string
        name4:
          type: string
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        address4:
          type: string
        postalCode:
          type: string
        town:
          type: string
        countryId:
          type: integer
        stateId:
          type: integer
        readOnly:
          type: boolean
        checkedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        title:
          type: string
        contactPerson:
          type: string
        taxIdNumber:
          type: string
        pivot:
          type: object
          properties:
            orderId:
              type: string
            addressId:
              type: integer
            typeid:
              type: integer


    OrderRelation:
      type: object
      properties:
        orderId:
          type: integer
        referenceType:
          type: string
        referenceId:
          type: integer
        relation:
          type: number

    WarehouseContact:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        note:
          type: string
        typeId:
          type: integer
        onStockAvailability:
          type: integer
        outOfStockAvailability:
          type: integer
        splitByShippingProfile:
          type: boolean
        storageLocationType:
          type: string
        storageLocationZone:
          type: integer
        repairWarehouseId:
          type: integer
        isInventoryModeActive:
          type: boolean
        logisticsType:
          type: string
        average_price_source:
          type: string
        reorder_level_dynamic:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        allocationReferrerIds:
          type: array
          items:
            type: string
        address:
          $ref: '#/components/schemas/WarehouseContactAddress'


    WarehouseContactAddress:
      type: object
      properties:
        name1:
          type: string
        address1:
          type: string
        address2:
          type: string
        postalCode:
          type: string
        town:
          type: string
        countryId:
          type: integer
        options:
          type: array
          items:
            type: object
            properties:
              typeId:
                type: integer
              value:
                type: string
        title:
          type: string
        contactPerson:
          type: string
        taxIdNumber:
          type: string

    Contact:
      type: object
      properties:
        id:
          type: integer
        number:
          type: string
        externalId:
          type: string
        typeId:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
        title:
          type: string
        formOfAddress:
          type: string
        newsletterAllowanceAt:
          type: string
        classId:
          type: integer
        blocked:
          type: integer
        rating:
          type: string
        bookAccount:
          type: string
        lang:
          type: string
        referrerId:
          type: number
        userId:
          type: integer
        birthdayAt:
          type: string
        lastLoginAt:
          type: string
        lastOrderAt:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        valuta:
          type: string
        isLead:
          type: boolean
        leadStatusKey:
          type: string
        plentyId:
          type: integer
        email:
          type: string
        ebayName:
          type: string
        privatePhone:
          type: string
        privateFax:
          type: string
        privateMobile:
          type: string
        paypalEmail:
          type: string
        paypalPayerId:
          type: string
        klarnaPersonalId:
          type: string
        dhlPostIdent:
          type: string
        singleAccess:
          type: string
        contactPerson:
          type: string
        marketplacePartner:
          type: string
        fullName:
          type: string
        inLeadStatusSince:
          type: integer
        options:
          type: array
          items:
            $ref: '#/components/schemas/ContactOption'

    ContactOption:
      type: object
      properties:
        id:
          type: integer
        contactId:
          type: integer
        typeId:
          type: integer
        subTypeId:
          type: integer
        value:
          type: string
        priority:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time




    # responses
    CreateItemsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ItemResponse'
        - $ref: "#/components/schemas/MultipleItemsCreatedResponse"

    MultipleItemsCreatedResponse:
      type: object
      description: format of the response when multiple items gots created
      properties:
        success:
          $ref: "#/components/schemas/MultipleItemsCreatedResponseItem"
        failed:
          additionalProperties:
            type: object
            additionalProperties:
              type: array
              items:
                type: string

    MultipleItemsCreatedResponseItem:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ItemResponse"

    MultipleVariationsUpdatedResponse:
      type: object
      description: format of the response when multiple variations gots updated
      properties:
        success:
          $ref: "#/components/schemas/MultipleVariationsUpdatedResponseVariation"
        failed:
          additionalProperties:
            type: array
            items:
              type: string
    MultipleVariationsUpdatedResponseVariation:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Variation"


    # paginations
    SearchOrderPagination:
      type: object
      properties:
        page:
          type: integer
        totalsCount:
          type: integer
        isLastPage:
          type: boolean
        lastPageNumber:
          type: integer
        firstOnPage:
          type: integer
        lastOnPage:
          type: integer
        itemsPerPage:
          type: integer
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Order'

    ItemPagination:
      type: object
      description: pagination response containing items
      properties:
        page:
          type: integer
        totalsCount:
          type: integer
        isLastPage:
          type: boolean
        lastPageNumber:
          type: integer
        firstOnPage:
          type: integer
        lastOnPage:
          type: integer
        itemsPerPage:
          type: integer
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ItemResponse'
    PimVariationScrollResponse:
      type: object
      description: pagination response containing variations
      properties:
        cursor:
          type: string
          description: "The cursor for the next page of results."
        entries:
          type: array
          description: "List of Variation"
          items:
            $ref: "#/components/schemas/PimVariation"
    VariationPagination:
      type: object
      description: pagination response containing variations
      properties:
        page:
          type: integer
        totalsCount:
          type: integer
        isLastPage:
          type: boolean
        lastPageNumber:
          type: integer
        firstOnPage:
          type: integer
        lastOnPage:
          type: integer
        itemsPerPage:
          type: integer
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Variation'
    CategoryPagination:
      type: object
      description: pagination response containing categories
      properties:
        page:
          type: integer
        totalsCount:
          type: integer
        isLastPage:
          type: boolean
        lastPageNumber:
          type: integer
        firstOnPage:
          type: integer
        lastOnPage:
          type: integer
        itemsPerPage:
          type: integer
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    AttributePagination:
      type: object
      description: pagination response containing categories
      properties:
        page:
          type: integer
        totalsCount:
          type: integer
        isLastPage:
          type: boolean
        lastPageNumber:
          type: integer
        firstOnPage:
          type: integer
        lastOnPage:
          type: integer
        itemsPerPage:
          type: integer
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
    AttributeValuePagination:
      type: object
      description: pagination response containing categories
      properties:
        page:
          type: integer
        totalsCount:
          type: integer
        isLastPage:
          type: boolean
        lastPageNumber:
          type: integer
        firstOnPage:
          type: integer
        lastOnPage:
          type: integer
        itemsPerPage:
          type: integer
        entries:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValue'
    ManufacturersPagination:
      type: object
      description: pagination response containing categories
      properties:
        page:
          type: integer
        totalsCount:
          type: integer
        isLastPage:
          type: boolean
        lastPageNumber:
          type: integer
        firstOnPage:
          type: integer
        lastOnPage:
          type: integer
        itemsPerPage:
          type: integer
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Manufacturer'

    
    