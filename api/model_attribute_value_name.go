/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// AttributeValueName struct for AttributeValueName
type AttributeValueName struct {
	Lang *string `json:"lang,omitempty"`
	Name *string `json:"name,omitempty"`
	ValueId *int32 `json:"valueId,omitempty"`
}

// NewAttributeValueName instantiates a new AttributeValueName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeValueName() *AttributeValueName {
	this := AttributeValueName{}
	return &this
}

// NewAttributeValueNameWithDefaults instantiates a new AttributeValueName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeValueNameWithDefaults() *AttributeValueName {
	this := AttributeValueName{}
	return &this
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *AttributeValueName) GetLang() string {
	if o == nil || o.Lang == nil {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueName) GetLangOk() (*string, bool) {
	if o == nil || o.Lang == nil {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *AttributeValueName) HasLang() bool {
	if o != nil && o.Lang != nil {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *AttributeValueName) SetLang(v string) {
	o.Lang = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AttributeValueName) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueName) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AttributeValueName) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AttributeValueName) SetName(v string) {
	o.Name = &v
}

// GetValueId returns the ValueId field value if set, zero value otherwise.
func (o *AttributeValueName) GetValueId() int32 {
	if o == nil || o.ValueId == nil {
		var ret int32
		return ret
	}
	return *o.ValueId
}

// GetValueIdOk returns a tuple with the ValueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueName) GetValueIdOk() (*int32, bool) {
	if o == nil || o.ValueId == nil {
		return nil, false
	}
	return o.ValueId, true
}

// HasValueId returns a boolean if a field has been set.
func (o *AttributeValueName) HasValueId() bool {
	if o != nil && o.ValueId != nil {
		return true
	}

	return false
}

// SetValueId gets a reference to the given int32 and assigns it to the ValueId field.
func (o *AttributeValueName) SetValueId(v int32) {
	o.ValueId = &v
}

func (o AttributeValueName) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Lang != nil {
		toSerialize["lang"] = o.Lang
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ValueId != nil {
		toSerialize["valueId"] = o.ValueId
	}
	return json.Marshal(toSerialize)
}

type NullableAttributeValueName struct {
	value *AttributeValueName
	isSet bool
}

func (v NullableAttributeValueName) Get() *AttributeValueName {
	return v.value
}

func (v *NullableAttributeValueName) Set(val *AttributeValueName) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeValueName) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeValueName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeValueName(val *AttributeValueName) *NullableAttributeValueName {
	return &NullableAttributeValueName{value: val, isSet: true}
}

func (v NullableAttributeValueName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeValueName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


