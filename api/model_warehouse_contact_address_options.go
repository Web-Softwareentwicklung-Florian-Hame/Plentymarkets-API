/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// WarehouseContactAddressOptions struct for WarehouseContactAddressOptions
type WarehouseContactAddressOptions struct {
	TypeId *int32 `json:"typeId,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewWarehouseContactAddressOptions instantiates a new WarehouseContactAddressOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWarehouseContactAddressOptions() *WarehouseContactAddressOptions {
	this := WarehouseContactAddressOptions{}
	return &this
}

// NewWarehouseContactAddressOptionsWithDefaults instantiates a new WarehouseContactAddressOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWarehouseContactAddressOptionsWithDefaults() *WarehouseContactAddressOptions {
	this := WarehouseContactAddressOptions{}
	return &this
}

// GetTypeId returns the TypeId field value if set, zero value otherwise.
func (o *WarehouseContactAddressOptions) GetTypeId() int32 {
	if o == nil || o.TypeId == nil {
		var ret int32
		return ret
	}
	return *o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WarehouseContactAddressOptions) GetTypeIdOk() (*int32, bool) {
	if o == nil || o.TypeId == nil {
		return nil, false
	}
	return o.TypeId, true
}

// HasTypeId returns a boolean if a field has been set.
func (o *WarehouseContactAddressOptions) HasTypeId() bool {
	if o != nil && o.TypeId != nil {
		return true
	}

	return false
}

// SetTypeId gets a reference to the given int32 and assigns it to the TypeId field.
func (o *WarehouseContactAddressOptions) SetTypeId(v int32) {
	o.TypeId = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *WarehouseContactAddressOptions) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WarehouseContactAddressOptions) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *WarehouseContactAddressOptions) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *WarehouseContactAddressOptions) SetValue(v string) {
	o.Value = &v
}

func (o WarehouseContactAddressOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TypeId != nil {
		toSerialize["typeId"] = o.TypeId
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableWarehouseContactAddressOptions struct {
	value *WarehouseContactAddressOptions
	isSet bool
}

func (v NullableWarehouseContactAddressOptions) Get() *WarehouseContactAddressOptions {
	return v.value
}

func (v *NullableWarehouseContactAddressOptions) Set(val *WarehouseContactAddressOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableWarehouseContactAddressOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableWarehouseContactAddressOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWarehouseContactAddressOptions(val *WarehouseContactAddressOptions) *NullableWarehouseContactAddressOptions {
	return &NullableWarehouseContactAddressOptions{value: val, isSet: true}
}

func (v NullableWarehouseContactAddressOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWarehouseContactAddressOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


