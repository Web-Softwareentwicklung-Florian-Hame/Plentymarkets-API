/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// OrderItemAmount struct for OrderItemAmount
type OrderItemAmount struct {
	Id *int32 `json:"id,omitempty"`
	OrderItemId *int32 `json:"orderItemId,omitempty"`
	IsSystemCurrency *bool `json:"isSystemCurrency,omitempty"`
	Currency *string `json:"currency,omitempty"`
	ExchangeRate *float32 `json:"exchangeRate,omitempty"`
	PurchasePrice *float32 `json:"purchasePrice,omitempty"`
	PriceOriginalGross *float32 `json:"priceOriginalGross,omitempty"`
	PriceOriginalNet *float32 `json:"priceOriginalNet,omitempty"`
	PriceGross *float32 `json:"priceGross,omitempty"`
	PriceNet *float32 `json:"priceNet,omitempty"`
	Surcharge *float32 `json:"surcharge,omitempty"`
	Discount *float32 `json:"discount,omitempty"`
	IsPercentage *bool `json:"isPercentage,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewOrderItemAmount instantiates a new OrderItemAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderItemAmount() *OrderItemAmount {
	this := OrderItemAmount{}
	return &this
}

// NewOrderItemAmountWithDefaults instantiates a new OrderItemAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderItemAmountWithDefaults() *OrderItemAmount {
	this := OrderItemAmount{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrderItemAmount) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrderItemAmount) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OrderItemAmount) SetId(v int32) {
	o.Id = &v
}

// GetOrderItemId returns the OrderItemId field value if set, zero value otherwise.
func (o *OrderItemAmount) GetOrderItemId() int32 {
	if o == nil || o.OrderItemId == nil {
		var ret int32
		return ret
	}
	return *o.OrderItemId
}

// GetOrderItemIdOk returns a tuple with the OrderItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetOrderItemIdOk() (*int32, bool) {
	if o == nil || o.OrderItemId == nil {
		return nil, false
	}
	return o.OrderItemId, true
}

// HasOrderItemId returns a boolean if a field has been set.
func (o *OrderItemAmount) HasOrderItemId() bool {
	if o != nil && o.OrderItemId != nil {
		return true
	}

	return false
}

// SetOrderItemId gets a reference to the given int32 and assigns it to the OrderItemId field.
func (o *OrderItemAmount) SetOrderItemId(v int32) {
	o.OrderItemId = &v
}

// GetIsSystemCurrency returns the IsSystemCurrency field value if set, zero value otherwise.
func (o *OrderItemAmount) GetIsSystemCurrency() bool {
	if o == nil || o.IsSystemCurrency == nil {
		var ret bool
		return ret
	}
	return *o.IsSystemCurrency
}

// GetIsSystemCurrencyOk returns a tuple with the IsSystemCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetIsSystemCurrencyOk() (*bool, bool) {
	if o == nil || o.IsSystemCurrency == nil {
		return nil, false
	}
	return o.IsSystemCurrency, true
}

// HasIsSystemCurrency returns a boolean if a field has been set.
func (o *OrderItemAmount) HasIsSystemCurrency() bool {
	if o != nil && o.IsSystemCurrency != nil {
		return true
	}

	return false
}

// SetIsSystemCurrency gets a reference to the given bool and assigns it to the IsSystemCurrency field.
func (o *OrderItemAmount) SetIsSystemCurrency(v bool) {
	o.IsSystemCurrency = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *OrderItemAmount) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *OrderItemAmount) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *OrderItemAmount) SetCurrency(v string) {
	o.Currency = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *OrderItemAmount) GetExchangeRate() float32 {
	if o == nil || o.ExchangeRate == nil {
		var ret float32
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetExchangeRateOk() (*float32, bool) {
	if o == nil || o.ExchangeRate == nil {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *OrderItemAmount) HasExchangeRate() bool {
	if o != nil && o.ExchangeRate != nil {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float32 and assigns it to the ExchangeRate field.
func (o *OrderItemAmount) SetExchangeRate(v float32) {
	o.ExchangeRate = &v
}

// GetPurchasePrice returns the PurchasePrice field value if set, zero value otherwise.
func (o *OrderItemAmount) GetPurchasePrice() float32 {
	if o == nil || o.PurchasePrice == nil {
		var ret float32
		return ret
	}
	return *o.PurchasePrice
}

// GetPurchasePriceOk returns a tuple with the PurchasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetPurchasePriceOk() (*float32, bool) {
	if o == nil || o.PurchasePrice == nil {
		return nil, false
	}
	return o.PurchasePrice, true
}

// HasPurchasePrice returns a boolean if a field has been set.
func (o *OrderItemAmount) HasPurchasePrice() bool {
	if o != nil && o.PurchasePrice != nil {
		return true
	}

	return false
}

// SetPurchasePrice gets a reference to the given float32 and assigns it to the PurchasePrice field.
func (o *OrderItemAmount) SetPurchasePrice(v float32) {
	o.PurchasePrice = &v
}

// GetPriceOriginalGross returns the PriceOriginalGross field value if set, zero value otherwise.
func (o *OrderItemAmount) GetPriceOriginalGross() float32 {
	if o == nil || o.PriceOriginalGross == nil {
		var ret float32
		return ret
	}
	return *o.PriceOriginalGross
}

// GetPriceOriginalGrossOk returns a tuple with the PriceOriginalGross field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetPriceOriginalGrossOk() (*float32, bool) {
	if o == nil || o.PriceOriginalGross == nil {
		return nil, false
	}
	return o.PriceOriginalGross, true
}

// HasPriceOriginalGross returns a boolean if a field has been set.
func (o *OrderItemAmount) HasPriceOriginalGross() bool {
	if o != nil && o.PriceOriginalGross != nil {
		return true
	}

	return false
}

// SetPriceOriginalGross gets a reference to the given float32 and assigns it to the PriceOriginalGross field.
func (o *OrderItemAmount) SetPriceOriginalGross(v float32) {
	o.PriceOriginalGross = &v
}

// GetPriceOriginalNet returns the PriceOriginalNet field value if set, zero value otherwise.
func (o *OrderItemAmount) GetPriceOriginalNet() float32 {
	if o == nil || o.PriceOriginalNet == nil {
		var ret float32
		return ret
	}
	return *o.PriceOriginalNet
}

// GetPriceOriginalNetOk returns a tuple with the PriceOriginalNet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetPriceOriginalNetOk() (*float32, bool) {
	if o == nil || o.PriceOriginalNet == nil {
		return nil, false
	}
	return o.PriceOriginalNet, true
}

// HasPriceOriginalNet returns a boolean if a field has been set.
func (o *OrderItemAmount) HasPriceOriginalNet() bool {
	if o != nil && o.PriceOriginalNet != nil {
		return true
	}

	return false
}

// SetPriceOriginalNet gets a reference to the given float32 and assigns it to the PriceOriginalNet field.
func (o *OrderItemAmount) SetPriceOriginalNet(v float32) {
	o.PriceOriginalNet = &v
}

// GetPriceGross returns the PriceGross field value if set, zero value otherwise.
func (o *OrderItemAmount) GetPriceGross() float32 {
	if o == nil || o.PriceGross == nil {
		var ret float32
		return ret
	}
	return *o.PriceGross
}

// GetPriceGrossOk returns a tuple with the PriceGross field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetPriceGrossOk() (*float32, bool) {
	if o == nil || o.PriceGross == nil {
		return nil, false
	}
	return o.PriceGross, true
}

// HasPriceGross returns a boolean if a field has been set.
func (o *OrderItemAmount) HasPriceGross() bool {
	if o != nil && o.PriceGross != nil {
		return true
	}

	return false
}

// SetPriceGross gets a reference to the given float32 and assigns it to the PriceGross field.
func (o *OrderItemAmount) SetPriceGross(v float32) {
	o.PriceGross = &v
}

// GetPriceNet returns the PriceNet field value if set, zero value otherwise.
func (o *OrderItemAmount) GetPriceNet() float32 {
	if o == nil || o.PriceNet == nil {
		var ret float32
		return ret
	}
	return *o.PriceNet
}

// GetPriceNetOk returns a tuple with the PriceNet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetPriceNetOk() (*float32, bool) {
	if o == nil || o.PriceNet == nil {
		return nil, false
	}
	return o.PriceNet, true
}

// HasPriceNet returns a boolean if a field has been set.
func (o *OrderItemAmount) HasPriceNet() bool {
	if o != nil && o.PriceNet != nil {
		return true
	}

	return false
}

// SetPriceNet gets a reference to the given float32 and assigns it to the PriceNet field.
func (o *OrderItemAmount) SetPriceNet(v float32) {
	o.PriceNet = &v
}

// GetSurcharge returns the Surcharge field value if set, zero value otherwise.
func (o *OrderItemAmount) GetSurcharge() float32 {
	if o == nil || o.Surcharge == nil {
		var ret float32
		return ret
	}
	return *o.Surcharge
}

// GetSurchargeOk returns a tuple with the Surcharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetSurchargeOk() (*float32, bool) {
	if o == nil || o.Surcharge == nil {
		return nil, false
	}
	return o.Surcharge, true
}

// HasSurcharge returns a boolean if a field has been set.
func (o *OrderItemAmount) HasSurcharge() bool {
	if o != nil && o.Surcharge != nil {
		return true
	}

	return false
}

// SetSurcharge gets a reference to the given float32 and assigns it to the Surcharge field.
func (o *OrderItemAmount) SetSurcharge(v float32) {
	o.Surcharge = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *OrderItemAmount) GetDiscount() float32 {
	if o == nil || o.Discount == nil {
		var ret float32
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetDiscountOk() (*float32, bool) {
	if o == nil || o.Discount == nil {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *OrderItemAmount) HasDiscount() bool {
	if o != nil && o.Discount != nil {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float32 and assigns it to the Discount field.
func (o *OrderItemAmount) SetDiscount(v float32) {
	o.Discount = &v
}

// GetIsPercentage returns the IsPercentage field value if set, zero value otherwise.
func (o *OrderItemAmount) GetIsPercentage() bool {
	if o == nil || o.IsPercentage == nil {
		var ret bool
		return ret
	}
	return *o.IsPercentage
}

// GetIsPercentageOk returns a tuple with the IsPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetIsPercentageOk() (*bool, bool) {
	if o == nil || o.IsPercentage == nil {
		return nil, false
	}
	return o.IsPercentage, true
}

// HasIsPercentage returns a boolean if a field has been set.
func (o *OrderItemAmount) HasIsPercentage() bool {
	if o != nil && o.IsPercentage != nil {
		return true
	}

	return false
}

// SetIsPercentage gets a reference to the given bool and assigns it to the IsPercentage field.
func (o *OrderItemAmount) SetIsPercentage(v bool) {
	o.IsPercentage = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OrderItemAmount) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OrderItemAmount) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *OrderItemAmount) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OrderItemAmount) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderItemAmount) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OrderItemAmount) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *OrderItemAmount) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o OrderItemAmount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.OrderItemId != nil {
		toSerialize["orderItemId"] = o.OrderItemId
	}
	if o.IsSystemCurrency != nil {
		toSerialize["isSystemCurrency"] = o.IsSystemCurrency
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.ExchangeRate != nil {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if o.PurchasePrice != nil {
		toSerialize["purchasePrice"] = o.PurchasePrice
	}
	if o.PriceOriginalGross != nil {
		toSerialize["priceOriginalGross"] = o.PriceOriginalGross
	}
	if o.PriceOriginalNet != nil {
		toSerialize["priceOriginalNet"] = o.PriceOriginalNet
	}
	if o.PriceGross != nil {
		toSerialize["priceGross"] = o.PriceGross
	}
	if o.PriceNet != nil {
		toSerialize["priceNet"] = o.PriceNet
	}
	if o.Surcharge != nil {
		toSerialize["surcharge"] = o.Surcharge
	}
	if o.Discount != nil {
		toSerialize["discount"] = o.Discount
	}
	if o.IsPercentage != nil {
		toSerialize["isPercentage"] = o.IsPercentage
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableOrderItemAmount struct {
	value *OrderItemAmount
	isSet bool
}

func (v NullableOrderItemAmount) Get() *OrderItemAmount {
	return v.value
}

func (v *NullableOrderItemAmount) Set(val *OrderItemAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderItemAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderItemAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderItemAmount(val *OrderItemAmount) *NullableOrderItemAmount {
	return &NullableOrderItemAmount{value: val, isSet: true}
}

func (v NullableOrderItemAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderItemAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


