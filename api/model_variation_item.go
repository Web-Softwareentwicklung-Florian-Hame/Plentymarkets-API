/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// VariationItem item model superior to the variation
type VariationItem struct {
	Id *int32 `json:"id,omitempty"`
	Position *int32 `json:"position,omitempty"`
	ManufacturerId *int32 `json:"manufacturerId,omitempty"`
	StockType *int32 `json:"stockType,omitempty"`
	AddCmsPage *string `json:"add_cms_page,omitempty"`
	StoreSpecial *int32 `json:"storeSpecial,omitempty"`
	Condition *int32 `json:"condition,omitempty"`
	AmazonFedas *string `json:"amazonFedas,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	Free1 *string `json:"free1,omitempty"`
	Free2 *string `json:"free2,omitempty"`
	Free3 *string `json:"free3,omitempty"`
	Free4 *string `json:"free4,omitempty"`
	Free5 *string `json:"free5,omitempty"`
	Free6 *string `json:"free6,omitempty"`
	Free7 *string `json:"free7,omitempty"`
	Free8 *string `json:"free8,omitempty"`
	Free9 *string `json:"free9,omitempty"`
	Free10 *string `json:"free10,omitempty"`
	Free11 *string `json:"free11,omitempty"`
	Free12 *string `json:"free12,omitempty"`
	Free13 *string `json:"free13,omitempty"`
	Free14 *string `json:"free14,omitempty"`
	Free15 *string `json:"free15,omitempty"`
	Free16 *string `json:"free16,omitempty"`
	Free17 *string `json:"free17,omitempty"`
	Free18 *string `json:"free18,omitempty"`
	Free19 *string `json:"free19,omitempty"`
	Free20 *string `json:"free20,omitempty"`
	CustomsTariffNumber *string `json:"customsTariffNumber,omitempty"`
	ProducingCountryId *int32 `json:"producingCountryId,omitempty"`
	RevenueAccount *int32 `json:"revenueAccount,omitempty"`
	CouponRestriction *int32 `json:"couponRestriction,omitempty"`
	FlagOne *int32 `json:"flagOne,omitempty"`
	FlagTwo *int32 `json:"flagTwo,omitempty"`
	AgeRestriction *int32 `json:"ageRestriction,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	AmazonProductType *int32 `json:"amazonProductType,omitempty"`
	EbayPresetId *int32 `json:"ebayPresetId,omitempty"`
	EbayCategory *string `json:"ebayCategory,omitempty"`
	EbayCategory2 *string `json:"ebayCategory2,omitempty"`
	EbayStoreCategory *string `json:"ebayStoreCategory,omitempty"`
	EbayStoreCategory2 *string `json:"ebayStoreCategory2,omitempty"`
	AmazonFbaPlatform *int32 `json:"amazonFbaPlatform,omitempty"`
	Feedback *int32 `json:"feedback,omitempty"`
	Gimahhot *string `json:"gimahhot,omitempty"`
	MaximumOrderQuantity *float32 `json:"maximumOrderQuantity,omitempty"`
	IsSubscribable *bool `json:"isSubscribable,omitempty"`
	RakutenCategoryId *int32 `json:"rakutenCategoryId,omitempty"`
	IsShippingPackage *bool `json:"isShippingPackage,omitempty"`
	ConditionApi *float32 `json:"conditionApi,omitempty"`
	IsSerialNumber *bool `json:"isSerialNumber,omitempty"`
	IsShippableByAmazon *bool `json:"isShippableByAmazon,omitempty"`
	OwnerId *int32 `json:"ownerId,omitempty"`
	ItemType *string `json:"itemType,omitempty"`
	MainVariationId *int32 `json:"mainVariationId,omitempty"`
}

// NewVariationItem instantiates a new VariationItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariationItem() *VariationItem {
	this := VariationItem{}
	return &this
}

// NewVariationItemWithDefaults instantiates a new VariationItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariationItemWithDefaults() *VariationItem {
	this := VariationItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VariationItem) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VariationItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *VariationItem) SetId(v int32) {
	o.Id = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *VariationItem) GetPosition() int32 {
	if o == nil || o.Position == nil {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetPositionOk() (*int32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *VariationItem) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *VariationItem) SetPosition(v int32) {
	o.Position = &v
}

// GetManufacturerId returns the ManufacturerId field value if set, zero value otherwise.
func (o *VariationItem) GetManufacturerId() int32 {
	if o == nil || o.ManufacturerId == nil {
		var ret int32
		return ret
	}
	return *o.ManufacturerId
}

// GetManufacturerIdOk returns a tuple with the ManufacturerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetManufacturerIdOk() (*int32, bool) {
	if o == nil || o.ManufacturerId == nil {
		return nil, false
	}
	return o.ManufacturerId, true
}

// HasManufacturerId returns a boolean if a field has been set.
func (o *VariationItem) HasManufacturerId() bool {
	if o != nil && o.ManufacturerId != nil {
		return true
	}

	return false
}

// SetManufacturerId gets a reference to the given int32 and assigns it to the ManufacturerId field.
func (o *VariationItem) SetManufacturerId(v int32) {
	o.ManufacturerId = &v
}

// GetStockType returns the StockType field value if set, zero value otherwise.
func (o *VariationItem) GetStockType() int32 {
	if o == nil || o.StockType == nil {
		var ret int32
		return ret
	}
	return *o.StockType
}

// GetStockTypeOk returns a tuple with the StockType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetStockTypeOk() (*int32, bool) {
	if o == nil || o.StockType == nil {
		return nil, false
	}
	return o.StockType, true
}

// HasStockType returns a boolean if a field has been set.
func (o *VariationItem) HasStockType() bool {
	if o != nil && o.StockType != nil {
		return true
	}

	return false
}

// SetStockType gets a reference to the given int32 and assigns it to the StockType field.
func (o *VariationItem) SetStockType(v int32) {
	o.StockType = &v
}

// GetAddCmsPage returns the AddCmsPage field value if set, zero value otherwise.
func (o *VariationItem) GetAddCmsPage() string {
	if o == nil || o.AddCmsPage == nil {
		var ret string
		return ret
	}
	return *o.AddCmsPage
}

// GetAddCmsPageOk returns a tuple with the AddCmsPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetAddCmsPageOk() (*string, bool) {
	if o == nil || o.AddCmsPage == nil {
		return nil, false
	}
	return o.AddCmsPage, true
}

// HasAddCmsPage returns a boolean if a field has been set.
func (o *VariationItem) HasAddCmsPage() bool {
	if o != nil && o.AddCmsPage != nil {
		return true
	}

	return false
}

// SetAddCmsPage gets a reference to the given string and assigns it to the AddCmsPage field.
func (o *VariationItem) SetAddCmsPage(v string) {
	o.AddCmsPage = &v
}

// GetStoreSpecial returns the StoreSpecial field value if set, zero value otherwise.
func (o *VariationItem) GetStoreSpecial() int32 {
	if o == nil || o.StoreSpecial == nil {
		var ret int32
		return ret
	}
	return *o.StoreSpecial
}

// GetStoreSpecialOk returns a tuple with the StoreSpecial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetStoreSpecialOk() (*int32, bool) {
	if o == nil || o.StoreSpecial == nil {
		return nil, false
	}
	return o.StoreSpecial, true
}

// HasStoreSpecial returns a boolean if a field has been set.
func (o *VariationItem) HasStoreSpecial() bool {
	if o != nil && o.StoreSpecial != nil {
		return true
	}

	return false
}

// SetStoreSpecial gets a reference to the given int32 and assigns it to the StoreSpecial field.
func (o *VariationItem) SetStoreSpecial(v int32) {
	o.StoreSpecial = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *VariationItem) GetCondition() int32 {
	if o == nil || o.Condition == nil {
		var ret int32
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetConditionOk() (*int32, bool) {
	if o == nil || o.Condition == nil {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *VariationItem) HasCondition() bool {
	if o != nil && o.Condition != nil {
		return true
	}

	return false
}

// SetCondition gets a reference to the given int32 and assigns it to the Condition field.
func (o *VariationItem) SetCondition(v int32) {
	o.Condition = &v
}

// GetAmazonFedas returns the AmazonFedas field value if set, zero value otherwise.
func (o *VariationItem) GetAmazonFedas() string {
	if o == nil || o.AmazonFedas == nil {
		var ret string
		return ret
	}
	return *o.AmazonFedas
}

// GetAmazonFedasOk returns a tuple with the AmazonFedas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetAmazonFedasOk() (*string, bool) {
	if o == nil || o.AmazonFedas == nil {
		return nil, false
	}
	return o.AmazonFedas, true
}

// HasAmazonFedas returns a boolean if a field has been set.
func (o *VariationItem) HasAmazonFedas() bool {
	if o != nil && o.AmazonFedas != nil {
		return true
	}

	return false
}

// SetAmazonFedas gets a reference to the given string and assigns it to the AmazonFedas field.
func (o *VariationItem) SetAmazonFedas(v string) {
	o.AmazonFedas = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *VariationItem) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VariationItem) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *VariationItem) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetFree1 returns the Free1 field value if set, zero value otherwise.
func (o *VariationItem) GetFree1() string {
	if o == nil || o.Free1 == nil {
		var ret string
		return ret
	}
	return *o.Free1
}

// GetFree1Ok returns a tuple with the Free1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree1Ok() (*string, bool) {
	if o == nil || o.Free1 == nil {
		return nil, false
	}
	return o.Free1, true
}

// HasFree1 returns a boolean if a field has been set.
func (o *VariationItem) HasFree1() bool {
	if o != nil && o.Free1 != nil {
		return true
	}

	return false
}

// SetFree1 gets a reference to the given string and assigns it to the Free1 field.
func (o *VariationItem) SetFree1(v string) {
	o.Free1 = &v
}

// GetFree2 returns the Free2 field value if set, zero value otherwise.
func (o *VariationItem) GetFree2() string {
	if o == nil || o.Free2 == nil {
		var ret string
		return ret
	}
	return *o.Free2
}

// GetFree2Ok returns a tuple with the Free2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree2Ok() (*string, bool) {
	if o == nil || o.Free2 == nil {
		return nil, false
	}
	return o.Free2, true
}

// HasFree2 returns a boolean if a field has been set.
func (o *VariationItem) HasFree2() bool {
	if o != nil && o.Free2 != nil {
		return true
	}

	return false
}

// SetFree2 gets a reference to the given string and assigns it to the Free2 field.
func (o *VariationItem) SetFree2(v string) {
	o.Free2 = &v
}

// GetFree3 returns the Free3 field value if set, zero value otherwise.
func (o *VariationItem) GetFree3() string {
	if o == nil || o.Free3 == nil {
		var ret string
		return ret
	}
	return *o.Free3
}

// GetFree3Ok returns a tuple with the Free3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree3Ok() (*string, bool) {
	if o == nil || o.Free3 == nil {
		return nil, false
	}
	return o.Free3, true
}

// HasFree3 returns a boolean if a field has been set.
func (o *VariationItem) HasFree3() bool {
	if o != nil && o.Free3 != nil {
		return true
	}

	return false
}

// SetFree3 gets a reference to the given string and assigns it to the Free3 field.
func (o *VariationItem) SetFree3(v string) {
	o.Free3 = &v
}

// GetFree4 returns the Free4 field value if set, zero value otherwise.
func (o *VariationItem) GetFree4() string {
	if o == nil || o.Free4 == nil {
		var ret string
		return ret
	}
	return *o.Free4
}

// GetFree4Ok returns a tuple with the Free4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree4Ok() (*string, bool) {
	if o == nil || o.Free4 == nil {
		return nil, false
	}
	return o.Free4, true
}

// HasFree4 returns a boolean if a field has been set.
func (o *VariationItem) HasFree4() bool {
	if o != nil && o.Free4 != nil {
		return true
	}

	return false
}

// SetFree4 gets a reference to the given string and assigns it to the Free4 field.
func (o *VariationItem) SetFree4(v string) {
	o.Free4 = &v
}

// GetFree5 returns the Free5 field value if set, zero value otherwise.
func (o *VariationItem) GetFree5() string {
	if o == nil || o.Free5 == nil {
		var ret string
		return ret
	}
	return *o.Free5
}

// GetFree5Ok returns a tuple with the Free5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree5Ok() (*string, bool) {
	if o == nil || o.Free5 == nil {
		return nil, false
	}
	return o.Free5, true
}

// HasFree5 returns a boolean if a field has been set.
func (o *VariationItem) HasFree5() bool {
	if o != nil && o.Free5 != nil {
		return true
	}

	return false
}

// SetFree5 gets a reference to the given string and assigns it to the Free5 field.
func (o *VariationItem) SetFree5(v string) {
	o.Free5 = &v
}

// GetFree6 returns the Free6 field value if set, zero value otherwise.
func (o *VariationItem) GetFree6() string {
	if o == nil || o.Free6 == nil {
		var ret string
		return ret
	}
	return *o.Free6
}

// GetFree6Ok returns a tuple with the Free6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree6Ok() (*string, bool) {
	if o == nil || o.Free6 == nil {
		return nil, false
	}
	return o.Free6, true
}

// HasFree6 returns a boolean if a field has been set.
func (o *VariationItem) HasFree6() bool {
	if o != nil && o.Free6 != nil {
		return true
	}

	return false
}

// SetFree6 gets a reference to the given string and assigns it to the Free6 field.
func (o *VariationItem) SetFree6(v string) {
	o.Free6 = &v
}

// GetFree7 returns the Free7 field value if set, zero value otherwise.
func (o *VariationItem) GetFree7() string {
	if o == nil || o.Free7 == nil {
		var ret string
		return ret
	}
	return *o.Free7
}

// GetFree7Ok returns a tuple with the Free7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree7Ok() (*string, bool) {
	if o == nil || o.Free7 == nil {
		return nil, false
	}
	return o.Free7, true
}

// HasFree7 returns a boolean if a field has been set.
func (o *VariationItem) HasFree7() bool {
	if o != nil && o.Free7 != nil {
		return true
	}

	return false
}

// SetFree7 gets a reference to the given string and assigns it to the Free7 field.
func (o *VariationItem) SetFree7(v string) {
	o.Free7 = &v
}

// GetFree8 returns the Free8 field value if set, zero value otherwise.
func (o *VariationItem) GetFree8() string {
	if o == nil || o.Free8 == nil {
		var ret string
		return ret
	}
	return *o.Free8
}

// GetFree8Ok returns a tuple with the Free8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree8Ok() (*string, bool) {
	if o == nil || o.Free8 == nil {
		return nil, false
	}
	return o.Free8, true
}

// HasFree8 returns a boolean if a field has been set.
func (o *VariationItem) HasFree8() bool {
	if o != nil && o.Free8 != nil {
		return true
	}

	return false
}

// SetFree8 gets a reference to the given string and assigns it to the Free8 field.
func (o *VariationItem) SetFree8(v string) {
	o.Free8 = &v
}

// GetFree9 returns the Free9 field value if set, zero value otherwise.
func (o *VariationItem) GetFree9() string {
	if o == nil || o.Free9 == nil {
		var ret string
		return ret
	}
	return *o.Free9
}

// GetFree9Ok returns a tuple with the Free9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree9Ok() (*string, bool) {
	if o == nil || o.Free9 == nil {
		return nil, false
	}
	return o.Free9, true
}

// HasFree9 returns a boolean if a field has been set.
func (o *VariationItem) HasFree9() bool {
	if o != nil && o.Free9 != nil {
		return true
	}

	return false
}

// SetFree9 gets a reference to the given string and assigns it to the Free9 field.
func (o *VariationItem) SetFree9(v string) {
	o.Free9 = &v
}

// GetFree10 returns the Free10 field value if set, zero value otherwise.
func (o *VariationItem) GetFree10() string {
	if o == nil || o.Free10 == nil {
		var ret string
		return ret
	}
	return *o.Free10
}

// GetFree10Ok returns a tuple with the Free10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree10Ok() (*string, bool) {
	if o == nil || o.Free10 == nil {
		return nil, false
	}
	return o.Free10, true
}

// HasFree10 returns a boolean if a field has been set.
func (o *VariationItem) HasFree10() bool {
	if o != nil && o.Free10 != nil {
		return true
	}

	return false
}

// SetFree10 gets a reference to the given string and assigns it to the Free10 field.
func (o *VariationItem) SetFree10(v string) {
	o.Free10 = &v
}

// GetFree11 returns the Free11 field value if set, zero value otherwise.
func (o *VariationItem) GetFree11() string {
	if o == nil || o.Free11 == nil {
		var ret string
		return ret
	}
	return *o.Free11
}

// GetFree11Ok returns a tuple with the Free11 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree11Ok() (*string, bool) {
	if o == nil || o.Free11 == nil {
		return nil, false
	}
	return o.Free11, true
}

// HasFree11 returns a boolean if a field has been set.
func (o *VariationItem) HasFree11() bool {
	if o != nil && o.Free11 != nil {
		return true
	}

	return false
}

// SetFree11 gets a reference to the given string and assigns it to the Free11 field.
func (o *VariationItem) SetFree11(v string) {
	o.Free11 = &v
}

// GetFree12 returns the Free12 field value if set, zero value otherwise.
func (o *VariationItem) GetFree12() string {
	if o == nil || o.Free12 == nil {
		var ret string
		return ret
	}
	return *o.Free12
}

// GetFree12Ok returns a tuple with the Free12 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree12Ok() (*string, bool) {
	if o == nil || o.Free12 == nil {
		return nil, false
	}
	return o.Free12, true
}

// HasFree12 returns a boolean if a field has been set.
func (o *VariationItem) HasFree12() bool {
	if o != nil && o.Free12 != nil {
		return true
	}

	return false
}

// SetFree12 gets a reference to the given string and assigns it to the Free12 field.
func (o *VariationItem) SetFree12(v string) {
	o.Free12 = &v
}

// GetFree13 returns the Free13 field value if set, zero value otherwise.
func (o *VariationItem) GetFree13() string {
	if o == nil || o.Free13 == nil {
		var ret string
		return ret
	}
	return *o.Free13
}

// GetFree13Ok returns a tuple with the Free13 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree13Ok() (*string, bool) {
	if o == nil || o.Free13 == nil {
		return nil, false
	}
	return o.Free13, true
}

// HasFree13 returns a boolean if a field has been set.
func (o *VariationItem) HasFree13() bool {
	if o != nil && o.Free13 != nil {
		return true
	}

	return false
}

// SetFree13 gets a reference to the given string and assigns it to the Free13 field.
func (o *VariationItem) SetFree13(v string) {
	o.Free13 = &v
}

// GetFree14 returns the Free14 field value if set, zero value otherwise.
func (o *VariationItem) GetFree14() string {
	if o == nil || o.Free14 == nil {
		var ret string
		return ret
	}
	return *o.Free14
}

// GetFree14Ok returns a tuple with the Free14 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree14Ok() (*string, bool) {
	if o == nil || o.Free14 == nil {
		return nil, false
	}
	return o.Free14, true
}

// HasFree14 returns a boolean if a field has been set.
func (o *VariationItem) HasFree14() bool {
	if o != nil && o.Free14 != nil {
		return true
	}

	return false
}

// SetFree14 gets a reference to the given string and assigns it to the Free14 field.
func (o *VariationItem) SetFree14(v string) {
	o.Free14 = &v
}

// GetFree15 returns the Free15 field value if set, zero value otherwise.
func (o *VariationItem) GetFree15() string {
	if o == nil || o.Free15 == nil {
		var ret string
		return ret
	}
	return *o.Free15
}

// GetFree15Ok returns a tuple with the Free15 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree15Ok() (*string, bool) {
	if o == nil || o.Free15 == nil {
		return nil, false
	}
	return o.Free15, true
}

// HasFree15 returns a boolean if a field has been set.
func (o *VariationItem) HasFree15() bool {
	if o != nil && o.Free15 != nil {
		return true
	}

	return false
}

// SetFree15 gets a reference to the given string and assigns it to the Free15 field.
func (o *VariationItem) SetFree15(v string) {
	o.Free15 = &v
}

// GetFree16 returns the Free16 field value if set, zero value otherwise.
func (o *VariationItem) GetFree16() string {
	if o == nil || o.Free16 == nil {
		var ret string
		return ret
	}
	return *o.Free16
}

// GetFree16Ok returns a tuple with the Free16 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree16Ok() (*string, bool) {
	if o == nil || o.Free16 == nil {
		return nil, false
	}
	return o.Free16, true
}

// HasFree16 returns a boolean if a field has been set.
func (o *VariationItem) HasFree16() bool {
	if o != nil && o.Free16 != nil {
		return true
	}

	return false
}

// SetFree16 gets a reference to the given string and assigns it to the Free16 field.
func (o *VariationItem) SetFree16(v string) {
	o.Free16 = &v
}

// GetFree17 returns the Free17 field value if set, zero value otherwise.
func (o *VariationItem) GetFree17() string {
	if o == nil || o.Free17 == nil {
		var ret string
		return ret
	}
	return *o.Free17
}

// GetFree17Ok returns a tuple with the Free17 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree17Ok() (*string, bool) {
	if o == nil || o.Free17 == nil {
		return nil, false
	}
	return o.Free17, true
}

// HasFree17 returns a boolean if a field has been set.
func (o *VariationItem) HasFree17() bool {
	if o != nil && o.Free17 != nil {
		return true
	}

	return false
}

// SetFree17 gets a reference to the given string and assigns it to the Free17 field.
func (o *VariationItem) SetFree17(v string) {
	o.Free17 = &v
}

// GetFree18 returns the Free18 field value if set, zero value otherwise.
func (o *VariationItem) GetFree18() string {
	if o == nil || o.Free18 == nil {
		var ret string
		return ret
	}
	return *o.Free18
}

// GetFree18Ok returns a tuple with the Free18 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree18Ok() (*string, bool) {
	if o == nil || o.Free18 == nil {
		return nil, false
	}
	return o.Free18, true
}

// HasFree18 returns a boolean if a field has been set.
func (o *VariationItem) HasFree18() bool {
	if o != nil && o.Free18 != nil {
		return true
	}

	return false
}

// SetFree18 gets a reference to the given string and assigns it to the Free18 field.
func (o *VariationItem) SetFree18(v string) {
	o.Free18 = &v
}

// GetFree19 returns the Free19 field value if set, zero value otherwise.
func (o *VariationItem) GetFree19() string {
	if o == nil || o.Free19 == nil {
		var ret string
		return ret
	}
	return *o.Free19
}

// GetFree19Ok returns a tuple with the Free19 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree19Ok() (*string, bool) {
	if o == nil || o.Free19 == nil {
		return nil, false
	}
	return o.Free19, true
}

// HasFree19 returns a boolean if a field has been set.
func (o *VariationItem) HasFree19() bool {
	if o != nil && o.Free19 != nil {
		return true
	}

	return false
}

// SetFree19 gets a reference to the given string and assigns it to the Free19 field.
func (o *VariationItem) SetFree19(v string) {
	o.Free19 = &v
}

// GetFree20 returns the Free20 field value if set, zero value otherwise.
func (o *VariationItem) GetFree20() string {
	if o == nil || o.Free20 == nil {
		var ret string
		return ret
	}
	return *o.Free20
}

// GetFree20Ok returns a tuple with the Free20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFree20Ok() (*string, bool) {
	if o == nil || o.Free20 == nil {
		return nil, false
	}
	return o.Free20, true
}

// HasFree20 returns a boolean if a field has been set.
func (o *VariationItem) HasFree20() bool {
	if o != nil && o.Free20 != nil {
		return true
	}

	return false
}

// SetFree20 gets a reference to the given string and assigns it to the Free20 field.
func (o *VariationItem) SetFree20(v string) {
	o.Free20 = &v
}

// GetCustomsTariffNumber returns the CustomsTariffNumber field value if set, zero value otherwise.
func (o *VariationItem) GetCustomsTariffNumber() string {
	if o == nil || o.CustomsTariffNumber == nil {
		var ret string
		return ret
	}
	return *o.CustomsTariffNumber
}

// GetCustomsTariffNumberOk returns a tuple with the CustomsTariffNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetCustomsTariffNumberOk() (*string, bool) {
	if o == nil || o.CustomsTariffNumber == nil {
		return nil, false
	}
	return o.CustomsTariffNumber, true
}

// HasCustomsTariffNumber returns a boolean if a field has been set.
func (o *VariationItem) HasCustomsTariffNumber() bool {
	if o != nil && o.CustomsTariffNumber != nil {
		return true
	}

	return false
}

// SetCustomsTariffNumber gets a reference to the given string and assigns it to the CustomsTariffNumber field.
func (o *VariationItem) SetCustomsTariffNumber(v string) {
	o.CustomsTariffNumber = &v
}

// GetProducingCountryId returns the ProducingCountryId field value if set, zero value otherwise.
func (o *VariationItem) GetProducingCountryId() int32 {
	if o == nil || o.ProducingCountryId == nil {
		var ret int32
		return ret
	}
	return *o.ProducingCountryId
}

// GetProducingCountryIdOk returns a tuple with the ProducingCountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetProducingCountryIdOk() (*int32, bool) {
	if o == nil || o.ProducingCountryId == nil {
		return nil, false
	}
	return o.ProducingCountryId, true
}

// HasProducingCountryId returns a boolean if a field has been set.
func (o *VariationItem) HasProducingCountryId() bool {
	if o != nil && o.ProducingCountryId != nil {
		return true
	}

	return false
}

// SetProducingCountryId gets a reference to the given int32 and assigns it to the ProducingCountryId field.
func (o *VariationItem) SetProducingCountryId(v int32) {
	o.ProducingCountryId = &v
}

// GetRevenueAccount returns the RevenueAccount field value if set, zero value otherwise.
func (o *VariationItem) GetRevenueAccount() int32 {
	if o == nil || o.RevenueAccount == nil {
		var ret int32
		return ret
	}
	return *o.RevenueAccount
}

// GetRevenueAccountOk returns a tuple with the RevenueAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetRevenueAccountOk() (*int32, bool) {
	if o == nil || o.RevenueAccount == nil {
		return nil, false
	}
	return o.RevenueAccount, true
}

// HasRevenueAccount returns a boolean if a field has been set.
func (o *VariationItem) HasRevenueAccount() bool {
	if o != nil && o.RevenueAccount != nil {
		return true
	}

	return false
}

// SetRevenueAccount gets a reference to the given int32 and assigns it to the RevenueAccount field.
func (o *VariationItem) SetRevenueAccount(v int32) {
	o.RevenueAccount = &v
}

// GetCouponRestriction returns the CouponRestriction field value if set, zero value otherwise.
func (o *VariationItem) GetCouponRestriction() int32 {
	if o == nil || o.CouponRestriction == nil {
		var ret int32
		return ret
	}
	return *o.CouponRestriction
}

// GetCouponRestrictionOk returns a tuple with the CouponRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetCouponRestrictionOk() (*int32, bool) {
	if o == nil || o.CouponRestriction == nil {
		return nil, false
	}
	return o.CouponRestriction, true
}

// HasCouponRestriction returns a boolean if a field has been set.
func (o *VariationItem) HasCouponRestriction() bool {
	if o != nil && o.CouponRestriction != nil {
		return true
	}

	return false
}

// SetCouponRestriction gets a reference to the given int32 and assigns it to the CouponRestriction field.
func (o *VariationItem) SetCouponRestriction(v int32) {
	o.CouponRestriction = &v
}

// GetFlagOne returns the FlagOne field value if set, zero value otherwise.
func (o *VariationItem) GetFlagOne() int32 {
	if o == nil || o.FlagOne == nil {
		var ret int32
		return ret
	}
	return *o.FlagOne
}

// GetFlagOneOk returns a tuple with the FlagOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFlagOneOk() (*int32, bool) {
	if o == nil || o.FlagOne == nil {
		return nil, false
	}
	return o.FlagOne, true
}

// HasFlagOne returns a boolean if a field has been set.
func (o *VariationItem) HasFlagOne() bool {
	if o != nil && o.FlagOne != nil {
		return true
	}

	return false
}

// SetFlagOne gets a reference to the given int32 and assigns it to the FlagOne field.
func (o *VariationItem) SetFlagOne(v int32) {
	o.FlagOne = &v
}

// GetFlagTwo returns the FlagTwo field value if set, zero value otherwise.
func (o *VariationItem) GetFlagTwo() int32 {
	if o == nil || o.FlagTwo == nil {
		var ret int32
		return ret
	}
	return *o.FlagTwo
}

// GetFlagTwoOk returns a tuple with the FlagTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFlagTwoOk() (*int32, bool) {
	if o == nil || o.FlagTwo == nil {
		return nil, false
	}
	return o.FlagTwo, true
}

// HasFlagTwo returns a boolean if a field has been set.
func (o *VariationItem) HasFlagTwo() bool {
	if o != nil && o.FlagTwo != nil {
		return true
	}

	return false
}

// SetFlagTwo gets a reference to the given int32 and assigns it to the FlagTwo field.
func (o *VariationItem) SetFlagTwo(v int32) {
	o.FlagTwo = &v
}

// GetAgeRestriction returns the AgeRestriction field value if set, zero value otherwise.
func (o *VariationItem) GetAgeRestriction() int32 {
	if o == nil || o.AgeRestriction == nil {
		var ret int32
		return ret
	}
	return *o.AgeRestriction
}

// GetAgeRestrictionOk returns a tuple with the AgeRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetAgeRestrictionOk() (*int32, bool) {
	if o == nil || o.AgeRestriction == nil {
		return nil, false
	}
	return o.AgeRestriction, true
}

// HasAgeRestriction returns a boolean if a field has been set.
func (o *VariationItem) HasAgeRestriction() bool {
	if o != nil && o.AgeRestriction != nil {
		return true
	}

	return false
}

// SetAgeRestriction gets a reference to the given int32 and assigns it to the AgeRestriction field.
func (o *VariationItem) SetAgeRestriction(v int32) {
	o.AgeRestriction = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VariationItem) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VariationItem) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *VariationItem) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetAmazonProductType returns the AmazonProductType field value if set, zero value otherwise.
func (o *VariationItem) GetAmazonProductType() int32 {
	if o == nil || o.AmazonProductType == nil {
		var ret int32
		return ret
	}
	return *o.AmazonProductType
}

// GetAmazonProductTypeOk returns a tuple with the AmazonProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetAmazonProductTypeOk() (*int32, bool) {
	if o == nil || o.AmazonProductType == nil {
		return nil, false
	}
	return o.AmazonProductType, true
}

// HasAmazonProductType returns a boolean if a field has been set.
func (o *VariationItem) HasAmazonProductType() bool {
	if o != nil && o.AmazonProductType != nil {
		return true
	}

	return false
}

// SetAmazonProductType gets a reference to the given int32 and assigns it to the AmazonProductType field.
func (o *VariationItem) SetAmazonProductType(v int32) {
	o.AmazonProductType = &v
}

// GetEbayPresetId returns the EbayPresetId field value if set, zero value otherwise.
func (o *VariationItem) GetEbayPresetId() int32 {
	if o == nil || o.EbayPresetId == nil {
		var ret int32
		return ret
	}
	return *o.EbayPresetId
}

// GetEbayPresetIdOk returns a tuple with the EbayPresetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetEbayPresetIdOk() (*int32, bool) {
	if o == nil || o.EbayPresetId == nil {
		return nil, false
	}
	return o.EbayPresetId, true
}

// HasEbayPresetId returns a boolean if a field has been set.
func (o *VariationItem) HasEbayPresetId() bool {
	if o != nil && o.EbayPresetId != nil {
		return true
	}

	return false
}

// SetEbayPresetId gets a reference to the given int32 and assigns it to the EbayPresetId field.
func (o *VariationItem) SetEbayPresetId(v int32) {
	o.EbayPresetId = &v
}

// GetEbayCategory returns the EbayCategory field value if set, zero value otherwise.
func (o *VariationItem) GetEbayCategory() string {
	if o == nil || o.EbayCategory == nil {
		var ret string
		return ret
	}
	return *o.EbayCategory
}

// GetEbayCategoryOk returns a tuple with the EbayCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetEbayCategoryOk() (*string, bool) {
	if o == nil || o.EbayCategory == nil {
		return nil, false
	}
	return o.EbayCategory, true
}

// HasEbayCategory returns a boolean if a field has been set.
func (o *VariationItem) HasEbayCategory() bool {
	if o != nil && o.EbayCategory != nil {
		return true
	}

	return false
}

// SetEbayCategory gets a reference to the given string and assigns it to the EbayCategory field.
func (o *VariationItem) SetEbayCategory(v string) {
	o.EbayCategory = &v
}

// GetEbayCategory2 returns the EbayCategory2 field value if set, zero value otherwise.
func (o *VariationItem) GetEbayCategory2() string {
	if o == nil || o.EbayCategory2 == nil {
		var ret string
		return ret
	}
	return *o.EbayCategory2
}

// GetEbayCategory2Ok returns a tuple with the EbayCategory2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetEbayCategory2Ok() (*string, bool) {
	if o == nil || o.EbayCategory2 == nil {
		return nil, false
	}
	return o.EbayCategory2, true
}

// HasEbayCategory2 returns a boolean if a field has been set.
func (o *VariationItem) HasEbayCategory2() bool {
	if o != nil && o.EbayCategory2 != nil {
		return true
	}

	return false
}

// SetEbayCategory2 gets a reference to the given string and assigns it to the EbayCategory2 field.
func (o *VariationItem) SetEbayCategory2(v string) {
	o.EbayCategory2 = &v
}

// GetEbayStoreCategory returns the EbayStoreCategory field value if set, zero value otherwise.
func (o *VariationItem) GetEbayStoreCategory() string {
	if o == nil || o.EbayStoreCategory == nil {
		var ret string
		return ret
	}
	return *o.EbayStoreCategory
}

// GetEbayStoreCategoryOk returns a tuple with the EbayStoreCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetEbayStoreCategoryOk() (*string, bool) {
	if o == nil || o.EbayStoreCategory == nil {
		return nil, false
	}
	return o.EbayStoreCategory, true
}

// HasEbayStoreCategory returns a boolean if a field has been set.
func (o *VariationItem) HasEbayStoreCategory() bool {
	if o != nil && o.EbayStoreCategory != nil {
		return true
	}

	return false
}

// SetEbayStoreCategory gets a reference to the given string and assigns it to the EbayStoreCategory field.
func (o *VariationItem) SetEbayStoreCategory(v string) {
	o.EbayStoreCategory = &v
}

// GetEbayStoreCategory2 returns the EbayStoreCategory2 field value if set, zero value otherwise.
func (o *VariationItem) GetEbayStoreCategory2() string {
	if o == nil || o.EbayStoreCategory2 == nil {
		var ret string
		return ret
	}
	return *o.EbayStoreCategory2
}

// GetEbayStoreCategory2Ok returns a tuple with the EbayStoreCategory2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetEbayStoreCategory2Ok() (*string, bool) {
	if o == nil || o.EbayStoreCategory2 == nil {
		return nil, false
	}
	return o.EbayStoreCategory2, true
}

// HasEbayStoreCategory2 returns a boolean if a field has been set.
func (o *VariationItem) HasEbayStoreCategory2() bool {
	if o != nil && o.EbayStoreCategory2 != nil {
		return true
	}

	return false
}

// SetEbayStoreCategory2 gets a reference to the given string and assigns it to the EbayStoreCategory2 field.
func (o *VariationItem) SetEbayStoreCategory2(v string) {
	o.EbayStoreCategory2 = &v
}

// GetAmazonFbaPlatform returns the AmazonFbaPlatform field value if set, zero value otherwise.
func (o *VariationItem) GetAmazonFbaPlatform() int32 {
	if o == nil || o.AmazonFbaPlatform == nil {
		var ret int32
		return ret
	}
	return *o.AmazonFbaPlatform
}

// GetAmazonFbaPlatformOk returns a tuple with the AmazonFbaPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetAmazonFbaPlatformOk() (*int32, bool) {
	if o == nil || o.AmazonFbaPlatform == nil {
		return nil, false
	}
	return o.AmazonFbaPlatform, true
}

// HasAmazonFbaPlatform returns a boolean if a field has been set.
func (o *VariationItem) HasAmazonFbaPlatform() bool {
	if o != nil && o.AmazonFbaPlatform != nil {
		return true
	}

	return false
}

// SetAmazonFbaPlatform gets a reference to the given int32 and assigns it to the AmazonFbaPlatform field.
func (o *VariationItem) SetAmazonFbaPlatform(v int32) {
	o.AmazonFbaPlatform = &v
}

// GetFeedback returns the Feedback field value if set, zero value otherwise.
func (o *VariationItem) GetFeedback() int32 {
	if o == nil || o.Feedback == nil {
		var ret int32
		return ret
	}
	return *o.Feedback
}

// GetFeedbackOk returns a tuple with the Feedback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetFeedbackOk() (*int32, bool) {
	if o == nil || o.Feedback == nil {
		return nil, false
	}
	return o.Feedback, true
}

// HasFeedback returns a boolean if a field has been set.
func (o *VariationItem) HasFeedback() bool {
	if o != nil && o.Feedback != nil {
		return true
	}

	return false
}

// SetFeedback gets a reference to the given int32 and assigns it to the Feedback field.
func (o *VariationItem) SetFeedback(v int32) {
	o.Feedback = &v
}

// GetGimahhot returns the Gimahhot field value if set, zero value otherwise.
func (o *VariationItem) GetGimahhot() string {
	if o == nil || o.Gimahhot == nil {
		var ret string
		return ret
	}
	return *o.Gimahhot
}

// GetGimahhotOk returns a tuple with the Gimahhot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetGimahhotOk() (*string, bool) {
	if o == nil || o.Gimahhot == nil {
		return nil, false
	}
	return o.Gimahhot, true
}

// HasGimahhot returns a boolean if a field has been set.
func (o *VariationItem) HasGimahhot() bool {
	if o != nil && o.Gimahhot != nil {
		return true
	}

	return false
}

// SetGimahhot gets a reference to the given string and assigns it to the Gimahhot field.
func (o *VariationItem) SetGimahhot(v string) {
	o.Gimahhot = &v
}

// GetMaximumOrderQuantity returns the MaximumOrderQuantity field value if set, zero value otherwise.
func (o *VariationItem) GetMaximumOrderQuantity() float32 {
	if o == nil || o.MaximumOrderQuantity == nil {
		var ret float32
		return ret
	}
	return *o.MaximumOrderQuantity
}

// GetMaximumOrderQuantityOk returns a tuple with the MaximumOrderQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetMaximumOrderQuantityOk() (*float32, bool) {
	if o == nil || o.MaximumOrderQuantity == nil {
		return nil, false
	}
	return o.MaximumOrderQuantity, true
}

// HasMaximumOrderQuantity returns a boolean if a field has been set.
func (o *VariationItem) HasMaximumOrderQuantity() bool {
	if o != nil && o.MaximumOrderQuantity != nil {
		return true
	}

	return false
}

// SetMaximumOrderQuantity gets a reference to the given float32 and assigns it to the MaximumOrderQuantity field.
func (o *VariationItem) SetMaximumOrderQuantity(v float32) {
	o.MaximumOrderQuantity = &v
}

// GetIsSubscribable returns the IsSubscribable field value if set, zero value otherwise.
func (o *VariationItem) GetIsSubscribable() bool {
	if o == nil || o.IsSubscribable == nil {
		var ret bool
		return ret
	}
	return *o.IsSubscribable
}

// GetIsSubscribableOk returns a tuple with the IsSubscribable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetIsSubscribableOk() (*bool, bool) {
	if o == nil || o.IsSubscribable == nil {
		return nil, false
	}
	return o.IsSubscribable, true
}

// HasIsSubscribable returns a boolean if a field has been set.
func (o *VariationItem) HasIsSubscribable() bool {
	if o != nil && o.IsSubscribable != nil {
		return true
	}

	return false
}

// SetIsSubscribable gets a reference to the given bool and assigns it to the IsSubscribable field.
func (o *VariationItem) SetIsSubscribable(v bool) {
	o.IsSubscribable = &v
}

// GetRakutenCategoryId returns the RakutenCategoryId field value if set, zero value otherwise.
func (o *VariationItem) GetRakutenCategoryId() int32 {
	if o == nil || o.RakutenCategoryId == nil {
		var ret int32
		return ret
	}
	return *o.RakutenCategoryId
}

// GetRakutenCategoryIdOk returns a tuple with the RakutenCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetRakutenCategoryIdOk() (*int32, bool) {
	if o == nil || o.RakutenCategoryId == nil {
		return nil, false
	}
	return o.RakutenCategoryId, true
}

// HasRakutenCategoryId returns a boolean if a field has been set.
func (o *VariationItem) HasRakutenCategoryId() bool {
	if o != nil && o.RakutenCategoryId != nil {
		return true
	}

	return false
}

// SetRakutenCategoryId gets a reference to the given int32 and assigns it to the RakutenCategoryId field.
func (o *VariationItem) SetRakutenCategoryId(v int32) {
	o.RakutenCategoryId = &v
}

// GetIsShippingPackage returns the IsShippingPackage field value if set, zero value otherwise.
func (o *VariationItem) GetIsShippingPackage() bool {
	if o == nil || o.IsShippingPackage == nil {
		var ret bool
		return ret
	}
	return *o.IsShippingPackage
}

// GetIsShippingPackageOk returns a tuple with the IsShippingPackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetIsShippingPackageOk() (*bool, bool) {
	if o == nil || o.IsShippingPackage == nil {
		return nil, false
	}
	return o.IsShippingPackage, true
}

// HasIsShippingPackage returns a boolean if a field has been set.
func (o *VariationItem) HasIsShippingPackage() bool {
	if o != nil && o.IsShippingPackage != nil {
		return true
	}

	return false
}

// SetIsShippingPackage gets a reference to the given bool and assigns it to the IsShippingPackage field.
func (o *VariationItem) SetIsShippingPackage(v bool) {
	o.IsShippingPackage = &v
}

// GetConditionApi returns the ConditionApi field value if set, zero value otherwise.
func (o *VariationItem) GetConditionApi() float32 {
	if o == nil || o.ConditionApi == nil {
		var ret float32
		return ret
	}
	return *o.ConditionApi
}

// GetConditionApiOk returns a tuple with the ConditionApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetConditionApiOk() (*float32, bool) {
	if o == nil || o.ConditionApi == nil {
		return nil, false
	}
	return o.ConditionApi, true
}

// HasConditionApi returns a boolean if a field has been set.
func (o *VariationItem) HasConditionApi() bool {
	if o != nil && o.ConditionApi != nil {
		return true
	}

	return false
}

// SetConditionApi gets a reference to the given float32 and assigns it to the ConditionApi field.
func (o *VariationItem) SetConditionApi(v float32) {
	o.ConditionApi = &v
}

// GetIsSerialNumber returns the IsSerialNumber field value if set, zero value otherwise.
func (o *VariationItem) GetIsSerialNumber() bool {
	if o == nil || o.IsSerialNumber == nil {
		var ret bool
		return ret
	}
	return *o.IsSerialNumber
}

// GetIsSerialNumberOk returns a tuple with the IsSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetIsSerialNumberOk() (*bool, bool) {
	if o == nil || o.IsSerialNumber == nil {
		return nil, false
	}
	return o.IsSerialNumber, true
}

// HasIsSerialNumber returns a boolean if a field has been set.
func (o *VariationItem) HasIsSerialNumber() bool {
	if o != nil && o.IsSerialNumber != nil {
		return true
	}

	return false
}

// SetIsSerialNumber gets a reference to the given bool and assigns it to the IsSerialNumber field.
func (o *VariationItem) SetIsSerialNumber(v bool) {
	o.IsSerialNumber = &v
}

// GetIsShippableByAmazon returns the IsShippableByAmazon field value if set, zero value otherwise.
func (o *VariationItem) GetIsShippableByAmazon() bool {
	if o == nil || o.IsShippableByAmazon == nil {
		var ret bool
		return ret
	}
	return *o.IsShippableByAmazon
}

// GetIsShippableByAmazonOk returns a tuple with the IsShippableByAmazon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetIsShippableByAmazonOk() (*bool, bool) {
	if o == nil || o.IsShippableByAmazon == nil {
		return nil, false
	}
	return o.IsShippableByAmazon, true
}

// HasIsShippableByAmazon returns a boolean if a field has been set.
func (o *VariationItem) HasIsShippableByAmazon() bool {
	if o != nil && o.IsShippableByAmazon != nil {
		return true
	}

	return false
}

// SetIsShippableByAmazon gets a reference to the given bool and assigns it to the IsShippableByAmazon field.
func (o *VariationItem) SetIsShippableByAmazon(v bool) {
	o.IsShippableByAmazon = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *VariationItem) GetOwnerId() int32 {
	if o == nil || o.OwnerId == nil {
		var ret int32
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetOwnerIdOk() (*int32, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *VariationItem) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int32 and assigns it to the OwnerId field.
func (o *VariationItem) SetOwnerId(v int32) {
	o.OwnerId = &v
}

// GetItemType returns the ItemType field value if set, zero value otherwise.
func (o *VariationItem) GetItemType() string {
	if o == nil || o.ItemType == nil {
		var ret string
		return ret
	}
	return *o.ItemType
}

// GetItemTypeOk returns a tuple with the ItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetItemTypeOk() (*string, bool) {
	if o == nil || o.ItemType == nil {
		return nil, false
	}
	return o.ItemType, true
}

// HasItemType returns a boolean if a field has been set.
func (o *VariationItem) HasItemType() bool {
	if o != nil && o.ItemType != nil {
		return true
	}

	return false
}

// SetItemType gets a reference to the given string and assigns it to the ItemType field.
func (o *VariationItem) SetItemType(v string) {
	o.ItemType = &v
}

// GetMainVariationId returns the MainVariationId field value if set, zero value otherwise.
func (o *VariationItem) GetMainVariationId() int32 {
	if o == nil || o.MainVariationId == nil {
		var ret int32
		return ret
	}
	return *o.MainVariationId
}

// GetMainVariationIdOk returns a tuple with the MainVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationItem) GetMainVariationIdOk() (*int32, bool) {
	if o == nil || o.MainVariationId == nil {
		return nil, false
	}
	return o.MainVariationId, true
}

// HasMainVariationId returns a boolean if a field has been set.
func (o *VariationItem) HasMainVariationId() bool {
	if o != nil && o.MainVariationId != nil {
		return true
	}

	return false
}

// SetMainVariationId gets a reference to the given int32 and assigns it to the MainVariationId field.
func (o *VariationItem) SetMainVariationId(v int32) {
	o.MainVariationId = &v
}

func (o VariationItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.ManufacturerId != nil {
		toSerialize["manufacturerId"] = o.ManufacturerId
	}
	if o.StockType != nil {
		toSerialize["stockType"] = o.StockType
	}
	if o.AddCmsPage != nil {
		toSerialize["add_cms_page"] = o.AddCmsPage
	}
	if o.StoreSpecial != nil {
		toSerialize["storeSpecial"] = o.StoreSpecial
	}
	if o.Condition != nil {
		toSerialize["condition"] = o.Condition
	}
	if o.AmazonFedas != nil {
		toSerialize["amazonFedas"] = o.AmazonFedas
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.Free1 != nil {
		toSerialize["free1"] = o.Free1
	}
	if o.Free2 != nil {
		toSerialize["free2"] = o.Free2
	}
	if o.Free3 != nil {
		toSerialize["free3"] = o.Free3
	}
	if o.Free4 != nil {
		toSerialize["free4"] = o.Free4
	}
	if o.Free5 != nil {
		toSerialize["free5"] = o.Free5
	}
	if o.Free6 != nil {
		toSerialize["free6"] = o.Free6
	}
	if o.Free7 != nil {
		toSerialize["free7"] = o.Free7
	}
	if o.Free8 != nil {
		toSerialize["free8"] = o.Free8
	}
	if o.Free9 != nil {
		toSerialize["free9"] = o.Free9
	}
	if o.Free10 != nil {
		toSerialize["free10"] = o.Free10
	}
	if o.Free11 != nil {
		toSerialize["free11"] = o.Free11
	}
	if o.Free12 != nil {
		toSerialize["free12"] = o.Free12
	}
	if o.Free13 != nil {
		toSerialize["free13"] = o.Free13
	}
	if o.Free14 != nil {
		toSerialize["free14"] = o.Free14
	}
	if o.Free15 != nil {
		toSerialize["free15"] = o.Free15
	}
	if o.Free16 != nil {
		toSerialize["free16"] = o.Free16
	}
	if o.Free17 != nil {
		toSerialize["free17"] = o.Free17
	}
	if o.Free18 != nil {
		toSerialize["free18"] = o.Free18
	}
	if o.Free19 != nil {
		toSerialize["free19"] = o.Free19
	}
	if o.Free20 != nil {
		toSerialize["free20"] = o.Free20
	}
	if o.CustomsTariffNumber != nil {
		toSerialize["customsTariffNumber"] = o.CustomsTariffNumber
	}
	if o.ProducingCountryId != nil {
		toSerialize["producingCountryId"] = o.ProducingCountryId
	}
	if o.RevenueAccount != nil {
		toSerialize["revenueAccount"] = o.RevenueAccount
	}
	if o.CouponRestriction != nil {
		toSerialize["couponRestriction"] = o.CouponRestriction
	}
	if o.FlagOne != nil {
		toSerialize["flagOne"] = o.FlagOne
	}
	if o.FlagTwo != nil {
		toSerialize["flagTwo"] = o.FlagTwo
	}
	if o.AgeRestriction != nil {
		toSerialize["ageRestriction"] = o.AgeRestriction
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.AmazonProductType != nil {
		toSerialize["amazonProductType"] = o.AmazonProductType
	}
	if o.EbayPresetId != nil {
		toSerialize["ebayPresetId"] = o.EbayPresetId
	}
	if o.EbayCategory != nil {
		toSerialize["ebayCategory"] = o.EbayCategory
	}
	if o.EbayCategory2 != nil {
		toSerialize["ebayCategory2"] = o.EbayCategory2
	}
	if o.EbayStoreCategory != nil {
		toSerialize["ebayStoreCategory"] = o.EbayStoreCategory
	}
	if o.EbayStoreCategory2 != nil {
		toSerialize["ebayStoreCategory2"] = o.EbayStoreCategory2
	}
	if o.AmazonFbaPlatform != nil {
		toSerialize["amazonFbaPlatform"] = o.AmazonFbaPlatform
	}
	if o.Feedback != nil {
		toSerialize["feedback"] = o.Feedback
	}
	if o.Gimahhot != nil {
		toSerialize["gimahhot"] = o.Gimahhot
	}
	if o.MaximumOrderQuantity != nil {
		toSerialize["maximumOrderQuantity"] = o.MaximumOrderQuantity
	}
	if o.IsSubscribable != nil {
		toSerialize["isSubscribable"] = o.IsSubscribable
	}
	if o.RakutenCategoryId != nil {
		toSerialize["rakutenCategoryId"] = o.RakutenCategoryId
	}
	if o.IsShippingPackage != nil {
		toSerialize["isShippingPackage"] = o.IsShippingPackage
	}
	if o.ConditionApi != nil {
		toSerialize["conditionApi"] = o.ConditionApi
	}
	if o.IsSerialNumber != nil {
		toSerialize["isSerialNumber"] = o.IsSerialNumber
	}
	if o.IsShippableByAmazon != nil {
		toSerialize["isShippableByAmazon"] = o.IsShippableByAmazon
	}
	if o.OwnerId != nil {
		toSerialize["ownerId"] = o.OwnerId
	}
	if o.ItemType != nil {
		toSerialize["itemType"] = o.ItemType
	}
	if o.MainVariationId != nil {
		toSerialize["mainVariationId"] = o.MainVariationId
	}
	return json.Marshal(toSerialize)
}

type NullableVariationItem struct {
	value *VariationItem
	isSet bool
}

func (v NullableVariationItem) Get() *VariationItem {
	return v.value
}

func (v *NullableVariationItem) Set(val *VariationItem) {
	v.value = val
	v.isSet = true
}

func (v NullableVariationItem) IsSet() bool {
	return v.isSet
}

func (v *NullableVariationItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariationItem(val *VariationItem) *NullableVariationItem {
	return &NullableVariationItem{value: val, isSet: true}
}

func (v NullableVariationItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariationItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


