/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// VariationPropertyProperty Property model within the variationProperty model
type VariationPropertyProperty struct {
	Id *int32 `json:"id,omitempty"`
	Position *int32 `json:"position,omitempty"`
	Unit *int32 `json:"unit,omitempty"`
	PropertyGroupId *int32 `json:"propertyGroupId,omitempty"`
	BackendName *string `json:"backendName,omitempty"`
	ValueType *string `json:"valueType,omitempty"`
	IsSearchable *bool `json:"isSearchable,omitempty"`
	IsOderProperty *bool `json:"isOderProperty,omitempty"`
	IsShownOnItemPage *bool `json:"isShownOnItemPage,omitempty"`
	IsShownOnItemList *bool `json:"isShownOnItemList,omitempty"`
	IsShownAtCheckout *bool `json:"isShownAtCheckout,omitempty"`
	IsShownInPdf *bool `json:"isShownInPdf,omitempty"`
	Comment *string `json:"comment,omitempty"`
	Surcharge *float32 `json:"surcharge,omitempty"`
	IsShownAsAdditionalCosts *bool `json:"isShownAsAdditionalCosts,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewVariationPropertyProperty instantiates a new VariationPropertyProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariationPropertyProperty() *VariationPropertyProperty {
	this := VariationPropertyProperty{}
	return &this
}

// NewVariationPropertyPropertyWithDefaults instantiates a new VariationPropertyProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariationPropertyPropertyWithDefaults() *VariationPropertyProperty {
	this := VariationPropertyProperty{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *VariationPropertyProperty) SetId(v int32) {
	o.Id = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetPosition() int32 {
	if o == nil || o.Position == nil {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetPositionOk() (*int32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *VariationPropertyProperty) SetPosition(v int32) {
	o.Position = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetUnit() int32 {
	if o == nil || o.Unit == nil {
		var ret int32
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetUnitOk() (*int32, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given int32 and assigns it to the Unit field.
func (o *VariationPropertyProperty) SetUnit(v int32) {
	o.Unit = &v
}

// GetPropertyGroupId returns the PropertyGroupId field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetPropertyGroupId() int32 {
	if o == nil || o.PropertyGroupId == nil {
		var ret int32
		return ret
	}
	return *o.PropertyGroupId
}

// GetPropertyGroupIdOk returns a tuple with the PropertyGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetPropertyGroupIdOk() (*int32, bool) {
	if o == nil || o.PropertyGroupId == nil {
		return nil, false
	}
	return o.PropertyGroupId, true
}

// HasPropertyGroupId returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasPropertyGroupId() bool {
	if o != nil && o.PropertyGroupId != nil {
		return true
	}

	return false
}

// SetPropertyGroupId gets a reference to the given int32 and assigns it to the PropertyGroupId field.
func (o *VariationPropertyProperty) SetPropertyGroupId(v int32) {
	o.PropertyGroupId = &v
}

// GetBackendName returns the BackendName field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetBackendName() string {
	if o == nil || o.BackendName == nil {
		var ret string
		return ret
	}
	return *o.BackendName
}

// GetBackendNameOk returns a tuple with the BackendName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetBackendNameOk() (*string, bool) {
	if o == nil || o.BackendName == nil {
		return nil, false
	}
	return o.BackendName, true
}

// HasBackendName returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasBackendName() bool {
	if o != nil && o.BackendName != nil {
		return true
	}

	return false
}

// SetBackendName gets a reference to the given string and assigns it to the BackendName field.
func (o *VariationPropertyProperty) SetBackendName(v string) {
	o.BackendName = &v
}

// GetValueType returns the ValueType field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetValueType() string {
	if o == nil || o.ValueType == nil {
		var ret string
		return ret
	}
	return *o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetValueTypeOk() (*string, bool) {
	if o == nil || o.ValueType == nil {
		return nil, false
	}
	return o.ValueType, true
}

// HasValueType returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasValueType() bool {
	if o != nil && o.ValueType != nil {
		return true
	}

	return false
}

// SetValueType gets a reference to the given string and assigns it to the ValueType field.
func (o *VariationPropertyProperty) SetValueType(v string) {
	o.ValueType = &v
}

// GetIsSearchable returns the IsSearchable field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetIsSearchable() bool {
	if o == nil || o.IsSearchable == nil {
		var ret bool
		return ret
	}
	return *o.IsSearchable
}

// GetIsSearchableOk returns a tuple with the IsSearchable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetIsSearchableOk() (*bool, bool) {
	if o == nil || o.IsSearchable == nil {
		return nil, false
	}
	return o.IsSearchable, true
}

// HasIsSearchable returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasIsSearchable() bool {
	if o != nil && o.IsSearchable != nil {
		return true
	}

	return false
}

// SetIsSearchable gets a reference to the given bool and assigns it to the IsSearchable field.
func (o *VariationPropertyProperty) SetIsSearchable(v bool) {
	o.IsSearchable = &v
}

// GetIsOderProperty returns the IsOderProperty field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetIsOderProperty() bool {
	if o == nil || o.IsOderProperty == nil {
		var ret bool
		return ret
	}
	return *o.IsOderProperty
}

// GetIsOderPropertyOk returns a tuple with the IsOderProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetIsOderPropertyOk() (*bool, bool) {
	if o == nil || o.IsOderProperty == nil {
		return nil, false
	}
	return o.IsOderProperty, true
}

// HasIsOderProperty returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasIsOderProperty() bool {
	if o != nil && o.IsOderProperty != nil {
		return true
	}

	return false
}

// SetIsOderProperty gets a reference to the given bool and assigns it to the IsOderProperty field.
func (o *VariationPropertyProperty) SetIsOderProperty(v bool) {
	o.IsOderProperty = &v
}

// GetIsShownOnItemPage returns the IsShownOnItemPage field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetIsShownOnItemPage() bool {
	if o == nil || o.IsShownOnItemPage == nil {
		var ret bool
		return ret
	}
	return *o.IsShownOnItemPage
}

// GetIsShownOnItemPageOk returns a tuple with the IsShownOnItemPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetIsShownOnItemPageOk() (*bool, bool) {
	if o == nil || o.IsShownOnItemPage == nil {
		return nil, false
	}
	return o.IsShownOnItemPage, true
}

// HasIsShownOnItemPage returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasIsShownOnItemPage() bool {
	if o != nil && o.IsShownOnItemPage != nil {
		return true
	}

	return false
}

// SetIsShownOnItemPage gets a reference to the given bool and assigns it to the IsShownOnItemPage field.
func (o *VariationPropertyProperty) SetIsShownOnItemPage(v bool) {
	o.IsShownOnItemPage = &v
}

// GetIsShownOnItemList returns the IsShownOnItemList field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetIsShownOnItemList() bool {
	if o == nil || o.IsShownOnItemList == nil {
		var ret bool
		return ret
	}
	return *o.IsShownOnItemList
}

// GetIsShownOnItemListOk returns a tuple with the IsShownOnItemList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetIsShownOnItemListOk() (*bool, bool) {
	if o == nil || o.IsShownOnItemList == nil {
		return nil, false
	}
	return o.IsShownOnItemList, true
}

// HasIsShownOnItemList returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasIsShownOnItemList() bool {
	if o != nil && o.IsShownOnItemList != nil {
		return true
	}

	return false
}

// SetIsShownOnItemList gets a reference to the given bool and assigns it to the IsShownOnItemList field.
func (o *VariationPropertyProperty) SetIsShownOnItemList(v bool) {
	o.IsShownOnItemList = &v
}

// GetIsShownAtCheckout returns the IsShownAtCheckout field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetIsShownAtCheckout() bool {
	if o == nil || o.IsShownAtCheckout == nil {
		var ret bool
		return ret
	}
	return *o.IsShownAtCheckout
}

// GetIsShownAtCheckoutOk returns a tuple with the IsShownAtCheckout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetIsShownAtCheckoutOk() (*bool, bool) {
	if o == nil || o.IsShownAtCheckout == nil {
		return nil, false
	}
	return o.IsShownAtCheckout, true
}

// HasIsShownAtCheckout returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasIsShownAtCheckout() bool {
	if o != nil && o.IsShownAtCheckout != nil {
		return true
	}

	return false
}

// SetIsShownAtCheckout gets a reference to the given bool and assigns it to the IsShownAtCheckout field.
func (o *VariationPropertyProperty) SetIsShownAtCheckout(v bool) {
	o.IsShownAtCheckout = &v
}

// GetIsShownInPdf returns the IsShownInPdf field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetIsShownInPdf() bool {
	if o == nil || o.IsShownInPdf == nil {
		var ret bool
		return ret
	}
	return *o.IsShownInPdf
}

// GetIsShownInPdfOk returns a tuple with the IsShownInPdf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetIsShownInPdfOk() (*bool, bool) {
	if o == nil || o.IsShownInPdf == nil {
		return nil, false
	}
	return o.IsShownInPdf, true
}

// HasIsShownInPdf returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasIsShownInPdf() bool {
	if o != nil && o.IsShownInPdf != nil {
		return true
	}

	return false
}

// SetIsShownInPdf gets a reference to the given bool and assigns it to the IsShownInPdf field.
func (o *VariationPropertyProperty) SetIsShownInPdf(v bool) {
	o.IsShownInPdf = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *VariationPropertyProperty) SetComment(v string) {
	o.Comment = &v
}

// GetSurcharge returns the Surcharge field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetSurcharge() float32 {
	if o == nil || o.Surcharge == nil {
		var ret float32
		return ret
	}
	return *o.Surcharge
}

// GetSurchargeOk returns a tuple with the Surcharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetSurchargeOk() (*float32, bool) {
	if o == nil || o.Surcharge == nil {
		return nil, false
	}
	return o.Surcharge, true
}

// HasSurcharge returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasSurcharge() bool {
	if o != nil && o.Surcharge != nil {
		return true
	}

	return false
}

// SetSurcharge gets a reference to the given float32 and assigns it to the Surcharge field.
func (o *VariationPropertyProperty) SetSurcharge(v float32) {
	o.Surcharge = &v
}

// GetIsShownAsAdditionalCosts returns the IsShownAsAdditionalCosts field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetIsShownAsAdditionalCosts() bool {
	if o == nil || o.IsShownAsAdditionalCosts == nil {
		var ret bool
		return ret
	}
	return *o.IsShownAsAdditionalCosts
}

// GetIsShownAsAdditionalCostsOk returns a tuple with the IsShownAsAdditionalCosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetIsShownAsAdditionalCostsOk() (*bool, bool) {
	if o == nil || o.IsShownAsAdditionalCosts == nil {
		return nil, false
	}
	return o.IsShownAsAdditionalCosts, true
}

// HasIsShownAsAdditionalCosts returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasIsShownAsAdditionalCosts() bool {
	if o != nil && o.IsShownAsAdditionalCosts != nil {
		return true
	}

	return false
}

// SetIsShownAsAdditionalCosts gets a reference to the given bool and assigns it to the IsShownAsAdditionalCosts field.
func (o *VariationPropertyProperty) SetIsShownAsAdditionalCosts(v bool) {
	o.IsShownAsAdditionalCosts = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *VariationPropertyProperty) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationPropertyProperty) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VariationPropertyProperty) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *VariationPropertyProperty) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o VariationPropertyProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	if o.PropertyGroupId != nil {
		toSerialize["propertyGroupId"] = o.PropertyGroupId
	}
	if o.BackendName != nil {
		toSerialize["backendName"] = o.BackendName
	}
	if o.ValueType != nil {
		toSerialize["valueType"] = o.ValueType
	}
	if o.IsSearchable != nil {
		toSerialize["isSearchable"] = o.IsSearchable
	}
	if o.IsOderProperty != nil {
		toSerialize["isOderProperty"] = o.IsOderProperty
	}
	if o.IsShownOnItemPage != nil {
		toSerialize["isShownOnItemPage"] = o.IsShownOnItemPage
	}
	if o.IsShownOnItemList != nil {
		toSerialize["isShownOnItemList"] = o.IsShownOnItemList
	}
	if o.IsShownAtCheckout != nil {
		toSerialize["isShownAtCheckout"] = o.IsShownAtCheckout
	}
	if o.IsShownInPdf != nil {
		toSerialize["isShownInPdf"] = o.IsShownInPdf
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.Surcharge != nil {
		toSerialize["surcharge"] = o.Surcharge
	}
	if o.IsShownAsAdditionalCosts != nil {
		toSerialize["isShownAsAdditionalCosts"] = o.IsShownAsAdditionalCosts
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableVariationPropertyProperty struct {
	value *VariationPropertyProperty
	isSet bool
}

func (v NullableVariationPropertyProperty) Get() *VariationPropertyProperty {
	return v.value
}

func (v *NullableVariationPropertyProperty) Set(val *VariationPropertyProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableVariationPropertyProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableVariationPropertyProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariationPropertyProperty(val *VariationPropertyProperty) *NullableVariationPropertyProperty {
	return &NullableVariationPropertyProperty{value: val, isSet: true}
}

func (v NullableVariationPropertyProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariationPropertyProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


