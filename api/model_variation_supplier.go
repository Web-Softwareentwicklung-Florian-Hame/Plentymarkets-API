/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// VariationSupplier variation supplier model
type VariationSupplier struct {
	Id *int32 `json:"id,omitempty"`
	VariationId *int32 `json:"variationId,omitempty"`
	SupplierId *int32 `json:"supplierId,omitempty"`
	PurchasePrice *float32 `json:"purchasePrice,omitempty"`
	MinimumPurchase *float32 `json:"minimumPurchase,omitempty"`
	ItemNumber *string `json:"itemNumber,omitempty"`
	LastPriceQuery *bool `json:"lastPriceQuery,omitempty"`
	DeliveryTimeInDays *int32 `json:"deliveryTimeInDays,omitempty"`
	Discount *float32 `json:"discount,omitempty"`
	IsDiscountable *bool `json:"isDiscountable,omitempty"`
	PackagingUnit *float32 `json:"packagingUnit,omitempty"`
	LastUpdateTimestamp *string `json:"lastUpdateTimestamp,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	CurrencyPurchasePrice *float32 `json:"currencyPurchasePrice,omitempty"`
	ItemDescription *string `json:"itemDescription,omitempty"`
}

// NewVariationSupplier instantiates a new VariationSupplier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariationSupplier() *VariationSupplier {
	this := VariationSupplier{}
	return &this
}

// NewVariationSupplierWithDefaults instantiates a new VariationSupplier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariationSupplierWithDefaults() *VariationSupplier {
	this := VariationSupplier{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VariationSupplier) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VariationSupplier) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *VariationSupplier) SetId(v int32) {
	o.Id = &v
}

// GetVariationId returns the VariationId field value if set, zero value otherwise.
func (o *VariationSupplier) GetVariationId() int32 {
	if o == nil || o.VariationId == nil {
		var ret int32
		return ret
	}
	return *o.VariationId
}

// GetVariationIdOk returns a tuple with the VariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetVariationIdOk() (*int32, bool) {
	if o == nil || o.VariationId == nil {
		return nil, false
	}
	return o.VariationId, true
}

// HasVariationId returns a boolean if a field has been set.
func (o *VariationSupplier) HasVariationId() bool {
	if o != nil && o.VariationId != nil {
		return true
	}

	return false
}

// SetVariationId gets a reference to the given int32 and assigns it to the VariationId field.
func (o *VariationSupplier) SetVariationId(v int32) {
	o.VariationId = &v
}

// GetSupplierId returns the SupplierId field value if set, zero value otherwise.
func (o *VariationSupplier) GetSupplierId() int32 {
	if o == nil || o.SupplierId == nil {
		var ret int32
		return ret
	}
	return *o.SupplierId
}

// GetSupplierIdOk returns a tuple with the SupplierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetSupplierIdOk() (*int32, bool) {
	if o == nil || o.SupplierId == nil {
		return nil, false
	}
	return o.SupplierId, true
}

// HasSupplierId returns a boolean if a field has been set.
func (o *VariationSupplier) HasSupplierId() bool {
	if o != nil && o.SupplierId != nil {
		return true
	}

	return false
}

// SetSupplierId gets a reference to the given int32 and assigns it to the SupplierId field.
func (o *VariationSupplier) SetSupplierId(v int32) {
	o.SupplierId = &v
}

// GetPurchasePrice returns the PurchasePrice field value if set, zero value otherwise.
func (o *VariationSupplier) GetPurchasePrice() float32 {
	if o == nil || o.PurchasePrice == nil {
		var ret float32
		return ret
	}
	return *o.PurchasePrice
}

// GetPurchasePriceOk returns a tuple with the PurchasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetPurchasePriceOk() (*float32, bool) {
	if o == nil || o.PurchasePrice == nil {
		return nil, false
	}
	return o.PurchasePrice, true
}

// HasPurchasePrice returns a boolean if a field has been set.
func (o *VariationSupplier) HasPurchasePrice() bool {
	if o != nil && o.PurchasePrice != nil {
		return true
	}

	return false
}

// SetPurchasePrice gets a reference to the given float32 and assigns it to the PurchasePrice field.
func (o *VariationSupplier) SetPurchasePrice(v float32) {
	o.PurchasePrice = &v
}

// GetMinimumPurchase returns the MinimumPurchase field value if set, zero value otherwise.
func (o *VariationSupplier) GetMinimumPurchase() float32 {
	if o == nil || o.MinimumPurchase == nil {
		var ret float32
		return ret
	}
	return *o.MinimumPurchase
}

// GetMinimumPurchaseOk returns a tuple with the MinimumPurchase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetMinimumPurchaseOk() (*float32, bool) {
	if o == nil || o.MinimumPurchase == nil {
		return nil, false
	}
	return o.MinimumPurchase, true
}

// HasMinimumPurchase returns a boolean if a field has been set.
func (o *VariationSupplier) HasMinimumPurchase() bool {
	if o != nil && o.MinimumPurchase != nil {
		return true
	}

	return false
}

// SetMinimumPurchase gets a reference to the given float32 and assigns it to the MinimumPurchase field.
func (o *VariationSupplier) SetMinimumPurchase(v float32) {
	o.MinimumPurchase = &v
}

// GetItemNumber returns the ItemNumber field value if set, zero value otherwise.
func (o *VariationSupplier) GetItemNumber() string {
	if o == nil || o.ItemNumber == nil {
		var ret string
		return ret
	}
	return *o.ItemNumber
}

// GetItemNumberOk returns a tuple with the ItemNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetItemNumberOk() (*string, bool) {
	if o == nil || o.ItemNumber == nil {
		return nil, false
	}
	return o.ItemNumber, true
}

// HasItemNumber returns a boolean if a field has been set.
func (o *VariationSupplier) HasItemNumber() bool {
	if o != nil && o.ItemNumber != nil {
		return true
	}

	return false
}

// SetItemNumber gets a reference to the given string and assigns it to the ItemNumber field.
func (o *VariationSupplier) SetItemNumber(v string) {
	o.ItemNumber = &v
}

// GetLastPriceQuery returns the LastPriceQuery field value if set, zero value otherwise.
func (o *VariationSupplier) GetLastPriceQuery() bool {
	if o == nil || o.LastPriceQuery == nil {
		var ret bool
		return ret
	}
	return *o.LastPriceQuery
}

// GetLastPriceQueryOk returns a tuple with the LastPriceQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetLastPriceQueryOk() (*bool, bool) {
	if o == nil || o.LastPriceQuery == nil {
		return nil, false
	}
	return o.LastPriceQuery, true
}

// HasLastPriceQuery returns a boolean if a field has been set.
func (o *VariationSupplier) HasLastPriceQuery() bool {
	if o != nil && o.LastPriceQuery != nil {
		return true
	}

	return false
}

// SetLastPriceQuery gets a reference to the given bool and assigns it to the LastPriceQuery field.
func (o *VariationSupplier) SetLastPriceQuery(v bool) {
	o.LastPriceQuery = &v
}

// GetDeliveryTimeInDays returns the DeliveryTimeInDays field value if set, zero value otherwise.
func (o *VariationSupplier) GetDeliveryTimeInDays() int32 {
	if o == nil || o.DeliveryTimeInDays == nil {
		var ret int32
		return ret
	}
	return *o.DeliveryTimeInDays
}

// GetDeliveryTimeInDaysOk returns a tuple with the DeliveryTimeInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetDeliveryTimeInDaysOk() (*int32, bool) {
	if o == nil || o.DeliveryTimeInDays == nil {
		return nil, false
	}
	return o.DeliveryTimeInDays, true
}

// HasDeliveryTimeInDays returns a boolean if a field has been set.
func (o *VariationSupplier) HasDeliveryTimeInDays() bool {
	if o != nil && o.DeliveryTimeInDays != nil {
		return true
	}

	return false
}

// SetDeliveryTimeInDays gets a reference to the given int32 and assigns it to the DeliveryTimeInDays field.
func (o *VariationSupplier) SetDeliveryTimeInDays(v int32) {
	o.DeliveryTimeInDays = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *VariationSupplier) GetDiscount() float32 {
	if o == nil || o.Discount == nil {
		var ret float32
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetDiscountOk() (*float32, bool) {
	if o == nil || o.Discount == nil {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *VariationSupplier) HasDiscount() bool {
	if o != nil && o.Discount != nil {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given float32 and assigns it to the Discount field.
func (o *VariationSupplier) SetDiscount(v float32) {
	o.Discount = &v
}

// GetIsDiscountable returns the IsDiscountable field value if set, zero value otherwise.
func (o *VariationSupplier) GetIsDiscountable() bool {
	if o == nil || o.IsDiscountable == nil {
		var ret bool
		return ret
	}
	return *o.IsDiscountable
}

// GetIsDiscountableOk returns a tuple with the IsDiscountable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetIsDiscountableOk() (*bool, bool) {
	if o == nil || o.IsDiscountable == nil {
		return nil, false
	}
	return o.IsDiscountable, true
}

// HasIsDiscountable returns a boolean if a field has been set.
func (o *VariationSupplier) HasIsDiscountable() bool {
	if o != nil && o.IsDiscountable != nil {
		return true
	}

	return false
}

// SetIsDiscountable gets a reference to the given bool and assigns it to the IsDiscountable field.
func (o *VariationSupplier) SetIsDiscountable(v bool) {
	o.IsDiscountable = &v
}

// GetPackagingUnit returns the PackagingUnit field value if set, zero value otherwise.
func (o *VariationSupplier) GetPackagingUnit() float32 {
	if o == nil || o.PackagingUnit == nil {
		var ret float32
		return ret
	}
	return *o.PackagingUnit
}

// GetPackagingUnitOk returns a tuple with the PackagingUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetPackagingUnitOk() (*float32, bool) {
	if o == nil || o.PackagingUnit == nil {
		return nil, false
	}
	return o.PackagingUnit, true
}

// HasPackagingUnit returns a boolean if a field has been set.
func (o *VariationSupplier) HasPackagingUnit() bool {
	if o != nil && o.PackagingUnit != nil {
		return true
	}

	return false
}

// SetPackagingUnit gets a reference to the given float32 and assigns it to the PackagingUnit field.
func (o *VariationSupplier) SetPackagingUnit(v float32) {
	o.PackagingUnit = &v
}

// GetLastUpdateTimestamp returns the LastUpdateTimestamp field value if set, zero value otherwise.
func (o *VariationSupplier) GetLastUpdateTimestamp() string {
	if o == nil || o.LastUpdateTimestamp == nil {
		var ret string
		return ret
	}
	return *o.LastUpdateTimestamp
}

// GetLastUpdateTimestampOk returns a tuple with the LastUpdateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetLastUpdateTimestampOk() (*string, bool) {
	if o == nil || o.LastUpdateTimestamp == nil {
		return nil, false
	}
	return o.LastUpdateTimestamp, true
}

// HasLastUpdateTimestamp returns a boolean if a field has been set.
func (o *VariationSupplier) HasLastUpdateTimestamp() bool {
	if o != nil && o.LastUpdateTimestamp != nil {
		return true
	}

	return false
}

// SetLastUpdateTimestamp gets a reference to the given string and assigns it to the LastUpdateTimestamp field.
func (o *VariationSupplier) SetLastUpdateTimestamp(v string) {
	o.LastUpdateTimestamp = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VariationSupplier) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VariationSupplier) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *VariationSupplier) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCurrencyPurchasePrice returns the CurrencyPurchasePrice field value if set, zero value otherwise.
func (o *VariationSupplier) GetCurrencyPurchasePrice() float32 {
	if o == nil || o.CurrencyPurchasePrice == nil {
		var ret float32
		return ret
	}
	return *o.CurrencyPurchasePrice
}

// GetCurrencyPurchasePriceOk returns a tuple with the CurrencyPurchasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetCurrencyPurchasePriceOk() (*float32, bool) {
	if o == nil || o.CurrencyPurchasePrice == nil {
		return nil, false
	}
	return o.CurrencyPurchasePrice, true
}

// HasCurrencyPurchasePrice returns a boolean if a field has been set.
func (o *VariationSupplier) HasCurrencyPurchasePrice() bool {
	if o != nil && o.CurrencyPurchasePrice != nil {
		return true
	}

	return false
}

// SetCurrencyPurchasePrice gets a reference to the given float32 and assigns it to the CurrencyPurchasePrice field.
func (o *VariationSupplier) SetCurrencyPurchasePrice(v float32) {
	o.CurrencyPurchasePrice = &v
}

// GetItemDescription returns the ItemDescription field value if set, zero value otherwise.
func (o *VariationSupplier) GetItemDescription() string {
	if o == nil || o.ItemDescription == nil {
		var ret string
		return ret
	}
	return *o.ItemDescription
}

// GetItemDescriptionOk returns a tuple with the ItemDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSupplier) GetItemDescriptionOk() (*string, bool) {
	if o == nil || o.ItemDescription == nil {
		return nil, false
	}
	return o.ItemDescription, true
}

// HasItemDescription returns a boolean if a field has been set.
func (o *VariationSupplier) HasItemDescription() bool {
	if o != nil && o.ItemDescription != nil {
		return true
	}

	return false
}

// SetItemDescription gets a reference to the given string and assigns it to the ItemDescription field.
func (o *VariationSupplier) SetItemDescription(v string) {
	o.ItemDescription = &v
}

func (o VariationSupplier) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.VariationId != nil {
		toSerialize["variationId"] = o.VariationId
	}
	if o.SupplierId != nil {
		toSerialize["supplierId"] = o.SupplierId
	}
	if o.PurchasePrice != nil {
		toSerialize["purchasePrice"] = o.PurchasePrice
	}
	if o.MinimumPurchase != nil {
		toSerialize["minimumPurchase"] = o.MinimumPurchase
	}
	if o.ItemNumber != nil {
		toSerialize["itemNumber"] = o.ItemNumber
	}
	if o.LastPriceQuery != nil {
		toSerialize["lastPriceQuery"] = o.LastPriceQuery
	}
	if o.DeliveryTimeInDays != nil {
		toSerialize["deliveryTimeInDays"] = o.DeliveryTimeInDays
	}
	if o.Discount != nil {
		toSerialize["discount"] = o.Discount
	}
	if o.IsDiscountable != nil {
		toSerialize["isDiscountable"] = o.IsDiscountable
	}
	if o.PackagingUnit != nil {
		toSerialize["packagingUnit"] = o.PackagingUnit
	}
	if o.LastUpdateTimestamp != nil {
		toSerialize["lastUpdateTimestamp"] = o.LastUpdateTimestamp
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CurrencyPurchasePrice != nil {
		toSerialize["currencyPurchasePrice"] = o.CurrencyPurchasePrice
	}
	if o.ItemDescription != nil {
		toSerialize["itemDescription"] = o.ItemDescription
	}
	return json.Marshal(toSerialize)
}

type NullableVariationSupplier struct {
	value *VariationSupplier
	isSet bool
}

func (v NullableVariationSupplier) Get() *VariationSupplier {
	return v.value
}

func (v *NullableVariationSupplier) Set(val *VariationSupplier) {
	v.value = val
	v.isSet = true
}

func (v NullableVariationSupplier) IsSet() bool {
	return v.isSet
}

func (v *NullableVariationSupplier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariationSupplier(val *VariationSupplier) *NullableVariationSupplier {
	return &NullableVariationSupplier{value: val, isSet: true}
}

func (v NullableVariationSupplier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariationSupplier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


