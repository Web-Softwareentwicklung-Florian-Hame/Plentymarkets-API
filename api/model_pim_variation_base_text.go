/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PimVariationBaseText struct for PimVariationBaseText
type PimVariationBaseText struct {
	Name3 *string `json:"name3,omitempty"`
	Name2 *string `json:"name2,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewPimVariationBaseText instantiates a new PimVariationBaseText object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPimVariationBaseText() *PimVariationBaseText {
	this := PimVariationBaseText{}
	return &this
}

// NewPimVariationBaseTextWithDefaults instantiates a new PimVariationBaseText object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPimVariationBaseTextWithDefaults() *PimVariationBaseText {
	this := PimVariationBaseText{}
	return &this
}

// GetName3 returns the Name3 field value if set, zero value otherwise.
func (o *PimVariationBaseText) GetName3() string {
	if o == nil || o.Name3 == nil {
		var ret string
		return ret
	}
	return *o.Name3
}

// GetName3Ok returns a tuple with the Name3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationBaseText) GetName3Ok() (*string, bool) {
	if o == nil || o.Name3 == nil {
		return nil, false
	}
	return o.Name3, true
}

// HasName3 returns a boolean if a field has been set.
func (o *PimVariationBaseText) HasName3() bool {
	if o != nil && o.Name3 != nil {
		return true
	}

	return false
}

// SetName3 gets a reference to the given string and assigns it to the Name3 field.
func (o *PimVariationBaseText) SetName3(v string) {
	o.Name3 = &v
}

// GetName2 returns the Name2 field value if set, zero value otherwise.
func (o *PimVariationBaseText) GetName2() string {
	if o == nil || o.Name2 == nil {
		var ret string
		return ret
	}
	return *o.Name2
}

// GetName2Ok returns a tuple with the Name2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationBaseText) GetName2Ok() (*string, bool) {
	if o == nil || o.Name2 == nil {
		return nil, false
	}
	return o.Name2, true
}

// HasName2 returns a boolean if a field has been set.
func (o *PimVariationBaseText) HasName2() bool {
	if o != nil && o.Name2 != nil {
		return true
	}

	return false
}

// SetName2 gets a reference to the given string and assigns it to the Name2 field.
func (o *PimVariationBaseText) SetName2(v string) {
	o.Name2 = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PimVariationBaseText) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationBaseText) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PimVariationBaseText) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PimVariationBaseText) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PimVariationBaseText) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationBaseText) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PimVariationBaseText) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PimVariationBaseText) SetDescription(v string) {
	o.Description = &v
}

func (o PimVariationBaseText) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name3 != nil {
		toSerialize["name3"] = o.Name3
	}
	if o.Name2 != nil {
		toSerialize["name2"] = o.Name2
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullablePimVariationBaseText struct {
	value *PimVariationBaseText
	isSet bool
}

func (v NullablePimVariationBaseText) Get() *PimVariationBaseText {
	return v.value
}

func (v *NullablePimVariationBaseText) Set(val *PimVariationBaseText) {
	v.value = val
	v.isSet = true
}

func (v NullablePimVariationBaseText) IsSet() bool {
	return v.isSet
}

func (v *NullablePimVariationBaseText) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePimVariationBaseText(val *PimVariationBaseText) *NullablePimVariationBaseText {
	return &NullablePimVariationBaseText{value: val, isSet: true}
}

func (v NullablePimVariationBaseText) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePimVariationBaseText) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


