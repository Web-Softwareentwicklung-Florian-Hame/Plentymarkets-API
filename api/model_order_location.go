/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// OrderLocation struct for OrderLocation
type OrderLocation struct {
	Id *int32 `json:"id,omitempty"`
	CountryId *int32 `json:"countryId,omitempty"`
	Name *string `json:"name,omitempty"`
	ClientId *int32 `json:"clientId,omitempty"`
	PlentyId *int32 `json:"plentyId,omitempty"`
}

// NewOrderLocation instantiates a new OrderLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderLocation() *OrderLocation {
	this := OrderLocation{}
	return &this
}

// NewOrderLocationWithDefaults instantiates a new OrderLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderLocationWithDefaults() *OrderLocation {
	this := OrderLocation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrderLocation) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderLocation) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrderLocation) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OrderLocation) SetId(v int32) {
	o.Id = &v
}

// GetCountryId returns the CountryId field value if set, zero value otherwise.
func (o *OrderLocation) GetCountryId() int32 {
	if o == nil || o.CountryId == nil {
		var ret int32
		return ret
	}
	return *o.CountryId
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderLocation) GetCountryIdOk() (*int32, bool) {
	if o == nil || o.CountryId == nil {
		return nil, false
	}
	return o.CountryId, true
}

// HasCountryId returns a boolean if a field has been set.
func (o *OrderLocation) HasCountryId() bool {
	if o != nil && o.CountryId != nil {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given int32 and assigns it to the CountryId field.
func (o *OrderLocation) SetCountryId(v int32) {
	o.CountryId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrderLocation) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderLocation) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrderLocation) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrderLocation) SetName(v string) {
	o.Name = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *OrderLocation) GetClientId() int32 {
	if o == nil || o.ClientId == nil {
		var ret int32
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderLocation) GetClientIdOk() (*int32, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *OrderLocation) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given int32 and assigns it to the ClientId field.
func (o *OrderLocation) SetClientId(v int32) {
	o.ClientId = &v
}

// GetPlentyId returns the PlentyId field value if set, zero value otherwise.
func (o *OrderLocation) GetPlentyId() int32 {
	if o == nil || o.PlentyId == nil {
		var ret int32
		return ret
	}
	return *o.PlentyId
}

// GetPlentyIdOk returns a tuple with the PlentyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderLocation) GetPlentyIdOk() (*int32, bool) {
	if o == nil || o.PlentyId == nil {
		return nil, false
	}
	return o.PlentyId, true
}

// HasPlentyId returns a boolean if a field has been set.
func (o *OrderLocation) HasPlentyId() bool {
	if o != nil && o.PlentyId != nil {
		return true
	}

	return false
}

// SetPlentyId gets a reference to the given int32 and assigns it to the PlentyId field.
func (o *OrderLocation) SetPlentyId(v int32) {
	o.PlentyId = &v
}

func (o OrderLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CountryId != nil {
		toSerialize["countryId"] = o.CountryId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ClientId != nil {
		toSerialize["clientId"] = o.ClientId
	}
	if o.PlentyId != nil {
		toSerialize["plentyId"] = o.PlentyId
	}
	return json.Marshal(toSerialize)
}

type NullableOrderLocation struct {
	value *OrderLocation
	isSet bool
}

func (v NullableOrderLocation) Get() *OrderLocation {
	return v.value
}

func (v *NullableOrderLocation) Set(val *OrderLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderLocation(val *OrderLocation) *NullableOrderLocation {
	return &NullableOrderLocation{value: val, isSet: true}
}

func (v NullableOrderLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


