/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PimVariationProperty struct for PimVariationProperty
type PimVariationProperty struct {
	PropertyId *int32 `json:"propertyId,omitempty"`
	// can have any type
	Value interface{} `json:"value,omitempty"`
	Values *[]PimVariationPropertyValues `json:"values,omitempty"`
	GroupId *int32 `json:"groupId,omitempty"`
	SelectionValues *[]PimVariationPropertySelectionValues `json:"selectionValues,omitempty"`
}

// NewPimVariationProperty instantiates a new PimVariationProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPimVariationProperty() *PimVariationProperty {
	this := PimVariationProperty{}
	return &this
}

// NewPimVariationPropertyWithDefaults instantiates a new PimVariationProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPimVariationPropertyWithDefaults() *PimVariationProperty {
	this := PimVariationProperty{}
	return &this
}

// GetPropertyId returns the PropertyId field value if set, zero value otherwise.
func (o *PimVariationProperty) GetPropertyId() int32 {
	if o == nil || o.PropertyId == nil {
		var ret int32
		return ret
	}
	return *o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationProperty) GetPropertyIdOk() (*int32, bool) {
	if o == nil || o.PropertyId == nil {
		return nil, false
	}
	return o.PropertyId, true
}

// HasPropertyId returns a boolean if a field has been set.
func (o *PimVariationProperty) HasPropertyId() bool {
	if o != nil && o.PropertyId != nil {
		return true
	}

	return false
}

// SetPropertyId gets a reference to the given int32 and assigns it to the PropertyId field.
func (o *PimVariationProperty) SetPropertyId(v int32) {
	o.PropertyId = &v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PimVariationProperty) GetValue() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PimVariationProperty) GetValueOk() (*interface{}, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return &o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *PimVariationProperty) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given interface{} and assigns it to the Value field.
func (o *PimVariationProperty) SetValue(v interface{}) {
	o.Value = v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *PimVariationProperty) GetValues() []PimVariationPropertyValues {
	if o == nil || o.Values == nil {
		var ret []PimVariationPropertyValues
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationProperty) GetValuesOk() (*[]PimVariationPropertyValues, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *PimVariationProperty) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []PimVariationPropertyValues and assigns it to the Values field.
func (o *PimVariationProperty) SetValues(v []PimVariationPropertyValues) {
	o.Values = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *PimVariationProperty) GetGroupId() int32 {
	if o == nil || o.GroupId == nil {
		var ret int32
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationProperty) GetGroupIdOk() (*int32, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *PimVariationProperty) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given int32 and assigns it to the GroupId field.
func (o *PimVariationProperty) SetGroupId(v int32) {
	o.GroupId = &v
}

// GetSelectionValues returns the SelectionValues field value if set, zero value otherwise.
func (o *PimVariationProperty) GetSelectionValues() []PimVariationPropertySelectionValues {
	if o == nil || o.SelectionValues == nil {
		var ret []PimVariationPropertySelectionValues
		return ret
	}
	return *o.SelectionValues
}

// GetSelectionValuesOk returns a tuple with the SelectionValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationProperty) GetSelectionValuesOk() (*[]PimVariationPropertySelectionValues, bool) {
	if o == nil || o.SelectionValues == nil {
		return nil, false
	}
	return o.SelectionValues, true
}

// HasSelectionValues returns a boolean if a field has been set.
func (o *PimVariationProperty) HasSelectionValues() bool {
	if o != nil && o.SelectionValues != nil {
		return true
	}

	return false
}

// SetSelectionValues gets a reference to the given []PimVariationPropertySelectionValues and assigns it to the SelectionValues field.
func (o *PimVariationProperty) SetSelectionValues(v []PimVariationPropertySelectionValues) {
	o.SelectionValues = &v
}

func (o PimVariationProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PropertyId != nil {
		toSerialize["propertyId"] = o.PropertyId
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	if o.GroupId != nil {
		toSerialize["groupId"] = o.GroupId
	}
	if o.SelectionValues != nil {
		toSerialize["selectionValues"] = o.SelectionValues
	}
	return json.Marshal(toSerialize)
}

type NullablePimVariationProperty struct {
	value *PimVariationProperty
	isSet bool
}

func (v NullablePimVariationProperty) Get() *PimVariationProperty {
	return v.value
}

func (v *NullablePimVariationProperty) Set(val *PimVariationProperty) {
	v.value = val
	v.isSet = true
}

func (v NullablePimVariationProperty) IsSet() bool {
	return v.isSet
}

func (v *NullablePimVariationProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePimVariationProperty(val *PimVariationProperty) *NullablePimVariationProperty {
	return &NullablePimVariationProperty{value: val, isSet: true}
}

func (v NullablePimVariationProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePimVariationProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


