/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// ContactOption struct for ContactOption
type ContactOption struct {
	Id *int32 `json:"id,omitempty"`
	ContactId *int32 `json:"contactId,omitempty"`
	TypeId *int32 `json:"typeId,omitempty"`
	SubTypeId *int32 `json:"subTypeId,omitempty"`
	Value *string `json:"value,omitempty"`
	Priority *int32 `json:"priority,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewContactOption instantiates a new ContactOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactOption() *ContactOption {
	this := ContactOption{}
	return &this
}

// NewContactOptionWithDefaults instantiates a new ContactOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactOptionWithDefaults() *ContactOption {
	this := ContactOption{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContactOption) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactOption) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContactOption) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ContactOption) SetId(v int32) {
	o.Id = &v
}

// GetContactId returns the ContactId field value if set, zero value otherwise.
func (o *ContactOption) GetContactId() int32 {
	if o == nil || o.ContactId == nil {
		var ret int32
		return ret
	}
	return *o.ContactId
}

// GetContactIdOk returns a tuple with the ContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactOption) GetContactIdOk() (*int32, bool) {
	if o == nil || o.ContactId == nil {
		return nil, false
	}
	return o.ContactId, true
}

// HasContactId returns a boolean if a field has been set.
func (o *ContactOption) HasContactId() bool {
	if o != nil && o.ContactId != nil {
		return true
	}

	return false
}

// SetContactId gets a reference to the given int32 and assigns it to the ContactId field.
func (o *ContactOption) SetContactId(v int32) {
	o.ContactId = &v
}

// GetTypeId returns the TypeId field value if set, zero value otherwise.
func (o *ContactOption) GetTypeId() int32 {
	if o == nil || o.TypeId == nil {
		var ret int32
		return ret
	}
	return *o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactOption) GetTypeIdOk() (*int32, bool) {
	if o == nil || o.TypeId == nil {
		return nil, false
	}
	return o.TypeId, true
}

// HasTypeId returns a boolean if a field has been set.
func (o *ContactOption) HasTypeId() bool {
	if o != nil && o.TypeId != nil {
		return true
	}

	return false
}

// SetTypeId gets a reference to the given int32 and assigns it to the TypeId field.
func (o *ContactOption) SetTypeId(v int32) {
	o.TypeId = &v
}

// GetSubTypeId returns the SubTypeId field value if set, zero value otherwise.
func (o *ContactOption) GetSubTypeId() int32 {
	if o == nil || o.SubTypeId == nil {
		var ret int32
		return ret
	}
	return *o.SubTypeId
}

// GetSubTypeIdOk returns a tuple with the SubTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactOption) GetSubTypeIdOk() (*int32, bool) {
	if o == nil || o.SubTypeId == nil {
		return nil, false
	}
	return o.SubTypeId, true
}

// HasSubTypeId returns a boolean if a field has been set.
func (o *ContactOption) HasSubTypeId() bool {
	if o != nil && o.SubTypeId != nil {
		return true
	}

	return false
}

// SetSubTypeId gets a reference to the given int32 and assigns it to the SubTypeId field.
func (o *ContactOption) SetSubTypeId(v int32) {
	o.SubTypeId = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ContactOption) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactOption) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ContactOption) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ContactOption) SetValue(v string) {
	o.Value = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ContactOption) GetPriority() int32 {
	if o == nil || o.Priority == nil {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactOption) GetPriorityOk() (*int32, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ContactOption) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *ContactOption) SetPriority(v int32) {
	o.Priority = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ContactOption) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactOption) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ContactOption) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ContactOption) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ContactOption) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactOption) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ContactOption) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ContactOption) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o ContactOption) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ContactId != nil {
		toSerialize["contactId"] = o.ContactId
	}
	if o.TypeId != nil {
		toSerialize["typeId"] = o.TypeId
	}
	if o.SubTypeId != nil {
		toSerialize["subTypeId"] = o.SubTypeId
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableContactOption struct {
	value *ContactOption
	isSet bool
}

func (v NullableContactOption) Get() *ContactOption {
	return v.value
}

func (v *NullableContactOption) Set(val *ContactOption) {
	v.value = val
	v.isSet = true
}

func (v NullableContactOption) IsSet() bool {
	return v.isSet
}

func (v *NullableContactOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactOption(val *ContactOption) *NullableContactOption {
	return &NullableContactOption{value: val, isSet: true}
}

func (v NullableContactOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


