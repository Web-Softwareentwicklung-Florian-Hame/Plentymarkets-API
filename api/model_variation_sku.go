/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// VariationSku variation sku model
type VariationSku struct {
	Id *int32 `json:"id,omitempty"`
	VariationId *int32 `json:"variationId,omitempty"`
	MarketId *float32 `json:"marketId,omitempty"`
	AccountId *int32 `json:"accountId,omitempty"`
	InitialSku *string `json:"initialSku,omitempty"`
	Sku *string `json:"sku,omitempty"`
	ParentSku *string `json:"parentSku,omitempty"`
	IsActive *bool `json:"isActive,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	ExportedAt *time.Time `json:"exportedAt,omitempty"`
	StockUpdatedAt *time.Time `json:"stockUpdatedAt,omitempty"`
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
	Status *string `json:"status,omitempty"`
	AdditionalInformation *string `json:"additionalInformation,omitempty"`
}

// NewVariationSku instantiates a new VariationSku object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariationSku() *VariationSku {
	this := VariationSku{}
	return &this
}

// NewVariationSkuWithDefaults instantiates a new VariationSku object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariationSkuWithDefaults() *VariationSku {
	this := VariationSku{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VariationSku) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VariationSku) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *VariationSku) SetId(v int32) {
	o.Id = &v
}

// GetVariationId returns the VariationId field value if set, zero value otherwise.
func (o *VariationSku) GetVariationId() int32 {
	if o == nil || o.VariationId == nil {
		var ret int32
		return ret
	}
	return *o.VariationId
}

// GetVariationIdOk returns a tuple with the VariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetVariationIdOk() (*int32, bool) {
	if o == nil || o.VariationId == nil {
		return nil, false
	}
	return o.VariationId, true
}

// HasVariationId returns a boolean if a field has been set.
func (o *VariationSku) HasVariationId() bool {
	if o != nil && o.VariationId != nil {
		return true
	}

	return false
}

// SetVariationId gets a reference to the given int32 and assigns it to the VariationId field.
func (o *VariationSku) SetVariationId(v int32) {
	o.VariationId = &v
}

// GetMarketId returns the MarketId field value if set, zero value otherwise.
func (o *VariationSku) GetMarketId() float32 {
	if o == nil || o.MarketId == nil {
		var ret float32
		return ret
	}
	return *o.MarketId
}

// GetMarketIdOk returns a tuple with the MarketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetMarketIdOk() (*float32, bool) {
	if o == nil || o.MarketId == nil {
		return nil, false
	}
	return o.MarketId, true
}

// HasMarketId returns a boolean if a field has been set.
func (o *VariationSku) HasMarketId() bool {
	if o != nil && o.MarketId != nil {
		return true
	}

	return false
}

// SetMarketId gets a reference to the given float32 and assigns it to the MarketId field.
func (o *VariationSku) SetMarketId(v float32) {
	o.MarketId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *VariationSku) GetAccountId() int32 {
	if o == nil || o.AccountId == nil {
		var ret int32
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetAccountIdOk() (*int32, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *VariationSku) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int32 and assigns it to the AccountId field.
func (o *VariationSku) SetAccountId(v int32) {
	o.AccountId = &v
}

// GetInitialSku returns the InitialSku field value if set, zero value otherwise.
func (o *VariationSku) GetInitialSku() string {
	if o == nil || o.InitialSku == nil {
		var ret string
		return ret
	}
	return *o.InitialSku
}

// GetInitialSkuOk returns a tuple with the InitialSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetInitialSkuOk() (*string, bool) {
	if o == nil || o.InitialSku == nil {
		return nil, false
	}
	return o.InitialSku, true
}

// HasInitialSku returns a boolean if a field has been set.
func (o *VariationSku) HasInitialSku() bool {
	if o != nil && o.InitialSku != nil {
		return true
	}

	return false
}

// SetInitialSku gets a reference to the given string and assigns it to the InitialSku field.
func (o *VariationSku) SetInitialSku(v string) {
	o.InitialSku = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *VariationSku) GetSku() string {
	if o == nil || o.Sku == nil {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetSkuOk() (*string, bool) {
	if o == nil || o.Sku == nil {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *VariationSku) HasSku() bool {
	if o != nil && o.Sku != nil {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *VariationSku) SetSku(v string) {
	o.Sku = &v
}

// GetParentSku returns the ParentSku field value if set, zero value otherwise.
func (o *VariationSku) GetParentSku() string {
	if o == nil || o.ParentSku == nil {
		var ret string
		return ret
	}
	return *o.ParentSku
}

// GetParentSkuOk returns a tuple with the ParentSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetParentSkuOk() (*string, bool) {
	if o == nil || o.ParentSku == nil {
		return nil, false
	}
	return o.ParentSku, true
}

// HasParentSku returns a boolean if a field has been set.
func (o *VariationSku) HasParentSku() bool {
	if o != nil && o.ParentSku != nil {
		return true
	}

	return false
}

// SetParentSku gets a reference to the given string and assigns it to the ParentSku field.
func (o *VariationSku) SetParentSku(v string) {
	o.ParentSku = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *VariationSku) GetIsActive() bool {
	if o == nil || o.IsActive == nil {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetIsActiveOk() (*bool, bool) {
	if o == nil || o.IsActive == nil {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *VariationSku) HasIsActive() bool {
	if o != nil && o.IsActive != nil {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *VariationSku) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VariationSku) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VariationSku) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *VariationSku) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *VariationSku) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VariationSku) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *VariationSku) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetExportedAt returns the ExportedAt field value if set, zero value otherwise.
func (o *VariationSku) GetExportedAt() time.Time {
	if o == nil || o.ExportedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ExportedAt
}

// GetExportedAtOk returns a tuple with the ExportedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetExportedAtOk() (*time.Time, bool) {
	if o == nil || o.ExportedAt == nil {
		return nil, false
	}
	return o.ExportedAt, true
}

// HasExportedAt returns a boolean if a field has been set.
func (o *VariationSku) HasExportedAt() bool {
	if o != nil && o.ExportedAt != nil {
		return true
	}

	return false
}

// SetExportedAt gets a reference to the given time.Time and assigns it to the ExportedAt field.
func (o *VariationSku) SetExportedAt(v time.Time) {
	o.ExportedAt = &v
}

// GetStockUpdatedAt returns the StockUpdatedAt field value if set, zero value otherwise.
func (o *VariationSku) GetStockUpdatedAt() time.Time {
	if o == nil || o.StockUpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.StockUpdatedAt
}

// GetStockUpdatedAtOk returns a tuple with the StockUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetStockUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.StockUpdatedAt == nil {
		return nil, false
	}
	return o.StockUpdatedAt, true
}

// HasStockUpdatedAt returns a boolean if a field has been set.
func (o *VariationSku) HasStockUpdatedAt() bool {
	if o != nil && o.StockUpdatedAt != nil {
		return true
	}

	return false
}

// SetStockUpdatedAt gets a reference to the given time.Time and assigns it to the StockUpdatedAt field.
func (o *VariationSku) SetStockUpdatedAt(v time.Time) {
	o.StockUpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *VariationSku) GetDeletedAt() time.Time {
	if o == nil || o.DeletedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *VariationSku) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *VariationSku) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VariationSku) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VariationSku) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VariationSku) SetStatus(v string) {
	o.Status = &v
}

// GetAdditionalInformation returns the AdditionalInformation field value if set, zero value otherwise.
func (o *VariationSku) GetAdditionalInformation() string {
	if o == nil || o.AdditionalInformation == nil {
		var ret string
		return ret
	}
	return *o.AdditionalInformation
}

// GetAdditionalInformationOk returns a tuple with the AdditionalInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSku) GetAdditionalInformationOk() (*string, bool) {
	if o == nil || o.AdditionalInformation == nil {
		return nil, false
	}
	return o.AdditionalInformation, true
}

// HasAdditionalInformation returns a boolean if a field has been set.
func (o *VariationSku) HasAdditionalInformation() bool {
	if o != nil && o.AdditionalInformation != nil {
		return true
	}

	return false
}

// SetAdditionalInformation gets a reference to the given string and assigns it to the AdditionalInformation field.
func (o *VariationSku) SetAdditionalInformation(v string) {
	o.AdditionalInformation = &v
}

func (o VariationSku) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.VariationId != nil {
		toSerialize["variationId"] = o.VariationId
	}
	if o.MarketId != nil {
		toSerialize["marketId"] = o.MarketId
	}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.InitialSku != nil {
		toSerialize["initialSku"] = o.InitialSku
	}
	if o.Sku != nil {
		toSerialize["sku"] = o.Sku
	}
	if o.ParentSku != nil {
		toSerialize["parentSku"] = o.ParentSku
	}
	if o.IsActive != nil {
		toSerialize["isActive"] = o.IsActive
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.ExportedAt != nil {
		toSerialize["exportedAt"] = o.ExportedAt
	}
	if o.StockUpdatedAt != nil {
		toSerialize["stockUpdatedAt"] = o.StockUpdatedAt
	}
	if o.DeletedAt != nil {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.AdditionalInformation != nil {
		toSerialize["additionalInformation"] = o.AdditionalInformation
	}
	return json.Marshal(toSerialize)
}

type NullableVariationSku struct {
	value *VariationSku
	isSet bool
}

func (v NullableVariationSku) Get() *VariationSku {
	return v.value
}

func (v *NullableVariationSku) Set(val *VariationSku) {
	v.value = val
	v.isSet = true
}

func (v NullableVariationSku) IsSet() bool {
	return v.isSet
}

func (v *NullableVariationSku) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariationSku(val *VariationSku) *NullableVariationSku {
	return &NullableVariationSku{value: val, isSet: true}
}

func (v NullableVariationSku) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariationSku) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


