/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PimVariationAdditionalSku struct for PimVariationAdditionalSku
type PimVariationAdditionalSku struct {
	MarketId *float32 `json:"marketId,omitempty"`
	MarketAccountId *float32 `json:"marketAccountId,omitempty"`
	Sku *string `json:"sku,omitempty"`
}

// NewPimVariationAdditionalSku instantiates a new PimVariationAdditionalSku object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPimVariationAdditionalSku() *PimVariationAdditionalSku {
	this := PimVariationAdditionalSku{}
	return &this
}

// NewPimVariationAdditionalSkuWithDefaults instantiates a new PimVariationAdditionalSku object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPimVariationAdditionalSkuWithDefaults() *PimVariationAdditionalSku {
	this := PimVariationAdditionalSku{}
	return &this
}

// GetMarketId returns the MarketId field value if set, zero value otherwise.
func (o *PimVariationAdditionalSku) GetMarketId() float32 {
	if o == nil || o.MarketId == nil {
		var ret float32
		return ret
	}
	return *o.MarketId
}

// GetMarketIdOk returns a tuple with the MarketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationAdditionalSku) GetMarketIdOk() (*float32, bool) {
	if o == nil || o.MarketId == nil {
		return nil, false
	}
	return o.MarketId, true
}

// HasMarketId returns a boolean if a field has been set.
func (o *PimVariationAdditionalSku) HasMarketId() bool {
	if o != nil && o.MarketId != nil {
		return true
	}

	return false
}

// SetMarketId gets a reference to the given float32 and assigns it to the MarketId field.
func (o *PimVariationAdditionalSku) SetMarketId(v float32) {
	o.MarketId = &v
}

// GetMarketAccountId returns the MarketAccountId field value if set, zero value otherwise.
func (o *PimVariationAdditionalSku) GetMarketAccountId() float32 {
	if o == nil || o.MarketAccountId == nil {
		var ret float32
		return ret
	}
	return *o.MarketAccountId
}

// GetMarketAccountIdOk returns a tuple with the MarketAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationAdditionalSku) GetMarketAccountIdOk() (*float32, bool) {
	if o == nil || o.MarketAccountId == nil {
		return nil, false
	}
	return o.MarketAccountId, true
}

// HasMarketAccountId returns a boolean if a field has been set.
func (o *PimVariationAdditionalSku) HasMarketAccountId() bool {
	if o != nil && o.MarketAccountId != nil {
		return true
	}

	return false
}

// SetMarketAccountId gets a reference to the given float32 and assigns it to the MarketAccountId field.
func (o *PimVariationAdditionalSku) SetMarketAccountId(v float32) {
	o.MarketAccountId = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *PimVariationAdditionalSku) GetSku() string {
	if o == nil || o.Sku == nil {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationAdditionalSku) GetSkuOk() (*string, bool) {
	if o == nil || o.Sku == nil {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *PimVariationAdditionalSku) HasSku() bool {
	if o != nil && o.Sku != nil {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *PimVariationAdditionalSku) SetSku(v string) {
	o.Sku = &v
}

func (o PimVariationAdditionalSku) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MarketId != nil {
		toSerialize["marketId"] = o.MarketId
	}
	if o.MarketAccountId != nil {
		toSerialize["marketAccountId"] = o.MarketAccountId
	}
	if o.Sku != nil {
		toSerialize["sku"] = o.Sku
	}
	return json.Marshal(toSerialize)
}

type NullablePimVariationAdditionalSku struct {
	value *PimVariationAdditionalSku
	isSet bool
}

func (v NullablePimVariationAdditionalSku) Get() *PimVariationAdditionalSku {
	return v.value
}

func (v *NullablePimVariationAdditionalSku) Set(val *PimVariationAdditionalSku) {
	v.value = val
	v.isSet = true
}

func (v NullablePimVariationAdditionalSku) IsSet() bool {
	return v.isSet
}

func (v *NullablePimVariationAdditionalSku) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePimVariationAdditionalSku(val *PimVariationAdditionalSku) *NullablePimVariationAdditionalSku {
	return &NullablePimVariationAdditionalSku{value: val, isSet: true}
}

func (v NullablePimVariationAdditionalSku) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePimVariationAdditionalSku) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


