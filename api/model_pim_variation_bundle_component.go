/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PimVariationBundleComponent struct for PimVariationBundleComponent
type PimVariationBundleComponent struct {
	ComponentVariationId *float32 `json:"componentVariationId,omitempty"`
	ComponentQuantity *float32 `json:"componentQuantity,omitempty"`
}

// NewPimVariationBundleComponent instantiates a new PimVariationBundleComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPimVariationBundleComponent() *PimVariationBundleComponent {
	this := PimVariationBundleComponent{}
	return &this
}

// NewPimVariationBundleComponentWithDefaults instantiates a new PimVariationBundleComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPimVariationBundleComponentWithDefaults() *PimVariationBundleComponent {
	this := PimVariationBundleComponent{}
	return &this
}

// GetComponentVariationId returns the ComponentVariationId field value if set, zero value otherwise.
func (o *PimVariationBundleComponent) GetComponentVariationId() float32 {
	if o == nil || o.ComponentVariationId == nil {
		var ret float32
		return ret
	}
	return *o.ComponentVariationId
}

// GetComponentVariationIdOk returns a tuple with the ComponentVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationBundleComponent) GetComponentVariationIdOk() (*float32, bool) {
	if o == nil || o.ComponentVariationId == nil {
		return nil, false
	}
	return o.ComponentVariationId, true
}

// HasComponentVariationId returns a boolean if a field has been set.
func (o *PimVariationBundleComponent) HasComponentVariationId() bool {
	if o != nil && o.ComponentVariationId != nil {
		return true
	}

	return false
}

// SetComponentVariationId gets a reference to the given float32 and assigns it to the ComponentVariationId field.
func (o *PimVariationBundleComponent) SetComponentVariationId(v float32) {
	o.ComponentVariationId = &v
}

// GetComponentQuantity returns the ComponentQuantity field value if set, zero value otherwise.
func (o *PimVariationBundleComponent) GetComponentQuantity() float32 {
	if o == nil || o.ComponentQuantity == nil {
		var ret float32
		return ret
	}
	return *o.ComponentQuantity
}

// GetComponentQuantityOk returns a tuple with the ComponentQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationBundleComponent) GetComponentQuantityOk() (*float32, bool) {
	if o == nil || o.ComponentQuantity == nil {
		return nil, false
	}
	return o.ComponentQuantity, true
}

// HasComponentQuantity returns a boolean if a field has been set.
func (o *PimVariationBundleComponent) HasComponentQuantity() bool {
	if o != nil && o.ComponentQuantity != nil {
		return true
	}

	return false
}

// SetComponentQuantity gets a reference to the given float32 and assigns it to the ComponentQuantity field.
func (o *PimVariationBundleComponent) SetComponentQuantity(v float32) {
	o.ComponentQuantity = &v
}

func (o PimVariationBundleComponent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ComponentVariationId != nil {
		toSerialize["componentVariationId"] = o.ComponentVariationId
	}
	if o.ComponentQuantity != nil {
		toSerialize["componentQuantity"] = o.ComponentQuantity
	}
	return json.Marshal(toSerialize)
}

type NullablePimVariationBundleComponent struct {
	value *PimVariationBundleComponent
	isSet bool
}

func (v NullablePimVariationBundleComponent) Get() *PimVariationBundleComponent {
	return v.value
}

func (v *NullablePimVariationBundleComponent) Set(val *PimVariationBundleComponent) {
	v.value = val
	v.isSet = true
}

func (v NullablePimVariationBundleComponent) IsSet() bool {
	return v.isSet
}

func (v *NullablePimVariationBundleComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePimVariationBundleComponent(val *PimVariationBundleComponent) *NullablePimVariationBundleComponent {
	return &NullablePimVariationBundleComponent{value: val, isSet: true}
}

func (v NullablePimVariationBundleComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePimVariationBundleComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


