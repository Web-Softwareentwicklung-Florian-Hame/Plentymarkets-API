/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// PropertiesV2Values struct for PropertiesV2Values
type PropertiesV2Values struct {
	Id *int32 `json:"id,omitempty"`
	RelationId *int32 `json:"relationId,omitempty"`
	Lang *string `json:"lang,omitempty"`
	Value *string `json:"value,omitempty"`
	Description *string `json:"description,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewPropertiesV2Values instantiates a new PropertiesV2Values object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertiesV2Values() *PropertiesV2Values {
	this := PropertiesV2Values{}
	return &this
}

// NewPropertiesV2ValuesWithDefaults instantiates a new PropertiesV2Values object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertiesV2ValuesWithDefaults() *PropertiesV2Values {
	this := PropertiesV2Values{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PropertiesV2Values) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertiesV2Values) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PropertiesV2Values) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PropertiesV2Values) SetId(v int32) {
	o.Id = &v
}

// GetRelationId returns the RelationId field value if set, zero value otherwise.
func (o *PropertiesV2Values) GetRelationId() int32 {
	if o == nil || o.RelationId == nil {
		var ret int32
		return ret
	}
	return *o.RelationId
}

// GetRelationIdOk returns a tuple with the RelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertiesV2Values) GetRelationIdOk() (*int32, bool) {
	if o == nil || o.RelationId == nil {
		return nil, false
	}
	return o.RelationId, true
}

// HasRelationId returns a boolean if a field has been set.
func (o *PropertiesV2Values) HasRelationId() bool {
	if o != nil && o.RelationId != nil {
		return true
	}

	return false
}

// SetRelationId gets a reference to the given int32 and assigns it to the RelationId field.
func (o *PropertiesV2Values) SetRelationId(v int32) {
	o.RelationId = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *PropertiesV2Values) GetLang() string {
	if o == nil || o.Lang == nil {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertiesV2Values) GetLangOk() (*string, bool) {
	if o == nil || o.Lang == nil {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *PropertiesV2Values) HasLang() bool {
	if o != nil && o.Lang != nil {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *PropertiesV2Values) SetLang(v string) {
	o.Lang = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *PropertiesV2Values) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertiesV2Values) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *PropertiesV2Values) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *PropertiesV2Values) SetValue(v string) {
	o.Value = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PropertiesV2Values) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertiesV2Values) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PropertiesV2Values) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PropertiesV2Values) SetDescription(v string) {
	o.Description = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PropertiesV2Values) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertiesV2Values) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PropertiesV2Values) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PropertiesV2Values) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PropertiesV2Values) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertiesV2Values) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PropertiesV2Values) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PropertiesV2Values) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o PropertiesV2Values) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.RelationId != nil {
		toSerialize["relationId"] = o.RelationId
	}
	if o.Lang != nil {
		toSerialize["lang"] = o.Lang
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullablePropertiesV2Values struct {
	value *PropertiesV2Values
	isSet bool
}

func (v NullablePropertiesV2Values) Get() *PropertiesV2Values {
	return v.value
}

func (v *NullablePropertiesV2Values) Set(val *PropertiesV2Values) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertiesV2Values) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertiesV2Values) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertiesV2Values(val *PropertiesV2Values) *NullablePropertiesV2Values {
	return &NullablePropertiesV2Values{value: val, isSet: true}
}

func (v NullablePropertiesV2Values) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertiesV2Values) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


