/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PimVariationUnit struct for PimVariationUnit
type PimVariationUnit struct {
	UnitId *int32 `json:"unitId,omitempty"`
	UnitCombinationId *int32 `json:"unitCombinationId,omitempty"`
	Content *float32 `json:"content,omitempty"`
}

// NewPimVariationUnit instantiates a new PimVariationUnit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPimVariationUnit() *PimVariationUnit {
	this := PimVariationUnit{}
	return &this
}

// NewPimVariationUnitWithDefaults instantiates a new PimVariationUnit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPimVariationUnitWithDefaults() *PimVariationUnit {
	this := PimVariationUnit{}
	return &this
}

// GetUnitId returns the UnitId field value if set, zero value otherwise.
func (o *PimVariationUnit) GetUnitId() int32 {
	if o == nil || o.UnitId == nil {
		var ret int32
		return ret
	}
	return *o.UnitId
}

// GetUnitIdOk returns a tuple with the UnitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationUnit) GetUnitIdOk() (*int32, bool) {
	if o == nil || o.UnitId == nil {
		return nil, false
	}
	return o.UnitId, true
}

// HasUnitId returns a boolean if a field has been set.
func (o *PimVariationUnit) HasUnitId() bool {
	if o != nil && o.UnitId != nil {
		return true
	}

	return false
}

// SetUnitId gets a reference to the given int32 and assigns it to the UnitId field.
func (o *PimVariationUnit) SetUnitId(v int32) {
	o.UnitId = &v
}

// GetUnitCombinationId returns the UnitCombinationId field value if set, zero value otherwise.
func (o *PimVariationUnit) GetUnitCombinationId() int32 {
	if o == nil || o.UnitCombinationId == nil {
		var ret int32
		return ret
	}
	return *o.UnitCombinationId
}

// GetUnitCombinationIdOk returns a tuple with the UnitCombinationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationUnit) GetUnitCombinationIdOk() (*int32, bool) {
	if o == nil || o.UnitCombinationId == nil {
		return nil, false
	}
	return o.UnitCombinationId, true
}

// HasUnitCombinationId returns a boolean if a field has been set.
func (o *PimVariationUnit) HasUnitCombinationId() bool {
	if o != nil && o.UnitCombinationId != nil {
		return true
	}

	return false
}

// SetUnitCombinationId gets a reference to the given int32 and assigns it to the UnitCombinationId field.
func (o *PimVariationUnit) SetUnitCombinationId(v int32) {
	o.UnitCombinationId = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *PimVariationUnit) GetContent() float32 {
	if o == nil || o.Content == nil {
		var ret float32
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationUnit) GetContentOk() (*float32, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *PimVariationUnit) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given float32 and assigns it to the Content field.
func (o *PimVariationUnit) SetContent(v float32) {
	o.Content = &v
}

func (o PimVariationUnit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UnitId != nil {
		toSerialize["unitId"] = o.UnitId
	}
	if o.UnitCombinationId != nil {
		toSerialize["unitCombinationId"] = o.UnitCombinationId
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}

type NullablePimVariationUnit struct {
	value *PimVariationUnit
	isSet bool
}

func (v NullablePimVariationUnit) Get() *PimVariationUnit {
	return v.value
}

func (v *NullablePimVariationUnit) Set(val *PimVariationUnit) {
	v.value = val
	v.isSet = true
}

func (v NullablePimVariationUnit) IsSet() bool {
	return v.isSet
}

func (v *NullablePimVariationUnit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePimVariationUnit(val *PimVariationUnit) *NullablePimVariationUnit {
	return &NullablePimVariationUnit{value: val, isSet: true}
}

func (v NullablePimVariationUnit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePimVariationUnit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


