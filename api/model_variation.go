/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// Variation variation object model
type Variation struct {
	Id *int32 `json:"id,omitempty"`
	IsMain *bool `json:"isMain,omitempty"`
	MainVariationId *int32 `json:"mainVariationId,omitempty"`
	ItemId *int32 `json:"itemId,omitempty"`
	CategoryVariationId *int32 `json:"categoryVariationId,omitempty"`
	MarketVariationId *int32 `json:"marketVariationId,omitempty"`
	ClientVariationId *int32 `json:"clientVariationId,omitempty"`
	SalesPriceVariationId *int32 `json:"salesPriceVariationId,omitempty"`
	SupplierVariationId *int32 `json:"supplierVariationId,omitempty"`
	WarehouseVariationId *int32 `json:"warehouseVariationId,omitempty"`
	Position *int32 `json:"position,omitempty"`
	IsActive *bool `json:"isActive,omitempty"`
	Number *string `json:"number,omitempty"`
	Model *string `json:"model,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	ParentVariationId *int32 `json:"parentVariationId,omitempty"`
	ParentVariationQuantity *int32 `json:"parentVariationQuantity,omitempty"`
	Availability *int32 `json:"availability,omitempty"`
	EstimatedAvailableAt *time.Time `json:"estimatedAvailableAt,omitempty"`
	PurchasePrice *float32 `json:"purchasePrice,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	RelatedUpdatedAt *time.Time `json:"relatedUpdatedAt,omitempty"`
	PriceCalculationId *int32 `json:"priceCalculationId,omitempty"`
	PriceCalculationUUID *string `json:"priceCalculationUUID,omitempty"`
	Picking *string `json:"picking,omitempty"`
	StockLimitation *int32 `json:"stockLimitation,omitempty"`
	IsVisibleIfNetStockIsPositive *bool `json:"isVisibleIfNetStockIsPositive,omitempty"`
	IsInvisibleIfNetStockIsNotPositive *bool `json:"isInvisibleIfNetStockIsNotPositive,omitempty"`
	IsAvailableIfNetStockIsPositive *bool `json:"isAvailableIfNetStockIsPositive,omitempty"`
	IsUnavailableIfNetStockIsNotPositive *bool `json:"isUnavailableIfNetStockIsNotPositive,omitempty"`
	MainWarehouseId *int32 `json:"mainWarehouseId,omitempty"`
	MaximumOrderQuantity *float32 `json:"maximumOrderQuantity,omitempty"`
	MinimumOrderQuantity *float32 `json:"minimumOrderQuantity,omitempty"`
	IntervalOrderQuantity *float32 `json:"intervalOrderQuantity,omitempty"`
	AvailableUntil *string `json:"availableUntil,omitempty"`
	ReleasedAt *time.Time `json:"releasedAt,omitempty"`
	UnitCombinationId *float32 `json:"unitCombinationId,omitempty"`
	Name *string `json:"name,omitempty"`
	WeightG *int32 `json:"weightG,omitempty"`
	WeightNetG *int32 `json:"weightNetG,omitempty"`
	WidthMM *int32 `json:"widthMM,omitempty"`
	LengthMM *int32 `json:"lengthMM,omitempty"`
	HeightMM *int32 `json:"heightMM,omitempty"`
	ExtraShippingCharge1 *float32 `json:"extraShippingCharge1,omitempty"`
	ExtraShippingCharge2 *float32 `json:"extraShippingCharge2,omitempty"`
	UnitsContained *float32 `json:"unitsContained,omitempty"`
	PalletTypeId *int32 `json:"palletTypeId,omitempty"`
	PackingUnits *float32 `json:"packingUnits,omitempty"`
	PackingUnitTypeId *int32 `json:"packingUnitTypeId,omitempty"`
	TransportationCosts *float32 `json:"transportationCosts,omitempty"`
	StorageCosts *float32 `json:"storageCosts,omitempty"`
	OperatingCosts *float32 `json:"operatingCosts,omitempty"`
	VatId *int32 `json:"vatId,omitempty"`
	AutomaticClientVisibility *int32 `json:"automaticClientVisibility,omitempty"`
	IsHiddenInCategoryList *bool `json:"isHiddenInCategoryList,omitempty"`
	DefaultShippingCosts *float32 `json:"defaultShippingCosts,omitempty"`
	MayShowUnitPrice *bool `json:"mayShowUnitPrice,omitempty"`
	MovingAveragePrice *float32 `json:"movingAveragePrice,omitempty"`
	PropertyVariationId *int32 `json:"propertyVariationId,omitempty"`
	AutomaticListVisibility *int32 `json:"automaticListVisibility,omitempty"`
	IsVisibleInListIfNetStockIsPositive *bool `json:"isVisibleInListIfNetStockIsPositive,omitempty"`
	IsInvisibleInListIfNetStockIsNotPositive *bool `json:"isInvisibleInListIfNetStockIsNotPositive,omitempty"`
	SingleItemCount *int32 `json:"singleItemCount,omitempty"`
	AvailabilityUpdatedAt *time.Time `json:"availabilityUpdatedAt,omitempty"`
	TagVariationId *string `json:"tagVariationId,omitempty"`
	HasCalculatedBundleWeight *bool `json:"hasCalculatedBundleWeight,omitempty"`
	HasCalculatedBundleNetWeight *bool `json:"hasCalculatedBundleNetWeight,omitempty"`
	HasCalculatedBundlePurchasePrice *bool `json:"hasCalculatedBundlePurchasePrice,omitempty"`
	HasCalculatedBundleMovingAveragePrice *bool `json:"hasCalculatedBundleMovingAveragePrice,omitempty"`
	CustomsTariffNumber *string `json:"customsTariffNumber,omitempty"`
	Properties *[]Property `json:"properties,omitempty"`
	VariationProperties *[]VariationProperty `json:"variationProperties,omitempty"`
	VariationBarcodes *[]VariationBarcode `json:"variationBarcodes,omitempty"`
	VariationSalesPrices *[]VariationSalesPrice `json:"variationSalesPrices,omitempty"`
	MarketItemNumbers *[]VariationMarketItemNumber `json:"marketItemNumbers,omitempty"`
	VariationCategories *[]VariationCategory `json:"variationCategories,omitempty"`
	VariationClients *[]VariationClient `json:"variationClients,omitempty"`
	VariationMarkets *[]VariationMarket `json:"variationMarkets,omitempty"`
	VariationDefaultCategory *[]VariationDefaultCategory `json:"variationDefaultCategory,omitempty"`
	VariationSuppliers *[]VariationSupplier `json:"variationSuppliers,omitempty"`
	Images *[]VariationImage `json:"images,omitempty"`
	ItemImages *[]VariationImage `json:"itemImages,omitempty"`
	VariationAttributeValues *[]VariationAttributeValue `json:"variationAttributeValues,omitempty"`
	VariationSkus *[]VariationSku `json:"variationSkus,omitempty"`
	Unit *VariationUnit `json:"unit,omitempty"`
	Parent *Variation `json:"parent,omitempty"`
	Item *VariationItem `json:"item,omitempty"`
	Stock *[]VariationStock `json:"stock,omitempty"`
}

// NewVariation instantiates a new Variation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariation() *Variation {
	this := Variation{}
	return &this
}

// NewVariationWithDefaults instantiates a new Variation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariationWithDefaults() *Variation {
	this := Variation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Variation) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Variation) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Variation) SetId(v int32) {
	o.Id = &v
}

// GetIsMain returns the IsMain field value if set, zero value otherwise.
func (o *Variation) GetIsMain() bool {
	if o == nil || o.IsMain == nil {
		var ret bool
		return ret
	}
	return *o.IsMain
}

// GetIsMainOk returns a tuple with the IsMain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetIsMainOk() (*bool, bool) {
	if o == nil || o.IsMain == nil {
		return nil, false
	}
	return o.IsMain, true
}

// HasIsMain returns a boolean if a field has been set.
func (o *Variation) HasIsMain() bool {
	if o != nil && o.IsMain != nil {
		return true
	}

	return false
}

// SetIsMain gets a reference to the given bool and assigns it to the IsMain field.
func (o *Variation) SetIsMain(v bool) {
	o.IsMain = &v
}

// GetMainVariationId returns the MainVariationId field value if set, zero value otherwise.
func (o *Variation) GetMainVariationId() int32 {
	if o == nil || o.MainVariationId == nil {
		var ret int32
		return ret
	}
	return *o.MainVariationId
}

// GetMainVariationIdOk returns a tuple with the MainVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetMainVariationIdOk() (*int32, bool) {
	if o == nil || o.MainVariationId == nil {
		return nil, false
	}
	return o.MainVariationId, true
}

// HasMainVariationId returns a boolean if a field has been set.
func (o *Variation) HasMainVariationId() bool {
	if o != nil && o.MainVariationId != nil {
		return true
	}

	return false
}

// SetMainVariationId gets a reference to the given int32 and assigns it to the MainVariationId field.
func (o *Variation) SetMainVariationId(v int32) {
	o.MainVariationId = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *Variation) GetItemId() int32 {
	if o == nil || o.ItemId == nil {
		var ret int32
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetItemIdOk() (*int32, bool) {
	if o == nil || o.ItemId == nil {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *Variation) HasItemId() bool {
	if o != nil && o.ItemId != nil {
		return true
	}

	return false
}

// SetItemId gets a reference to the given int32 and assigns it to the ItemId field.
func (o *Variation) SetItemId(v int32) {
	o.ItemId = &v
}

// GetCategoryVariationId returns the CategoryVariationId field value if set, zero value otherwise.
func (o *Variation) GetCategoryVariationId() int32 {
	if o == nil || o.CategoryVariationId == nil {
		var ret int32
		return ret
	}
	return *o.CategoryVariationId
}

// GetCategoryVariationIdOk returns a tuple with the CategoryVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetCategoryVariationIdOk() (*int32, bool) {
	if o == nil || o.CategoryVariationId == nil {
		return nil, false
	}
	return o.CategoryVariationId, true
}

// HasCategoryVariationId returns a boolean if a field has been set.
func (o *Variation) HasCategoryVariationId() bool {
	if o != nil && o.CategoryVariationId != nil {
		return true
	}

	return false
}

// SetCategoryVariationId gets a reference to the given int32 and assigns it to the CategoryVariationId field.
func (o *Variation) SetCategoryVariationId(v int32) {
	o.CategoryVariationId = &v
}

// GetMarketVariationId returns the MarketVariationId field value if set, zero value otherwise.
func (o *Variation) GetMarketVariationId() int32 {
	if o == nil || o.MarketVariationId == nil {
		var ret int32
		return ret
	}
	return *o.MarketVariationId
}

// GetMarketVariationIdOk returns a tuple with the MarketVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetMarketVariationIdOk() (*int32, bool) {
	if o == nil || o.MarketVariationId == nil {
		return nil, false
	}
	return o.MarketVariationId, true
}

// HasMarketVariationId returns a boolean if a field has been set.
func (o *Variation) HasMarketVariationId() bool {
	if o != nil && o.MarketVariationId != nil {
		return true
	}

	return false
}

// SetMarketVariationId gets a reference to the given int32 and assigns it to the MarketVariationId field.
func (o *Variation) SetMarketVariationId(v int32) {
	o.MarketVariationId = &v
}

// GetClientVariationId returns the ClientVariationId field value if set, zero value otherwise.
func (o *Variation) GetClientVariationId() int32 {
	if o == nil || o.ClientVariationId == nil {
		var ret int32
		return ret
	}
	return *o.ClientVariationId
}

// GetClientVariationIdOk returns a tuple with the ClientVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetClientVariationIdOk() (*int32, bool) {
	if o == nil || o.ClientVariationId == nil {
		return nil, false
	}
	return o.ClientVariationId, true
}

// HasClientVariationId returns a boolean if a field has been set.
func (o *Variation) HasClientVariationId() bool {
	if o != nil && o.ClientVariationId != nil {
		return true
	}

	return false
}

// SetClientVariationId gets a reference to the given int32 and assigns it to the ClientVariationId field.
func (o *Variation) SetClientVariationId(v int32) {
	o.ClientVariationId = &v
}

// GetSalesPriceVariationId returns the SalesPriceVariationId field value if set, zero value otherwise.
func (o *Variation) GetSalesPriceVariationId() int32 {
	if o == nil || o.SalesPriceVariationId == nil {
		var ret int32
		return ret
	}
	return *o.SalesPriceVariationId
}

// GetSalesPriceVariationIdOk returns a tuple with the SalesPriceVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetSalesPriceVariationIdOk() (*int32, bool) {
	if o == nil || o.SalesPriceVariationId == nil {
		return nil, false
	}
	return o.SalesPriceVariationId, true
}

// HasSalesPriceVariationId returns a boolean if a field has been set.
func (o *Variation) HasSalesPriceVariationId() bool {
	if o != nil && o.SalesPriceVariationId != nil {
		return true
	}

	return false
}

// SetSalesPriceVariationId gets a reference to the given int32 and assigns it to the SalesPriceVariationId field.
func (o *Variation) SetSalesPriceVariationId(v int32) {
	o.SalesPriceVariationId = &v
}

// GetSupplierVariationId returns the SupplierVariationId field value if set, zero value otherwise.
func (o *Variation) GetSupplierVariationId() int32 {
	if o == nil || o.SupplierVariationId == nil {
		var ret int32
		return ret
	}
	return *o.SupplierVariationId
}

// GetSupplierVariationIdOk returns a tuple with the SupplierVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetSupplierVariationIdOk() (*int32, bool) {
	if o == nil || o.SupplierVariationId == nil {
		return nil, false
	}
	return o.SupplierVariationId, true
}

// HasSupplierVariationId returns a boolean if a field has been set.
func (o *Variation) HasSupplierVariationId() bool {
	if o != nil && o.SupplierVariationId != nil {
		return true
	}

	return false
}

// SetSupplierVariationId gets a reference to the given int32 and assigns it to the SupplierVariationId field.
func (o *Variation) SetSupplierVariationId(v int32) {
	o.SupplierVariationId = &v
}

// GetWarehouseVariationId returns the WarehouseVariationId field value if set, zero value otherwise.
func (o *Variation) GetWarehouseVariationId() int32 {
	if o == nil || o.WarehouseVariationId == nil {
		var ret int32
		return ret
	}
	return *o.WarehouseVariationId
}

// GetWarehouseVariationIdOk returns a tuple with the WarehouseVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetWarehouseVariationIdOk() (*int32, bool) {
	if o == nil || o.WarehouseVariationId == nil {
		return nil, false
	}
	return o.WarehouseVariationId, true
}

// HasWarehouseVariationId returns a boolean if a field has been set.
func (o *Variation) HasWarehouseVariationId() bool {
	if o != nil && o.WarehouseVariationId != nil {
		return true
	}

	return false
}

// SetWarehouseVariationId gets a reference to the given int32 and assigns it to the WarehouseVariationId field.
func (o *Variation) SetWarehouseVariationId(v int32) {
	o.WarehouseVariationId = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *Variation) GetPosition() int32 {
	if o == nil || o.Position == nil {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetPositionOk() (*int32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *Variation) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *Variation) SetPosition(v int32) {
	o.Position = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *Variation) GetIsActive() bool {
	if o == nil || o.IsActive == nil {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetIsActiveOk() (*bool, bool) {
	if o == nil || o.IsActive == nil {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *Variation) HasIsActive() bool {
	if o != nil && o.IsActive != nil {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *Variation) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *Variation) GetNumber() string {
	if o == nil || o.Number == nil {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetNumberOk() (*string, bool) {
	if o == nil || o.Number == nil {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *Variation) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *Variation) SetNumber(v string) {
	o.Number = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *Variation) GetModel() string {
	if o == nil || o.Model == nil {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetModelOk() (*string, bool) {
	if o == nil || o.Model == nil {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *Variation) HasModel() bool {
	if o != nil && o.Model != nil {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *Variation) SetModel(v string) {
	o.Model = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *Variation) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *Variation) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *Variation) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetParentVariationId returns the ParentVariationId field value if set, zero value otherwise.
func (o *Variation) GetParentVariationId() int32 {
	if o == nil || o.ParentVariationId == nil {
		var ret int32
		return ret
	}
	return *o.ParentVariationId
}

// GetParentVariationIdOk returns a tuple with the ParentVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetParentVariationIdOk() (*int32, bool) {
	if o == nil || o.ParentVariationId == nil {
		return nil, false
	}
	return o.ParentVariationId, true
}

// HasParentVariationId returns a boolean if a field has been set.
func (o *Variation) HasParentVariationId() bool {
	if o != nil && o.ParentVariationId != nil {
		return true
	}

	return false
}

// SetParentVariationId gets a reference to the given int32 and assigns it to the ParentVariationId field.
func (o *Variation) SetParentVariationId(v int32) {
	o.ParentVariationId = &v
}

// GetParentVariationQuantity returns the ParentVariationQuantity field value if set, zero value otherwise.
func (o *Variation) GetParentVariationQuantity() int32 {
	if o == nil || o.ParentVariationQuantity == nil {
		var ret int32
		return ret
	}
	return *o.ParentVariationQuantity
}

// GetParentVariationQuantityOk returns a tuple with the ParentVariationQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetParentVariationQuantityOk() (*int32, bool) {
	if o == nil || o.ParentVariationQuantity == nil {
		return nil, false
	}
	return o.ParentVariationQuantity, true
}

// HasParentVariationQuantity returns a boolean if a field has been set.
func (o *Variation) HasParentVariationQuantity() bool {
	if o != nil && o.ParentVariationQuantity != nil {
		return true
	}

	return false
}

// SetParentVariationQuantity gets a reference to the given int32 and assigns it to the ParentVariationQuantity field.
func (o *Variation) SetParentVariationQuantity(v int32) {
	o.ParentVariationQuantity = &v
}

// GetAvailability returns the Availability field value if set, zero value otherwise.
func (o *Variation) GetAvailability() int32 {
	if o == nil || o.Availability == nil {
		var ret int32
		return ret
	}
	return *o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetAvailabilityOk() (*int32, bool) {
	if o == nil || o.Availability == nil {
		return nil, false
	}
	return o.Availability, true
}

// HasAvailability returns a boolean if a field has been set.
func (o *Variation) HasAvailability() bool {
	if o != nil && o.Availability != nil {
		return true
	}

	return false
}

// SetAvailability gets a reference to the given int32 and assigns it to the Availability field.
func (o *Variation) SetAvailability(v int32) {
	o.Availability = &v
}

// GetEstimatedAvailableAt returns the EstimatedAvailableAt field value if set, zero value otherwise.
func (o *Variation) GetEstimatedAvailableAt() time.Time {
	if o == nil || o.EstimatedAvailableAt == nil {
		var ret time.Time
		return ret
	}
	return *o.EstimatedAvailableAt
}

// GetEstimatedAvailableAtOk returns a tuple with the EstimatedAvailableAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetEstimatedAvailableAtOk() (*time.Time, bool) {
	if o == nil || o.EstimatedAvailableAt == nil {
		return nil, false
	}
	return o.EstimatedAvailableAt, true
}

// HasEstimatedAvailableAt returns a boolean if a field has been set.
func (o *Variation) HasEstimatedAvailableAt() bool {
	if o != nil && o.EstimatedAvailableAt != nil {
		return true
	}

	return false
}

// SetEstimatedAvailableAt gets a reference to the given time.Time and assigns it to the EstimatedAvailableAt field.
func (o *Variation) SetEstimatedAvailableAt(v time.Time) {
	o.EstimatedAvailableAt = &v
}

// GetPurchasePrice returns the PurchasePrice field value if set, zero value otherwise.
func (o *Variation) GetPurchasePrice() float32 {
	if o == nil || o.PurchasePrice == nil {
		var ret float32
		return ret
	}
	return *o.PurchasePrice
}

// GetPurchasePriceOk returns a tuple with the PurchasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetPurchasePriceOk() (*float32, bool) {
	if o == nil || o.PurchasePrice == nil {
		return nil, false
	}
	return o.PurchasePrice, true
}

// HasPurchasePrice returns a boolean if a field has been set.
func (o *Variation) HasPurchasePrice() bool {
	if o != nil && o.PurchasePrice != nil {
		return true
	}

	return false
}

// SetPurchasePrice gets a reference to the given float32 and assigns it to the PurchasePrice field.
func (o *Variation) SetPurchasePrice(v float32) {
	o.PurchasePrice = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Variation) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Variation) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Variation) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Variation) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Variation) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Variation) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetRelatedUpdatedAt returns the RelatedUpdatedAt field value if set, zero value otherwise.
func (o *Variation) GetRelatedUpdatedAt() time.Time {
	if o == nil || o.RelatedUpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.RelatedUpdatedAt
}

// GetRelatedUpdatedAtOk returns a tuple with the RelatedUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetRelatedUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.RelatedUpdatedAt == nil {
		return nil, false
	}
	return o.RelatedUpdatedAt, true
}

// HasRelatedUpdatedAt returns a boolean if a field has been set.
func (o *Variation) HasRelatedUpdatedAt() bool {
	if o != nil && o.RelatedUpdatedAt != nil {
		return true
	}

	return false
}

// SetRelatedUpdatedAt gets a reference to the given time.Time and assigns it to the RelatedUpdatedAt field.
func (o *Variation) SetRelatedUpdatedAt(v time.Time) {
	o.RelatedUpdatedAt = &v
}

// GetPriceCalculationId returns the PriceCalculationId field value if set, zero value otherwise.
func (o *Variation) GetPriceCalculationId() int32 {
	if o == nil || o.PriceCalculationId == nil {
		var ret int32
		return ret
	}
	return *o.PriceCalculationId
}

// GetPriceCalculationIdOk returns a tuple with the PriceCalculationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetPriceCalculationIdOk() (*int32, bool) {
	if o == nil || o.PriceCalculationId == nil {
		return nil, false
	}
	return o.PriceCalculationId, true
}

// HasPriceCalculationId returns a boolean if a field has been set.
func (o *Variation) HasPriceCalculationId() bool {
	if o != nil && o.PriceCalculationId != nil {
		return true
	}

	return false
}

// SetPriceCalculationId gets a reference to the given int32 and assigns it to the PriceCalculationId field.
func (o *Variation) SetPriceCalculationId(v int32) {
	o.PriceCalculationId = &v
}

// GetPriceCalculationUUID returns the PriceCalculationUUID field value if set, zero value otherwise.
func (o *Variation) GetPriceCalculationUUID() string {
	if o == nil || o.PriceCalculationUUID == nil {
		var ret string
		return ret
	}
	return *o.PriceCalculationUUID
}

// GetPriceCalculationUUIDOk returns a tuple with the PriceCalculationUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetPriceCalculationUUIDOk() (*string, bool) {
	if o == nil || o.PriceCalculationUUID == nil {
		return nil, false
	}
	return o.PriceCalculationUUID, true
}

// HasPriceCalculationUUID returns a boolean if a field has been set.
func (o *Variation) HasPriceCalculationUUID() bool {
	if o != nil && o.PriceCalculationUUID != nil {
		return true
	}

	return false
}

// SetPriceCalculationUUID gets a reference to the given string and assigns it to the PriceCalculationUUID field.
func (o *Variation) SetPriceCalculationUUID(v string) {
	o.PriceCalculationUUID = &v
}

// GetPicking returns the Picking field value if set, zero value otherwise.
func (o *Variation) GetPicking() string {
	if o == nil || o.Picking == nil {
		var ret string
		return ret
	}
	return *o.Picking
}

// GetPickingOk returns a tuple with the Picking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetPickingOk() (*string, bool) {
	if o == nil || o.Picking == nil {
		return nil, false
	}
	return o.Picking, true
}

// HasPicking returns a boolean if a field has been set.
func (o *Variation) HasPicking() bool {
	if o != nil && o.Picking != nil {
		return true
	}

	return false
}

// SetPicking gets a reference to the given string and assigns it to the Picking field.
func (o *Variation) SetPicking(v string) {
	o.Picking = &v
}

// GetStockLimitation returns the StockLimitation field value if set, zero value otherwise.
func (o *Variation) GetStockLimitation() int32 {
	if o == nil || o.StockLimitation == nil {
		var ret int32
		return ret
	}
	return *o.StockLimitation
}

// GetStockLimitationOk returns a tuple with the StockLimitation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetStockLimitationOk() (*int32, bool) {
	if o == nil || o.StockLimitation == nil {
		return nil, false
	}
	return o.StockLimitation, true
}

// HasStockLimitation returns a boolean if a field has been set.
func (o *Variation) HasStockLimitation() bool {
	if o != nil && o.StockLimitation != nil {
		return true
	}

	return false
}

// SetStockLimitation gets a reference to the given int32 and assigns it to the StockLimitation field.
func (o *Variation) SetStockLimitation(v int32) {
	o.StockLimitation = &v
}

// GetIsVisibleIfNetStockIsPositive returns the IsVisibleIfNetStockIsPositive field value if set, zero value otherwise.
func (o *Variation) GetIsVisibleIfNetStockIsPositive() bool {
	if o == nil || o.IsVisibleIfNetStockIsPositive == nil {
		var ret bool
		return ret
	}
	return *o.IsVisibleIfNetStockIsPositive
}

// GetIsVisibleIfNetStockIsPositiveOk returns a tuple with the IsVisibleIfNetStockIsPositive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetIsVisibleIfNetStockIsPositiveOk() (*bool, bool) {
	if o == nil || o.IsVisibleIfNetStockIsPositive == nil {
		return nil, false
	}
	return o.IsVisibleIfNetStockIsPositive, true
}

// HasIsVisibleIfNetStockIsPositive returns a boolean if a field has been set.
func (o *Variation) HasIsVisibleIfNetStockIsPositive() bool {
	if o != nil && o.IsVisibleIfNetStockIsPositive != nil {
		return true
	}

	return false
}

// SetIsVisibleIfNetStockIsPositive gets a reference to the given bool and assigns it to the IsVisibleIfNetStockIsPositive field.
func (o *Variation) SetIsVisibleIfNetStockIsPositive(v bool) {
	o.IsVisibleIfNetStockIsPositive = &v
}

// GetIsInvisibleIfNetStockIsNotPositive returns the IsInvisibleIfNetStockIsNotPositive field value if set, zero value otherwise.
func (o *Variation) GetIsInvisibleIfNetStockIsNotPositive() bool {
	if o == nil || o.IsInvisibleIfNetStockIsNotPositive == nil {
		var ret bool
		return ret
	}
	return *o.IsInvisibleIfNetStockIsNotPositive
}

// GetIsInvisibleIfNetStockIsNotPositiveOk returns a tuple with the IsInvisibleIfNetStockIsNotPositive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetIsInvisibleIfNetStockIsNotPositiveOk() (*bool, bool) {
	if o == nil || o.IsInvisibleIfNetStockIsNotPositive == nil {
		return nil, false
	}
	return o.IsInvisibleIfNetStockIsNotPositive, true
}

// HasIsInvisibleIfNetStockIsNotPositive returns a boolean if a field has been set.
func (o *Variation) HasIsInvisibleIfNetStockIsNotPositive() bool {
	if o != nil && o.IsInvisibleIfNetStockIsNotPositive != nil {
		return true
	}

	return false
}

// SetIsInvisibleIfNetStockIsNotPositive gets a reference to the given bool and assigns it to the IsInvisibleIfNetStockIsNotPositive field.
func (o *Variation) SetIsInvisibleIfNetStockIsNotPositive(v bool) {
	o.IsInvisibleIfNetStockIsNotPositive = &v
}

// GetIsAvailableIfNetStockIsPositive returns the IsAvailableIfNetStockIsPositive field value if set, zero value otherwise.
func (o *Variation) GetIsAvailableIfNetStockIsPositive() bool {
	if o == nil || o.IsAvailableIfNetStockIsPositive == nil {
		var ret bool
		return ret
	}
	return *o.IsAvailableIfNetStockIsPositive
}

// GetIsAvailableIfNetStockIsPositiveOk returns a tuple with the IsAvailableIfNetStockIsPositive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetIsAvailableIfNetStockIsPositiveOk() (*bool, bool) {
	if o == nil || o.IsAvailableIfNetStockIsPositive == nil {
		return nil, false
	}
	return o.IsAvailableIfNetStockIsPositive, true
}

// HasIsAvailableIfNetStockIsPositive returns a boolean if a field has been set.
func (o *Variation) HasIsAvailableIfNetStockIsPositive() bool {
	if o != nil && o.IsAvailableIfNetStockIsPositive != nil {
		return true
	}

	return false
}

// SetIsAvailableIfNetStockIsPositive gets a reference to the given bool and assigns it to the IsAvailableIfNetStockIsPositive field.
func (o *Variation) SetIsAvailableIfNetStockIsPositive(v bool) {
	o.IsAvailableIfNetStockIsPositive = &v
}

// GetIsUnavailableIfNetStockIsNotPositive returns the IsUnavailableIfNetStockIsNotPositive field value if set, zero value otherwise.
func (o *Variation) GetIsUnavailableIfNetStockIsNotPositive() bool {
	if o == nil || o.IsUnavailableIfNetStockIsNotPositive == nil {
		var ret bool
		return ret
	}
	return *o.IsUnavailableIfNetStockIsNotPositive
}

// GetIsUnavailableIfNetStockIsNotPositiveOk returns a tuple with the IsUnavailableIfNetStockIsNotPositive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetIsUnavailableIfNetStockIsNotPositiveOk() (*bool, bool) {
	if o == nil || o.IsUnavailableIfNetStockIsNotPositive == nil {
		return nil, false
	}
	return o.IsUnavailableIfNetStockIsNotPositive, true
}

// HasIsUnavailableIfNetStockIsNotPositive returns a boolean if a field has been set.
func (o *Variation) HasIsUnavailableIfNetStockIsNotPositive() bool {
	if o != nil && o.IsUnavailableIfNetStockIsNotPositive != nil {
		return true
	}

	return false
}

// SetIsUnavailableIfNetStockIsNotPositive gets a reference to the given bool and assigns it to the IsUnavailableIfNetStockIsNotPositive field.
func (o *Variation) SetIsUnavailableIfNetStockIsNotPositive(v bool) {
	o.IsUnavailableIfNetStockIsNotPositive = &v
}

// GetMainWarehouseId returns the MainWarehouseId field value if set, zero value otherwise.
func (o *Variation) GetMainWarehouseId() int32 {
	if o == nil || o.MainWarehouseId == nil {
		var ret int32
		return ret
	}
	return *o.MainWarehouseId
}

// GetMainWarehouseIdOk returns a tuple with the MainWarehouseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetMainWarehouseIdOk() (*int32, bool) {
	if o == nil || o.MainWarehouseId == nil {
		return nil, false
	}
	return o.MainWarehouseId, true
}

// HasMainWarehouseId returns a boolean if a field has been set.
func (o *Variation) HasMainWarehouseId() bool {
	if o != nil && o.MainWarehouseId != nil {
		return true
	}

	return false
}

// SetMainWarehouseId gets a reference to the given int32 and assigns it to the MainWarehouseId field.
func (o *Variation) SetMainWarehouseId(v int32) {
	o.MainWarehouseId = &v
}

// GetMaximumOrderQuantity returns the MaximumOrderQuantity field value if set, zero value otherwise.
func (o *Variation) GetMaximumOrderQuantity() float32 {
	if o == nil || o.MaximumOrderQuantity == nil {
		var ret float32
		return ret
	}
	return *o.MaximumOrderQuantity
}

// GetMaximumOrderQuantityOk returns a tuple with the MaximumOrderQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetMaximumOrderQuantityOk() (*float32, bool) {
	if o == nil || o.MaximumOrderQuantity == nil {
		return nil, false
	}
	return o.MaximumOrderQuantity, true
}

// HasMaximumOrderQuantity returns a boolean if a field has been set.
func (o *Variation) HasMaximumOrderQuantity() bool {
	if o != nil && o.MaximumOrderQuantity != nil {
		return true
	}

	return false
}

// SetMaximumOrderQuantity gets a reference to the given float32 and assigns it to the MaximumOrderQuantity field.
func (o *Variation) SetMaximumOrderQuantity(v float32) {
	o.MaximumOrderQuantity = &v
}

// GetMinimumOrderQuantity returns the MinimumOrderQuantity field value if set, zero value otherwise.
func (o *Variation) GetMinimumOrderQuantity() float32 {
	if o == nil || o.MinimumOrderQuantity == nil {
		var ret float32
		return ret
	}
	return *o.MinimumOrderQuantity
}

// GetMinimumOrderQuantityOk returns a tuple with the MinimumOrderQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetMinimumOrderQuantityOk() (*float32, bool) {
	if o == nil || o.MinimumOrderQuantity == nil {
		return nil, false
	}
	return o.MinimumOrderQuantity, true
}

// HasMinimumOrderQuantity returns a boolean if a field has been set.
func (o *Variation) HasMinimumOrderQuantity() bool {
	if o != nil && o.MinimumOrderQuantity != nil {
		return true
	}

	return false
}

// SetMinimumOrderQuantity gets a reference to the given float32 and assigns it to the MinimumOrderQuantity field.
func (o *Variation) SetMinimumOrderQuantity(v float32) {
	o.MinimumOrderQuantity = &v
}

// GetIntervalOrderQuantity returns the IntervalOrderQuantity field value if set, zero value otherwise.
func (o *Variation) GetIntervalOrderQuantity() float32 {
	if o == nil || o.IntervalOrderQuantity == nil {
		var ret float32
		return ret
	}
	return *o.IntervalOrderQuantity
}

// GetIntervalOrderQuantityOk returns a tuple with the IntervalOrderQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetIntervalOrderQuantityOk() (*float32, bool) {
	if o == nil || o.IntervalOrderQuantity == nil {
		return nil, false
	}
	return o.IntervalOrderQuantity, true
}

// HasIntervalOrderQuantity returns a boolean if a field has been set.
func (o *Variation) HasIntervalOrderQuantity() bool {
	if o != nil && o.IntervalOrderQuantity != nil {
		return true
	}

	return false
}

// SetIntervalOrderQuantity gets a reference to the given float32 and assigns it to the IntervalOrderQuantity field.
func (o *Variation) SetIntervalOrderQuantity(v float32) {
	o.IntervalOrderQuantity = &v
}

// GetAvailableUntil returns the AvailableUntil field value if set, zero value otherwise.
func (o *Variation) GetAvailableUntil() string {
	if o == nil || o.AvailableUntil == nil {
		var ret string
		return ret
	}
	return *o.AvailableUntil
}

// GetAvailableUntilOk returns a tuple with the AvailableUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetAvailableUntilOk() (*string, bool) {
	if o == nil || o.AvailableUntil == nil {
		return nil, false
	}
	return o.AvailableUntil, true
}

// HasAvailableUntil returns a boolean if a field has been set.
func (o *Variation) HasAvailableUntil() bool {
	if o != nil && o.AvailableUntil != nil {
		return true
	}

	return false
}

// SetAvailableUntil gets a reference to the given string and assigns it to the AvailableUntil field.
func (o *Variation) SetAvailableUntil(v string) {
	o.AvailableUntil = &v
}

// GetReleasedAt returns the ReleasedAt field value if set, zero value otherwise.
func (o *Variation) GetReleasedAt() time.Time {
	if o == nil || o.ReleasedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ReleasedAt
}

// GetReleasedAtOk returns a tuple with the ReleasedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetReleasedAtOk() (*time.Time, bool) {
	if o == nil || o.ReleasedAt == nil {
		return nil, false
	}
	return o.ReleasedAt, true
}

// HasReleasedAt returns a boolean if a field has been set.
func (o *Variation) HasReleasedAt() bool {
	if o != nil && o.ReleasedAt != nil {
		return true
	}

	return false
}

// SetReleasedAt gets a reference to the given time.Time and assigns it to the ReleasedAt field.
func (o *Variation) SetReleasedAt(v time.Time) {
	o.ReleasedAt = &v
}

// GetUnitCombinationId returns the UnitCombinationId field value if set, zero value otherwise.
func (o *Variation) GetUnitCombinationId() float32 {
	if o == nil || o.UnitCombinationId == nil {
		var ret float32
		return ret
	}
	return *o.UnitCombinationId
}

// GetUnitCombinationIdOk returns a tuple with the UnitCombinationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetUnitCombinationIdOk() (*float32, bool) {
	if o == nil || o.UnitCombinationId == nil {
		return nil, false
	}
	return o.UnitCombinationId, true
}

// HasUnitCombinationId returns a boolean if a field has been set.
func (o *Variation) HasUnitCombinationId() bool {
	if o != nil && o.UnitCombinationId != nil {
		return true
	}

	return false
}

// SetUnitCombinationId gets a reference to the given float32 and assigns it to the UnitCombinationId field.
func (o *Variation) SetUnitCombinationId(v float32) {
	o.UnitCombinationId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Variation) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Variation) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Variation) SetName(v string) {
	o.Name = &v
}

// GetWeightG returns the WeightG field value if set, zero value otherwise.
func (o *Variation) GetWeightG() int32 {
	if o == nil || o.WeightG == nil {
		var ret int32
		return ret
	}
	return *o.WeightG
}

// GetWeightGOk returns a tuple with the WeightG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetWeightGOk() (*int32, bool) {
	if o == nil || o.WeightG == nil {
		return nil, false
	}
	return o.WeightG, true
}

// HasWeightG returns a boolean if a field has been set.
func (o *Variation) HasWeightG() bool {
	if o != nil && o.WeightG != nil {
		return true
	}

	return false
}

// SetWeightG gets a reference to the given int32 and assigns it to the WeightG field.
func (o *Variation) SetWeightG(v int32) {
	o.WeightG = &v
}

// GetWeightNetG returns the WeightNetG field value if set, zero value otherwise.
func (o *Variation) GetWeightNetG() int32 {
	if o == nil || o.WeightNetG == nil {
		var ret int32
		return ret
	}
	return *o.WeightNetG
}

// GetWeightNetGOk returns a tuple with the WeightNetG field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetWeightNetGOk() (*int32, bool) {
	if o == nil || o.WeightNetG == nil {
		return nil, false
	}
	return o.WeightNetG, true
}

// HasWeightNetG returns a boolean if a field has been set.
func (o *Variation) HasWeightNetG() bool {
	if o != nil && o.WeightNetG != nil {
		return true
	}

	return false
}

// SetWeightNetG gets a reference to the given int32 and assigns it to the WeightNetG field.
func (o *Variation) SetWeightNetG(v int32) {
	o.WeightNetG = &v
}

// GetWidthMM returns the WidthMM field value if set, zero value otherwise.
func (o *Variation) GetWidthMM() int32 {
	if o == nil || o.WidthMM == nil {
		var ret int32
		return ret
	}
	return *o.WidthMM
}

// GetWidthMMOk returns a tuple with the WidthMM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetWidthMMOk() (*int32, bool) {
	if o == nil || o.WidthMM == nil {
		return nil, false
	}
	return o.WidthMM, true
}

// HasWidthMM returns a boolean if a field has been set.
func (o *Variation) HasWidthMM() bool {
	if o != nil && o.WidthMM != nil {
		return true
	}

	return false
}

// SetWidthMM gets a reference to the given int32 and assigns it to the WidthMM field.
func (o *Variation) SetWidthMM(v int32) {
	o.WidthMM = &v
}

// GetLengthMM returns the LengthMM field value if set, zero value otherwise.
func (o *Variation) GetLengthMM() int32 {
	if o == nil || o.LengthMM == nil {
		var ret int32
		return ret
	}
	return *o.LengthMM
}

// GetLengthMMOk returns a tuple with the LengthMM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetLengthMMOk() (*int32, bool) {
	if o == nil || o.LengthMM == nil {
		return nil, false
	}
	return o.LengthMM, true
}

// HasLengthMM returns a boolean if a field has been set.
func (o *Variation) HasLengthMM() bool {
	if o != nil && o.LengthMM != nil {
		return true
	}

	return false
}

// SetLengthMM gets a reference to the given int32 and assigns it to the LengthMM field.
func (o *Variation) SetLengthMM(v int32) {
	o.LengthMM = &v
}

// GetHeightMM returns the HeightMM field value if set, zero value otherwise.
func (o *Variation) GetHeightMM() int32 {
	if o == nil || o.HeightMM == nil {
		var ret int32
		return ret
	}
	return *o.HeightMM
}

// GetHeightMMOk returns a tuple with the HeightMM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetHeightMMOk() (*int32, bool) {
	if o == nil || o.HeightMM == nil {
		return nil, false
	}
	return o.HeightMM, true
}

// HasHeightMM returns a boolean if a field has been set.
func (o *Variation) HasHeightMM() bool {
	if o != nil && o.HeightMM != nil {
		return true
	}

	return false
}

// SetHeightMM gets a reference to the given int32 and assigns it to the HeightMM field.
func (o *Variation) SetHeightMM(v int32) {
	o.HeightMM = &v
}

// GetExtraShippingCharge1 returns the ExtraShippingCharge1 field value if set, zero value otherwise.
func (o *Variation) GetExtraShippingCharge1() float32 {
	if o == nil || o.ExtraShippingCharge1 == nil {
		var ret float32
		return ret
	}
	return *o.ExtraShippingCharge1
}

// GetExtraShippingCharge1Ok returns a tuple with the ExtraShippingCharge1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetExtraShippingCharge1Ok() (*float32, bool) {
	if o == nil || o.ExtraShippingCharge1 == nil {
		return nil, false
	}
	return o.ExtraShippingCharge1, true
}

// HasExtraShippingCharge1 returns a boolean if a field has been set.
func (o *Variation) HasExtraShippingCharge1() bool {
	if o != nil && o.ExtraShippingCharge1 != nil {
		return true
	}

	return false
}

// SetExtraShippingCharge1 gets a reference to the given float32 and assigns it to the ExtraShippingCharge1 field.
func (o *Variation) SetExtraShippingCharge1(v float32) {
	o.ExtraShippingCharge1 = &v
}

// GetExtraShippingCharge2 returns the ExtraShippingCharge2 field value if set, zero value otherwise.
func (o *Variation) GetExtraShippingCharge2() float32 {
	if o == nil || o.ExtraShippingCharge2 == nil {
		var ret float32
		return ret
	}
	return *o.ExtraShippingCharge2
}

// GetExtraShippingCharge2Ok returns a tuple with the ExtraShippingCharge2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetExtraShippingCharge2Ok() (*float32, bool) {
	if o == nil || o.ExtraShippingCharge2 == nil {
		return nil, false
	}
	return o.ExtraShippingCharge2, true
}

// HasExtraShippingCharge2 returns a boolean if a field has been set.
func (o *Variation) HasExtraShippingCharge2() bool {
	if o != nil && o.ExtraShippingCharge2 != nil {
		return true
	}

	return false
}

// SetExtraShippingCharge2 gets a reference to the given float32 and assigns it to the ExtraShippingCharge2 field.
func (o *Variation) SetExtraShippingCharge2(v float32) {
	o.ExtraShippingCharge2 = &v
}

// GetUnitsContained returns the UnitsContained field value if set, zero value otherwise.
func (o *Variation) GetUnitsContained() float32 {
	if o == nil || o.UnitsContained == nil {
		var ret float32
		return ret
	}
	return *o.UnitsContained
}

// GetUnitsContainedOk returns a tuple with the UnitsContained field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetUnitsContainedOk() (*float32, bool) {
	if o == nil || o.UnitsContained == nil {
		return nil, false
	}
	return o.UnitsContained, true
}

// HasUnitsContained returns a boolean if a field has been set.
func (o *Variation) HasUnitsContained() bool {
	if o != nil && o.UnitsContained != nil {
		return true
	}

	return false
}

// SetUnitsContained gets a reference to the given float32 and assigns it to the UnitsContained field.
func (o *Variation) SetUnitsContained(v float32) {
	o.UnitsContained = &v
}

// GetPalletTypeId returns the PalletTypeId field value if set, zero value otherwise.
func (o *Variation) GetPalletTypeId() int32 {
	if o == nil || o.PalletTypeId == nil {
		var ret int32
		return ret
	}
	return *o.PalletTypeId
}

// GetPalletTypeIdOk returns a tuple with the PalletTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetPalletTypeIdOk() (*int32, bool) {
	if o == nil || o.PalletTypeId == nil {
		return nil, false
	}
	return o.PalletTypeId, true
}

// HasPalletTypeId returns a boolean if a field has been set.
func (o *Variation) HasPalletTypeId() bool {
	if o != nil && o.PalletTypeId != nil {
		return true
	}

	return false
}

// SetPalletTypeId gets a reference to the given int32 and assigns it to the PalletTypeId field.
func (o *Variation) SetPalletTypeId(v int32) {
	o.PalletTypeId = &v
}

// GetPackingUnits returns the PackingUnits field value if set, zero value otherwise.
func (o *Variation) GetPackingUnits() float32 {
	if o == nil || o.PackingUnits == nil {
		var ret float32
		return ret
	}
	return *o.PackingUnits
}

// GetPackingUnitsOk returns a tuple with the PackingUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetPackingUnitsOk() (*float32, bool) {
	if o == nil || o.PackingUnits == nil {
		return nil, false
	}
	return o.PackingUnits, true
}

// HasPackingUnits returns a boolean if a field has been set.
func (o *Variation) HasPackingUnits() bool {
	if o != nil && o.PackingUnits != nil {
		return true
	}

	return false
}

// SetPackingUnits gets a reference to the given float32 and assigns it to the PackingUnits field.
func (o *Variation) SetPackingUnits(v float32) {
	o.PackingUnits = &v
}

// GetPackingUnitTypeId returns the PackingUnitTypeId field value if set, zero value otherwise.
func (o *Variation) GetPackingUnitTypeId() int32 {
	if o == nil || o.PackingUnitTypeId == nil {
		var ret int32
		return ret
	}
	return *o.PackingUnitTypeId
}

// GetPackingUnitTypeIdOk returns a tuple with the PackingUnitTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetPackingUnitTypeIdOk() (*int32, bool) {
	if o == nil || o.PackingUnitTypeId == nil {
		return nil, false
	}
	return o.PackingUnitTypeId, true
}

// HasPackingUnitTypeId returns a boolean if a field has been set.
func (o *Variation) HasPackingUnitTypeId() bool {
	if o != nil && o.PackingUnitTypeId != nil {
		return true
	}

	return false
}

// SetPackingUnitTypeId gets a reference to the given int32 and assigns it to the PackingUnitTypeId field.
func (o *Variation) SetPackingUnitTypeId(v int32) {
	o.PackingUnitTypeId = &v
}

// GetTransportationCosts returns the TransportationCosts field value if set, zero value otherwise.
func (o *Variation) GetTransportationCosts() float32 {
	if o == nil || o.TransportationCosts == nil {
		var ret float32
		return ret
	}
	return *o.TransportationCosts
}

// GetTransportationCostsOk returns a tuple with the TransportationCosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetTransportationCostsOk() (*float32, bool) {
	if o == nil || o.TransportationCosts == nil {
		return nil, false
	}
	return o.TransportationCosts, true
}

// HasTransportationCosts returns a boolean if a field has been set.
func (o *Variation) HasTransportationCosts() bool {
	if o != nil && o.TransportationCosts != nil {
		return true
	}

	return false
}

// SetTransportationCosts gets a reference to the given float32 and assigns it to the TransportationCosts field.
func (o *Variation) SetTransportationCosts(v float32) {
	o.TransportationCosts = &v
}

// GetStorageCosts returns the StorageCosts field value if set, zero value otherwise.
func (o *Variation) GetStorageCosts() float32 {
	if o == nil || o.StorageCosts == nil {
		var ret float32
		return ret
	}
	return *o.StorageCosts
}

// GetStorageCostsOk returns a tuple with the StorageCosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetStorageCostsOk() (*float32, bool) {
	if o == nil || o.StorageCosts == nil {
		return nil, false
	}
	return o.StorageCosts, true
}

// HasStorageCosts returns a boolean if a field has been set.
func (o *Variation) HasStorageCosts() bool {
	if o != nil && o.StorageCosts != nil {
		return true
	}

	return false
}

// SetStorageCosts gets a reference to the given float32 and assigns it to the StorageCosts field.
func (o *Variation) SetStorageCosts(v float32) {
	o.StorageCosts = &v
}

// GetOperatingCosts returns the OperatingCosts field value if set, zero value otherwise.
func (o *Variation) GetOperatingCosts() float32 {
	if o == nil || o.OperatingCosts == nil {
		var ret float32
		return ret
	}
	return *o.OperatingCosts
}

// GetOperatingCostsOk returns a tuple with the OperatingCosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetOperatingCostsOk() (*float32, bool) {
	if o == nil || o.OperatingCosts == nil {
		return nil, false
	}
	return o.OperatingCosts, true
}

// HasOperatingCosts returns a boolean if a field has been set.
func (o *Variation) HasOperatingCosts() bool {
	if o != nil && o.OperatingCosts != nil {
		return true
	}

	return false
}

// SetOperatingCosts gets a reference to the given float32 and assigns it to the OperatingCosts field.
func (o *Variation) SetOperatingCosts(v float32) {
	o.OperatingCosts = &v
}

// GetVatId returns the VatId field value if set, zero value otherwise.
func (o *Variation) GetVatId() int32 {
	if o == nil || o.VatId == nil {
		var ret int32
		return ret
	}
	return *o.VatId
}

// GetVatIdOk returns a tuple with the VatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetVatIdOk() (*int32, bool) {
	if o == nil || o.VatId == nil {
		return nil, false
	}
	return o.VatId, true
}

// HasVatId returns a boolean if a field has been set.
func (o *Variation) HasVatId() bool {
	if o != nil && o.VatId != nil {
		return true
	}

	return false
}

// SetVatId gets a reference to the given int32 and assigns it to the VatId field.
func (o *Variation) SetVatId(v int32) {
	o.VatId = &v
}

// GetAutomaticClientVisibility returns the AutomaticClientVisibility field value if set, zero value otherwise.
func (o *Variation) GetAutomaticClientVisibility() int32 {
	if o == nil || o.AutomaticClientVisibility == nil {
		var ret int32
		return ret
	}
	return *o.AutomaticClientVisibility
}

// GetAutomaticClientVisibilityOk returns a tuple with the AutomaticClientVisibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetAutomaticClientVisibilityOk() (*int32, bool) {
	if o == nil || o.AutomaticClientVisibility == nil {
		return nil, false
	}
	return o.AutomaticClientVisibility, true
}

// HasAutomaticClientVisibility returns a boolean if a field has been set.
func (o *Variation) HasAutomaticClientVisibility() bool {
	if o != nil && o.AutomaticClientVisibility != nil {
		return true
	}

	return false
}

// SetAutomaticClientVisibility gets a reference to the given int32 and assigns it to the AutomaticClientVisibility field.
func (o *Variation) SetAutomaticClientVisibility(v int32) {
	o.AutomaticClientVisibility = &v
}

// GetIsHiddenInCategoryList returns the IsHiddenInCategoryList field value if set, zero value otherwise.
func (o *Variation) GetIsHiddenInCategoryList() bool {
	if o == nil || o.IsHiddenInCategoryList == nil {
		var ret bool
		return ret
	}
	return *o.IsHiddenInCategoryList
}

// GetIsHiddenInCategoryListOk returns a tuple with the IsHiddenInCategoryList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetIsHiddenInCategoryListOk() (*bool, bool) {
	if o == nil || o.IsHiddenInCategoryList == nil {
		return nil, false
	}
	return o.IsHiddenInCategoryList, true
}

// HasIsHiddenInCategoryList returns a boolean if a field has been set.
func (o *Variation) HasIsHiddenInCategoryList() bool {
	if o != nil && o.IsHiddenInCategoryList != nil {
		return true
	}

	return false
}

// SetIsHiddenInCategoryList gets a reference to the given bool and assigns it to the IsHiddenInCategoryList field.
func (o *Variation) SetIsHiddenInCategoryList(v bool) {
	o.IsHiddenInCategoryList = &v
}

// GetDefaultShippingCosts returns the DefaultShippingCosts field value if set, zero value otherwise.
func (o *Variation) GetDefaultShippingCosts() float32 {
	if o == nil || o.DefaultShippingCosts == nil {
		var ret float32
		return ret
	}
	return *o.DefaultShippingCosts
}

// GetDefaultShippingCostsOk returns a tuple with the DefaultShippingCosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetDefaultShippingCostsOk() (*float32, bool) {
	if o == nil || o.DefaultShippingCosts == nil {
		return nil, false
	}
	return o.DefaultShippingCosts, true
}

// HasDefaultShippingCosts returns a boolean if a field has been set.
func (o *Variation) HasDefaultShippingCosts() bool {
	if o != nil && o.DefaultShippingCosts != nil {
		return true
	}

	return false
}

// SetDefaultShippingCosts gets a reference to the given float32 and assigns it to the DefaultShippingCosts field.
func (o *Variation) SetDefaultShippingCosts(v float32) {
	o.DefaultShippingCosts = &v
}

// GetMayShowUnitPrice returns the MayShowUnitPrice field value if set, zero value otherwise.
func (o *Variation) GetMayShowUnitPrice() bool {
	if o == nil || o.MayShowUnitPrice == nil {
		var ret bool
		return ret
	}
	return *o.MayShowUnitPrice
}

// GetMayShowUnitPriceOk returns a tuple with the MayShowUnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetMayShowUnitPriceOk() (*bool, bool) {
	if o == nil || o.MayShowUnitPrice == nil {
		return nil, false
	}
	return o.MayShowUnitPrice, true
}

// HasMayShowUnitPrice returns a boolean if a field has been set.
func (o *Variation) HasMayShowUnitPrice() bool {
	if o != nil && o.MayShowUnitPrice != nil {
		return true
	}

	return false
}

// SetMayShowUnitPrice gets a reference to the given bool and assigns it to the MayShowUnitPrice field.
func (o *Variation) SetMayShowUnitPrice(v bool) {
	o.MayShowUnitPrice = &v
}

// GetMovingAveragePrice returns the MovingAveragePrice field value if set, zero value otherwise.
func (o *Variation) GetMovingAveragePrice() float32 {
	if o == nil || o.MovingAveragePrice == nil {
		var ret float32
		return ret
	}
	return *o.MovingAveragePrice
}

// GetMovingAveragePriceOk returns a tuple with the MovingAveragePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetMovingAveragePriceOk() (*float32, bool) {
	if o == nil || o.MovingAveragePrice == nil {
		return nil, false
	}
	return o.MovingAveragePrice, true
}

// HasMovingAveragePrice returns a boolean if a field has been set.
func (o *Variation) HasMovingAveragePrice() bool {
	if o != nil && o.MovingAveragePrice != nil {
		return true
	}

	return false
}

// SetMovingAveragePrice gets a reference to the given float32 and assigns it to the MovingAveragePrice field.
func (o *Variation) SetMovingAveragePrice(v float32) {
	o.MovingAveragePrice = &v
}

// GetPropertyVariationId returns the PropertyVariationId field value if set, zero value otherwise.
func (o *Variation) GetPropertyVariationId() int32 {
	if o == nil || o.PropertyVariationId == nil {
		var ret int32
		return ret
	}
	return *o.PropertyVariationId
}

// GetPropertyVariationIdOk returns a tuple with the PropertyVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetPropertyVariationIdOk() (*int32, bool) {
	if o == nil || o.PropertyVariationId == nil {
		return nil, false
	}
	return o.PropertyVariationId, true
}

// HasPropertyVariationId returns a boolean if a field has been set.
func (o *Variation) HasPropertyVariationId() bool {
	if o != nil && o.PropertyVariationId != nil {
		return true
	}

	return false
}

// SetPropertyVariationId gets a reference to the given int32 and assigns it to the PropertyVariationId field.
func (o *Variation) SetPropertyVariationId(v int32) {
	o.PropertyVariationId = &v
}

// GetAutomaticListVisibility returns the AutomaticListVisibility field value if set, zero value otherwise.
func (o *Variation) GetAutomaticListVisibility() int32 {
	if o == nil || o.AutomaticListVisibility == nil {
		var ret int32
		return ret
	}
	return *o.AutomaticListVisibility
}

// GetAutomaticListVisibilityOk returns a tuple with the AutomaticListVisibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetAutomaticListVisibilityOk() (*int32, bool) {
	if o == nil || o.AutomaticListVisibility == nil {
		return nil, false
	}
	return o.AutomaticListVisibility, true
}

// HasAutomaticListVisibility returns a boolean if a field has been set.
func (o *Variation) HasAutomaticListVisibility() bool {
	if o != nil && o.AutomaticListVisibility != nil {
		return true
	}

	return false
}

// SetAutomaticListVisibility gets a reference to the given int32 and assigns it to the AutomaticListVisibility field.
func (o *Variation) SetAutomaticListVisibility(v int32) {
	o.AutomaticListVisibility = &v
}

// GetIsVisibleInListIfNetStockIsPositive returns the IsVisibleInListIfNetStockIsPositive field value if set, zero value otherwise.
func (o *Variation) GetIsVisibleInListIfNetStockIsPositive() bool {
	if o == nil || o.IsVisibleInListIfNetStockIsPositive == nil {
		var ret bool
		return ret
	}
	return *o.IsVisibleInListIfNetStockIsPositive
}

// GetIsVisibleInListIfNetStockIsPositiveOk returns a tuple with the IsVisibleInListIfNetStockIsPositive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetIsVisibleInListIfNetStockIsPositiveOk() (*bool, bool) {
	if o == nil || o.IsVisibleInListIfNetStockIsPositive == nil {
		return nil, false
	}
	return o.IsVisibleInListIfNetStockIsPositive, true
}

// HasIsVisibleInListIfNetStockIsPositive returns a boolean if a field has been set.
func (o *Variation) HasIsVisibleInListIfNetStockIsPositive() bool {
	if o != nil && o.IsVisibleInListIfNetStockIsPositive != nil {
		return true
	}

	return false
}

// SetIsVisibleInListIfNetStockIsPositive gets a reference to the given bool and assigns it to the IsVisibleInListIfNetStockIsPositive field.
func (o *Variation) SetIsVisibleInListIfNetStockIsPositive(v bool) {
	o.IsVisibleInListIfNetStockIsPositive = &v
}

// GetIsInvisibleInListIfNetStockIsNotPositive returns the IsInvisibleInListIfNetStockIsNotPositive field value if set, zero value otherwise.
func (o *Variation) GetIsInvisibleInListIfNetStockIsNotPositive() bool {
	if o == nil || o.IsInvisibleInListIfNetStockIsNotPositive == nil {
		var ret bool
		return ret
	}
	return *o.IsInvisibleInListIfNetStockIsNotPositive
}

// GetIsInvisibleInListIfNetStockIsNotPositiveOk returns a tuple with the IsInvisibleInListIfNetStockIsNotPositive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetIsInvisibleInListIfNetStockIsNotPositiveOk() (*bool, bool) {
	if o == nil || o.IsInvisibleInListIfNetStockIsNotPositive == nil {
		return nil, false
	}
	return o.IsInvisibleInListIfNetStockIsNotPositive, true
}

// HasIsInvisibleInListIfNetStockIsNotPositive returns a boolean if a field has been set.
func (o *Variation) HasIsInvisibleInListIfNetStockIsNotPositive() bool {
	if o != nil && o.IsInvisibleInListIfNetStockIsNotPositive != nil {
		return true
	}

	return false
}

// SetIsInvisibleInListIfNetStockIsNotPositive gets a reference to the given bool and assigns it to the IsInvisibleInListIfNetStockIsNotPositive field.
func (o *Variation) SetIsInvisibleInListIfNetStockIsNotPositive(v bool) {
	o.IsInvisibleInListIfNetStockIsNotPositive = &v
}

// GetSingleItemCount returns the SingleItemCount field value if set, zero value otherwise.
func (o *Variation) GetSingleItemCount() int32 {
	if o == nil || o.SingleItemCount == nil {
		var ret int32
		return ret
	}
	return *o.SingleItemCount
}

// GetSingleItemCountOk returns a tuple with the SingleItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetSingleItemCountOk() (*int32, bool) {
	if o == nil || o.SingleItemCount == nil {
		return nil, false
	}
	return o.SingleItemCount, true
}

// HasSingleItemCount returns a boolean if a field has been set.
func (o *Variation) HasSingleItemCount() bool {
	if o != nil && o.SingleItemCount != nil {
		return true
	}

	return false
}

// SetSingleItemCount gets a reference to the given int32 and assigns it to the SingleItemCount field.
func (o *Variation) SetSingleItemCount(v int32) {
	o.SingleItemCount = &v
}

// GetAvailabilityUpdatedAt returns the AvailabilityUpdatedAt field value if set, zero value otherwise.
func (o *Variation) GetAvailabilityUpdatedAt() time.Time {
	if o == nil || o.AvailabilityUpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.AvailabilityUpdatedAt
}

// GetAvailabilityUpdatedAtOk returns a tuple with the AvailabilityUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetAvailabilityUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.AvailabilityUpdatedAt == nil {
		return nil, false
	}
	return o.AvailabilityUpdatedAt, true
}

// HasAvailabilityUpdatedAt returns a boolean if a field has been set.
func (o *Variation) HasAvailabilityUpdatedAt() bool {
	if o != nil && o.AvailabilityUpdatedAt != nil {
		return true
	}

	return false
}

// SetAvailabilityUpdatedAt gets a reference to the given time.Time and assigns it to the AvailabilityUpdatedAt field.
func (o *Variation) SetAvailabilityUpdatedAt(v time.Time) {
	o.AvailabilityUpdatedAt = &v
}

// GetTagVariationId returns the TagVariationId field value if set, zero value otherwise.
func (o *Variation) GetTagVariationId() string {
	if o == nil || o.TagVariationId == nil {
		var ret string
		return ret
	}
	return *o.TagVariationId
}

// GetTagVariationIdOk returns a tuple with the TagVariationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetTagVariationIdOk() (*string, bool) {
	if o == nil || o.TagVariationId == nil {
		return nil, false
	}
	return o.TagVariationId, true
}

// HasTagVariationId returns a boolean if a field has been set.
func (o *Variation) HasTagVariationId() bool {
	if o != nil && o.TagVariationId != nil {
		return true
	}

	return false
}

// SetTagVariationId gets a reference to the given string and assigns it to the TagVariationId field.
func (o *Variation) SetTagVariationId(v string) {
	o.TagVariationId = &v
}

// GetHasCalculatedBundleWeight returns the HasCalculatedBundleWeight field value if set, zero value otherwise.
func (o *Variation) GetHasCalculatedBundleWeight() bool {
	if o == nil || o.HasCalculatedBundleWeight == nil {
		var ret bool
		return ret
	}
	return *o.HasCalculatedBundleWeight
}

// GetHasCalculatedBundleWeightOk returns a tuple with the HasCalculatedBundleWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetHasCalculatedBundleWeightOk() (*bool, bool) {
	if o == nil || o.HasCalculatedBundleWeight == nil {
		return nil, false
	}
	return o.HasCalculatedBundleWeight, true
}

// HasHasCalculatedBundleWeight returns a boolean if a field has been set.
func (o *Variation) HasHasCalculatedBundleWeight() bool {
	if o != nil && o.HasCalculatedBundleWeight != nil {
		return true
	}

	return false
}

// SetHasCalculatedBundleWeight gets a reference to the given bool and assigns it to the HasCalculatedBundleWeight field.
func (o *Variation) SetHasCalculatedBundleWeight(v bool) {
	o.HasCalculatedBundleWeight = &v
}

// GetHasCalculatedBundleNetWeight returns the HasCalculatedBundleNetWeight field value if set, zero value otherwise.
func (o *Variation) GetHasCalculatedBundleNetWeight() bool {
	if o == nil || o.HasCalculatedBundleNetWeight == nil {
		var ret bool
		return ret
	}
	return *o.HasCalculatedBundleNetWeight
}

// GetHasCalculatedBundleNetWeightOk returns a tuple with the HasCalculatedBundleNetWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetHasCalculatedBundleNetWeightOk() (*bool, bool) {
	if o == nil || o.HasCalculatedBundleNetWeight == nil {
		return nil, false
	}
	return o.HasCalculatedBundleNetWeight, true
}

// HasHasCalculatedBundleNetWeight returns a boolean if a field has been set.
func (o *Variation) HasHasCalculatedBundleNetWeight() bool {
	if o != nil && o.HasCalculatedBundleNetWeight != nil {
		return true
	}

	return false
}

// SetHasCalculatedBundleNetWeight gets a reference to the given bool and assigns it to the HasCalculatedBundleNetWeight field.
func (o *Variation) SetHasCalculatedBundleNetWeight(v bool) {
	o.HasCalculatedBundleNetWeight = &v
}

// GetHasCalculatedBundlePurchasePrice returns the HasCalculatedBundlePurchasePrice field value if set, zero value otherwise.
func (o *Variation) GetHasCalculatedBundlePurchasePrice() bool {
	if o == nil || o.HasCalculatedBundlePurchasePrice == nil {
		var ret bool
		return ret
	}
	return *o.HasCalculatedBundlePurchasePrice
}

// GetHasCalculatedBundlePurchasePriceOk returns a tuple with the HasCalculatedBundlePurchasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetHasCalculatedBundlePurchasePriceOk() (*bool, bool) {
	if o == nil || o.HasCalculatedBundlePurchasePrice == nil {
		return nil, false
	}
	return o.HasCalculatedBundlePurchasePrice, true
}

// HasHasCalculatedBundlePurchasePrice returns a boolean if a field has been set.
func (o *Variation) HasHasCalculatedBundlePurchasePrice() bool {
	if o != nil && o.HasCalculatedBundlePurchasePrice != nil {
		return true
	}

	return false
}

// SetHasCalculatedBundlePurchasePrice gets a reference to the given bool and assigns it to the HasCalculatedBundlePurchasePrice field.
func (o *Variation) SetHasCalculatedBundlePurchasePrice(v bool) {
	o.HasCalculatedBundlePurchasePrice = &v
}

// GetHasCalculatedBundleMovingAveragePrice returns the HasCalculatedBundleMovingAveragePrice field value if set, zero value otherwise.
func (o *Variation) GetHasCalculatedBundleMovingAveragePrice() bool {
	if o == nil || o.HasCalculatedBundleMovingAveragePrice == nil {
		var ret bool
		return ret
	}
	return *o.HasCalculatedBundleMovingAveragePrice
}

// GetHasCalculatedBundleMovingAveragePriceOk returns a tuple with the HasCalculatedBundleMovingAveragePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetHasCalculatedBundleMovingAveragePriceOk() (*bool, bool) {
	if o == nil || o.HasCalculatedBundleMovingAveragePrice == nil {
		return nil, false
	}
	return o.HasCalculatedBundleMovingAveragePrice, true
}

// HasHasCalculatedBundleMovingAveragePrice returns a boolean if a field has been set.
func (o *Variation) HasHasCalculatedBundleMovingAveragePrice() bool {
	if o != nil && o.HasCalculatedBundleMovingAveragePrice != nil {
		return true
	}

	return false
}

// SetHasCalculatedBundleMovingAveragePrice gets a reference to the given bool and assigns it to the HasCalculatedBundleMovingAveragePrice field.
func (o *Variation) SetHasCalculatedBundleMovingAveragePrice(v bool) {
	o.HasCalculatedBundleMovingAveragePrice = &v
}

// GetCustomsTariffNumber returns the CustomsTariffNumber field value if set, zero value otherwise.
func (o *Variation) GetCustomsTariffNumber() string {
	if o == nil || o.CustomsTariffNumber == nil {
		var ret string
		return ret
	}
	return *o.CustomsTariffNumber
}

// GetCustomsTariffNumberOk returns a tuple with the CustomsTariffNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetCustomsTariffNumberOk() (*string, bool) {
	if o == nil || o.CustomsTariffNumber == nil {
		return nil, false
	}
	return o.CustomsTariffNumber, true
}

// HasCustomsTariffNumber returns a boolean if a field has been set.
func (o *Variation) HasCustomsTariffNumber() bool {
	if o != nil && o.CustomsTariffNumber != nil {
		return true
	}

	return false
}

// SetCustomsTariffNumber gets a reference to the given string and assigns it to the CustomsTariffNumber field.
func (o *Variation) SetCustomsTariffNumber(v string) {
	o.CustomsTariffNumber = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *Variation) GetProperties() []Property {
	if o == nil || o.Properties == nil {
		var ret []Property
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetPropertiesOk() (*[]Property, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *Variation) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []Property and assigns it to the Properties field.
func (o *Variation) SetProperties(v []Property) {
	o.Properties = &v
}

// GetVariationProperties returns the VariationProperties field value if set, zero value otherwise.
func (o *Variation) GetVariationProperties() []VariationProperty {
	if o == nil || o.VariationProperties == nil {
		var ret []VariationProperty
		return ret
	}
	return *o.VariationProperties
}

// GetVariationPropertiesOk returns a tuple with the VariationProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetVariationPropertiesOk() (*[]VariationProperty, bool) {
	if o == nil || o.VariationProperties == nil {
		return nil, false
	}
	return o.VariationProperties, true
}

// HasVariationProperties returns a boolean if a field has been set.
func (o *Variation) HasVariationProperties() bool {
	if o != nil && o.VariationProperties != nil {
		return true
	}

	return false
}

// SetVariationProperties gets a reference to the given []VariationProperty and assigns it to the VariationProperties field.
func (o *Variation) SetVariationProperties(v []VariationProperty) {
	o.VariationProperties = &v
}

// GetVariationBarcodes returns the VariationBarcodes field value if set, zero value otherwise.
func (o *Variation) GetVariationBarcodes() []VariationBarcode {
	if o == nil || o.VariationBarcodes == nil {
		var ret []VariationBarcode
		return ret
	}
	return *o.VariationBarcodes
}

// GetVariationBarcodesOk returns a tuple with the VariationBarcodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetVariationBarcodesOk() (*[]VariationBarcode, bool) {
	if o == nil || o.VariationBarcodes == nil {
		return nil, false
	}
	return o.VariationBarcodes, true
}

// HasVariationBarcodes returns a boolean if a field has been set.
func (o *Variation) HasVariationBarcodes() bool {
	if o != nil && o.VariationBarcodes != nil {
		return true
	}

	return false
}

// SetVariationBarcodes gets a reference to the given []VariationBarcode and assigns it to the VariationBarcodes field.
func (o *Variation) SetVariationBarcodes(v []VariationBarcode) {
	o.VariationBarcodes = &v
}

// GetVariationSalesPrices returns the VariationSalesPrices field value if set, zero value otherwise.
func (o *Variation) GetVariationSalesPrices() []VariationSalesPrice {
	if o == nil || o.VariationSalesPrices == nil {
		var ret []VariationSalesPrice
		return ret
	}
	return *o.VariationSalesPrices
}

// GetVariationSalesPricesOk returns a tuple with the VariationSalesPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetVariationSalesPricesOk() (*[]VariationSalesPrice, bool) {
	if o == nil || o.VariationSalesPrices == nil {
		return nil, false
	}
	return o.VariationSalesPrices, true
}

// HasVariationSalesPrices returns a boolean if a field has been set.
func (o *Variation) HasVariationSalesPrices() bool {
	if o != nil && o.VariationSalesPrices != nil {
		return true
	}

	return false
}

// SetVariationSalesPrices gets a reference to the given []VariationSalesPrice and assigns it to the VariationSalesPrices field.
func (o *Variation) SetVariationSalesPrices(v []VariationSalesPrice) {
	o.VariationSalesPrices = &v
}

// GetMarketItemNumbers returns the MarketItemNumbers field value if set, zero value otherwise.
func (o *Variation) GetMarketItemNumbers() []VariationMarketItemNumber {
	if o == nil || o.MarketItemNumbers == nil {
		var ret []VariationMarketItemNumber
		return ret
	}
	return *o.MarketItemNumbers
}

// GetMarketItemNumbersOk returns a tuple with the MarketItemNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetMarketItemNumbersOk() (*[]VariationMarketItemNumber, bool) {
	if o == nil || o.MarketItemNumbers == nil {
		return nil, false
	}
	return o.MarketItemNumbers, true
}

// HasMarketItemNumbers returns a boolean if a field has been set.
func (o *Variation) HasMarketItemNumbers() bool {
	if o != nil && o.MarketItemNumbers != nil {
		return true
	}

	return false
}

// SetMarketItemNumbers gets a reference to the given []VariationMarketItemNumber and assigns it to the MarketItemNumbers field.
func (o *Variation) SetMarketItemNumbers(v []VariationMarketItemNumber) {
	o.MarketItemNumbers = &v
}

// GetVariationCategories returns the VariationCategories field value if set, zero value otherwise.
func (o *Variation) GetVariationCategories() []VariationCategory {
	if o == nil || o.VariationCategories == nil {
		var ret []VariationCategory
		return ret
	}
	return *o.VariationCategories
}

// GetVariationCategoriesOk returns a tuple with the VariationCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetVariationCategoriesOk() (*[]VariationCategory, bool) {
	if o == nil || o.VariationCategories == nil {
		return nil, false
	}
	return o.VariationCategories, true
}

// HasVariationCategories returns a boolean if a field has been set.
func (o *Variation) HasVariationCategories() bool {
	if o != nil && o.VariationCategories != nil {
		return true
	}

	return false
}

// SetVariationCategories gets a reference to the given []VariationCategory and assigns it to the VariationCategories field.
func (o *Variation) SetVariationCategories(v []VariationCategory) {
	o.VariationCategories = &v
}

// GetVariationClients returns the VariationClients field value if set, zero value otherwise.
func (o *Variation) GetVariationClients() []VariationClient {
	if o == nil || o.VariationClients == nil {
		var ret []VariationClient
		return ret
	}
	return *o.VariationClients
}

// GetVariationClientsOk returns a tuple with the VariationClients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetVariationClientsOk() (*[]VariationClient, bool) {
	if o == nil || o.VariationClients == nil {
		return nil, false
	}
	return o.VariationClients, true
}

// HasVariationClients returns a boolean if a field has been set.
func (o *Variation) HasVariationClients() bool {
	if o != nil && o.VariationClients != nil {
		return true
	}

	return false
}

// SetVariationClients gets a reference to the given []VariationClient and assigns it to the VariationClients field.
func (o *Variation) SetVariationClients(v []VariationClient) {
	o.VariationClients = &v
}

// GetVariationMarkets returns the VariationMarkets field value if set, zero value otherwise.
func (o *Variation) GetVariationMarkets() []VariationMarket {
	if o == nil || o.VariationMarkets == nil {
		var ret []VariationMarket
		return ret
	}
	return *o.VariationMarkets
}

// GetVariationMarketsOk returns a tuple with the VariationMarkets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetVariationMarketsOk() (*[]VariationMarket, bool) {
	if o == nil || o.VariationMarkets == nil {
		return nil, false
	}
	return o.VariationMarkets, true
}

// HasVariationMarkets returns a boolean if a field has been set.
func (o *Variation) HasVariationMarkets() bool {
	if o != nil && o.VariationMarkets != nil {
		return true
	}

	return false
}

// SetVariationMarkets gets a reference to the given []VariationMarket and assigns it to the VariationMarkets field.
func (o *Variation) SetVariationMarkets(v []VariationMarket) {
	o.VariationMarkets = &v
}

// GetVariationDefaultCategory returns the VariationDefaultCategory field value if set, zero value otherwise.
func (o *Variation) GetVariationDefaultCategory() []VariationDefaultCategory {
	if o == nil || o.VariationDefaultCategory == nil {
		var ret []VariationDefaultCategory
		return ret
	}
	return *o.VariationDefaultCategory
}

// GetVariationDefaultCategoryOk returns a tuple with the VariationDefaultCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetVariationDefaultCategoryOk() (*[]VariationDefaultCategory, bool) {
	if o == nil || o.VariationDefaultCategory == nil {
		return nil, false
	}
	return o.VariationDefaultCategory, true
}

// HasVariationDefaultCategory returns a boolean if a field has been set.
func (o *Variation) HasVariationDefaultCategory() bool {
	if o != nil && o.VariationDefaultCategory != nil {
		return true
	}

	return false
}

// SetVariationDefaultCategory gets a reference to the given []VariationDefaultCategory and assigns it to the VariationDefaultCategory field.
func (o *Variation) SetVariationDefaultCategory(v []VariationDefaultCategory) {
	o.VariationDefaultCategory = &v
}

// GetVariationSuppliers returns the VariationSuppliers field value if set, zero value otherwise.
func (o *Variation) GetVariationSuppliers() []VariationSupplier {
	if o == nil || o.VariationSuppliers == nil {
		var ret []VariationSupplier
		return ret
	}
	return *o.VariationSuppliers
}

// GetVariationSuppliersOk returns a tuple with the VariationSuppliers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetVariationSuppliersOk() (*[]VariationSupplier, bool) {
	if o == nil || o.VariationSuppliers == nil {
		return nil, false
	}
	return o.VariationSuppliers, true
}

// HasVariationSuppliers returns a boolean if a field has been set.
func (o *Variation) HasVariationSuppliers() bool {
	if o != nil && o.VariationSuppliers != nil {
		return true
	}

	return false
}

// SetVariationSuppliers gets a reference to the given []VariationSupplier and assigns it to the VariationSuppliers field.
func (o *Variation) SetVariationSuppliers(v []VariationSupplier) {
	o.VariationSuppliers = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *Variation) GetImages() []VariationImage {
	if o == nil || o.Images == nil {
		var ret []VariationImage
		return ret
	}
	return *o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetImagesOk() (*[]VariationImage, bool) {
	if o == nil || o.Images == nil {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *Variation) HasImages() bool {
	if o != nil && o.Images != nil {
		return true
	}

	return false
}

// SetImages gets a reference to the given []VariationImage and assigns it to the Images field.
func (o *Variation) SetImages(v []VariationImage) {
	o.Images = &v
}

// GetItemImages returns the ItemImages field value if set, zero value otherwise.
func (o *Variation) GetItemImages() []VariationImage {
	if o == nil || o.ItemImages == nil {
		var ret []VariationImage
		return ret
	}
	return *o.ItemImages
}

// GetItemImagesOk returns a tuple with the ItemImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetItemImagesOk() (*[]VariationImage, bool) {
	if o == nil || o.ItemImages == nil {
		return nil, false
	}
	return o.ItemImages, true
}

// HasItemImages returns a boolean if a field has been set.
func (o *Variation) HasItemImages() bool {
	if o != nil && o.ItemImages != nil {
		return true
	}

	return false
}

// SetItemImages gets a reference to the given []VariationImage and assigns it to the ItemImages field.
func (o *Variation) SetItemImages(v []VariationImage) {
	o.ItemImages = &v
}

// GetVariationAttributeValues returns the VariationAttributeValues field value if set, zero value otherwise.
func (o *Variation) GetVariationAttributeValues() []VariationAttributeValue {
	if o == nil || o.VariationAttributeValues == nil {
		var ret []VariationAttributeValue
		return ret
	}
	return *o.VariationAttributeValues
}

// GetVariationAttributeValuesOk returns a tuple with the VariationAttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetVariationAttributeValuesOk() (*[]VariationAttributeValue, bool) {
	if o == nil || o.VariationAttributeValues == nil {
		return nil, false
	}
	return o.VariationAttributeValues, true
}

// HasVariationAttributeValues returns a boolean if a field has been set.
func (o *Variation) HasVariationAttributeValues() bool {
	if o != nil && o.VariationAttributeValues != nil {
		return true
	}

	return false
}

// SetVariationAttributeValues gets a reference to the given []VariationAttributeValue and assigns it to the VariationAttributeValues field.
func (o *Variation) SetVariationAttributeValues(v []VariationAttributeValue) {
	o.VariationAttributeValues = &v
}

// GetVariationSkus returns the VariationSkus field value if set, zero value otherwise.
func (o *Variation) GetVariationSkus() []VariationSku {
	if o == nil || o.VariationSkus == nil {
		var ret []VariationSku
		return ret
	}
	return *o.VariationSkus
}

// GetVariationSkusOk returns a tuple with the VariationSkus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetVariationSkusOk() (*[]VariationSku, bool) {
	if o == nil || o.VariationSkus == nil {
		return nil, false
	}
	return o.VariationSkus, true
}

// HasVariationSkus returns a boolean if a field has been set.
func (o *Variation) HasVariationSkus() bool {
	if o != nil && o.VariationSkus != nil {
		return true
	}

	return false
}

// SetVariationSkus gets a reference to the given []VariationSku and assigns it to the VariationSkus field.
func (o *Variation) SetVariationSkus(v []VariationSku) {
	o.VariationSkus = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *Variation) GetUnit() VariationUnit {
	if o == nil || o.Unit == nil {
		var ret VariationUnit
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetUnitOk() (*VariationUnit, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *Variation) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given VariationUnit and assigns it to the Unit field.
func (o *Variation) SetUnit(v VariationUnit) {
	o.Unit = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *Variation) GetParent() Variation {
	if o == nil || o.Parent == nil {
		var ret Variation
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetParentOk() (*Variation, bool) {
	if o == nil || o.Parent == nil {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *Variation) HasParent() bool {
	if o != nil && o.Parent != nil {
		return true
	}

	return false
}

// SetParent gets a reference to the given Variation and assigns it to the Parent field.
func (o *Variation) SetParent(v Variation) {
	o.Parent = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *Variation) GetItem() VariationItem {
	if o == nil || o.Item == nil {
		var ret VariationItem
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetItemOk() (*VariationItem, bool) {
	if o == nil || o.Item == nil {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *Variation) HasItem() bool {
	if o != nil && o.Item != nil {
		return true
	}

	return false
}

// SetItem gets a reference to the given VariationItem and assigns it to the Item field.
func (o *Variation) SetItem(v VariationItem) {
	o.Item = &v
}

// GetStock returns the Stock field value if set, zero value otherwise.
func (o *Variation) GetStock() []VariationStock {
	if o == nil || o.Stock == nil {
		var ret []VariationStock
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Variation) GetStockOk() (*[]VariationStock, bool) {
	if o == nil || o.Stock == nil {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *Variation) HasStock() bool {
	if o != nil && o.Stock != nil {
		return true
	}

	return false
}

// SetStock gets a reference to the given []VariationStock and assigns it to the Stock field.
func (o *Variation) SetStock(v []VariationStock) {
	o.Stock = &v
}

func (o Variation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsMain != nil {
		toSerialize["isMain"] = o.IsMain
	}
	if o.MainVariationId != nil {
		toSerialize["mainVariationId"] = o.MainVariationId
	}
	if o.ItemId != nil {
		toSerialize["itemId"] = o.ItemId
	}
	if o.CategoryVariationId != nil {
		toSerialize["categoryVariationId"] = o.CategoryVariationId
	}
	if o.MarketVariationId != nil {
		toSerialize["marketVariationId"] = o.MarketVariationId
	}
	if o.ClientVariationId != nil {
		toSerialize["clientVariationId"] = o.ClientVariationId
	}
	if o.SalesPriceVariationId != nil {
		toSerialize["salesPriceVariationId"] = o.SalesPriceVariationId
	}
	if o.SupplierVariationId != nil {
		toSerialize["supplierVariationId"] = o.SupplierVariationId
	}
	if o.WarehouseVariationId != nil {
		toSerialize["warehouseVariationId"] = o.WarehouseVariationId
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.IsActive != nil {
		toSerialize["isActive"] = o.IsActive
	}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	if o.Model != nil {
		toSerialize["model"] = o.Model
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if o.ParentVariationId != nil {
		toSerialize["parentVariationId"] = o.ParentVariationId
	}
	if o.ParentVariationQuantity != nil {
		toSerialize["parentVariationQuantity"] = o.ParentVariationQuantity
	}
	if o.Availability != nil {
		toSerialize["availability"] = o.Availability
	}
	if o.EstimatedAvailableAt != nil {
		toSerialize["estimatedAvailableAt"] = o.EstimatedAvailableAt
	}
	if o.PurchasePrice != nil {
		toSerialize["purchasePrice"] = o.PurchasePrice
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.RelatedUpdatedAt != nil {
		toSerialize["relatedUpdatedAt"] = o.RelatedUpdatedAt
	}
	if o.PriceCalculationId != nil {
		toSerialize["priceCalculationId"] = o.PriceCalculationId
	}
	if o.PriceCalculationUUID != nil {
		toSerialize["priceCalculationUUID"] = o.PriceCalculationUUID
	}
	if o.Picking != nil {
		toSerialize["picking"] = o.Picking
	}
	if o.StockLimitation != nil {
		toSerialize["stockLimitation"] = o.StockLimitation
	}
	if o.IsVisibleIfNetStockIsPositive != nil {
		toSerialize["isVisibleIfNetStockIsPositive"] = o.IsVisibleIfNetStockIsPositive
	}
	if o.IsInvisibleIfNetStockIsNotPositive != nil {
		toSerialize["isInvisibleIfNetStockIsNotPositive"] = o.IsInvisibleIfNetStockIsNotPositive
	}
	if o.IsAvailableIfNetStockIsPositive != nil {
		toSerialize["isAvailableIfNetStockIsPositive"] = o.IsAvailableIfNetStockIsPositive
	}
	if o.IsUnavailableIfNetStockIsNotPositive != nil {
		toSerialize["isUnavailableIfNetStockIsNotPositive"] = o.IsUnavailableIfNetStockIsNotPositive
	}
	if o.MainWarehouseId != nil {
		toSerialize["mainWarehouseId"] = o.MainWarehouseId
	}
	if o.MaximumOrderQuantity != nil {
		toSerialize["maximumOrderQuantity"] = o.MaximumOrderQuantity
	}
	if o.MinimumOrderQuantity != nil {
		toSerialize["minimumOrderQuantity"] = o.MinimumOrderQuantity
	}
	if o.IntervalOrderQuantity != nil {
		toSerialize["intervalOrderQuantity"] = o.IntervalOrderQuantity
	}
	if o.AvailableUntil != nil {
		toSerialize["availableUntil"] = o.AvailableUntil
	}
	if o.ReleasedAt != nil {
		toSerialize["releasedAt"] = o.ReleasedAt
	}
	if o.UnitCombinationId != nil {
		toSerialize["unitCombinationId"] = o.UnitCombinationId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.WeightG != nil {
		toSerialize["weightG"] = o.WeightG
	}
	if o.WeightNetG != nil {
		toSerialize["weightNetG"] = o.WeightNetG
	}
	if o.WidthMM != nil {
		toSerialize["widthMM"] = o.WidthMM
	}
	if o.LengthMM != nil {
		toSerialize["lengthMM"] = o.LengthMM
	}
	if o.HeightMM != nil {
		toSerialize["heightMM"] = o.HeightMM
	}
	if o.ExtraShippingCharge1 != nil {
		toSerialize["extraShippingCharge1"] = o.ExtraShippingCharge1
	}
	if o.ExtraShippingCharge2 != nil {
		toSerialize["extraShippingCharge2"] = o.ExtraShippingCharge2
	}
	if o.UnitsContained != nil {
		toSerialize["unitsContained"] = o.UnitsContained
	}
	if o.PalletTypeId != nil {
		toSerialize["palletTypeId"] = o.PalletTypeId
	}
	if o.PackingUnits != nil {
		toSerialize["packingUnits"] = o.PackingUnits
	}
	if o.PackingUnitTypeId != nil {
		toSerialize["packingUnitTypeId"] = o.PackingUnitTypeId
	}
	if o.TransportationCosts != nil {
		toSerialize["transportationCosts"] = o.TransportationCosts
	}
	if o.StorageCosts != nil {
		toSerialize["storageCosts"] = o.StorageCosts
	}
	if o.OperatingCosts != nil {
		toSerialize["operatingCosts"] = o.OperatingCosts
	}
	if o.VatId != nil {
		toSerialize["vatId"] = o.VatId
	}
	if o.AutomaticClientVisibility != nil {
		toSerialize["automaticClientVisibility"] = o.AutomaticClientVisibility
	}
	if o.IsHiddenInCategoryList != nil {
		toSerialize["isHiddenInCategoryList"] = o.IsHiddenInCategoryList
	}
	if o.DefaultShippingCosts != nil {
		toSerialize["defaultShippingCosts"] = o.DefaultShippingCosts
	}
	if o.MayShowUnitPrice != nil {
		toSerialize["mayShowUnitPrice"] = o.MayShowUnitPrice
	}
	if o.MovingAveragePrice != nil {
		toSerialize["movingAveragePrice"] = o.MovingAveragePrice
	}
	if o.PropertyVariationId != nil {
		toSerialize["propertyVariationId"] = o.PropertyVariationId
	}
	if o.AutomaticListVisibility != nil {
		toSerialize["automaticListVisibility"] = o.AutomaticListVisibility
	}
	if o.IsVisibleInListIfNetStockIsPositive != nil {
		toSerialize["isVisibleInListIfNetStockIsPositive"] = o.IsVisibleInListIfNetStockIsPositive
	}
	if o.IsInvisibleInListIfNetStockIsNotPositive != nil {
		toSerialize["isInvisibleInListIfNetStockIsNotPositive"] = o.IsInvisibleInListIfNetStockIsNotPositive
	}
	if o.SingleItemCount != nil {
		toSerialize["singleItemCount"] = o.SingleItemCount
	}
	if o.AvailabilityUpdatedAt != nil {
		toSerialize["availabilityUpdatedAt"] = o.AvailabilityUpdatedAt
	}
	if o.TagVariationId != nil {
		toSerialize["tagVariationId"] = o.TagVariationId
	}
	if o.HasCalculatedBundleWeight != nil {
		toSerialize["hasCalculatedBundleWeight"] = o.HasCalculatedBundleWeight
	}
	if o.HasCalculatedBundleNetWeight != nil {
		toSerialize["hasCalculatedBundleNetWeight"] = o.HasCalculatedBundleNetWeight
	}
	if o.HasCalculatedBundlePurchasePrice != nil {
		toSerialize["hasCalculatedBundlePurchasePrice"] = o.HasCalculatedBundlePurchasePrice
	}
	if o.HasCalculatedBundleMovingAveragePrice != nil {
		toSerialize["hasCalculatedBundleMovingAveragePrice"] = o.HasCalculatedBundleMovingAveragePrice
	}
	if o.CustomsTariffNumber != nil {
		toSerialize["customsTariffNumber"] = o.CustomsTariffNumber
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.VariationProperties != nil {
		toSerialize["variationProperties"] = o.VariationProperties
	}
	if o.VariationBarcodes != nil {
		toSerialize["variationBarcodes"] = o.VariationBarcodes
	}
	if o.VariationSalesPrices != nil {
		toSerialize["variationSalesPrices"] = o.VariationSalesPrices
	}
	if o.MarketItemNumbers != nil {
		toSerialize["marketItemNumbers"] = o.MarketItemNumbers
	}
	if o.VariationCategories != nil {
		toSerialize["variationCategories"] = o.VariationCategories
	}
	if o.VariationClients != nil {
		toSerialize["variationClients"] = o.VariationClients
	}
	if o.VariationMarkets != nil {
		toSerialize["variationMarkets"] = o.VariationMarkets
	}
	if o.VariationDefaultCategory != nil {
		toSerialize["variationDefaultCategory"] = o.VariationDefaultCategory
	}
	if o.VariationSuppliers != nil {
		toSerialize["variationSuppliers"] = o.VariationSuppliers
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.ItemImages != nil {
		toSerialize["itemImages"] = o.ItemImages
	}
	if o.VariationAttributeValues != nil {
		toSerialize["variationAttributeValues"] = o.VariationAttributeValues
	}
	if o.VariationSkus != nil {
		toSerialize["variationSkus"] = o.VariationSkus
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	if o.Parent != nil {
		toSerialize["parent"] = o.Parent
	}
	if o.Item != nil {
		toSerialize["item"] = o.Item
	}
	if o.Stock != nil {
		toSerialize["stock"] = o.Stock
	}
	return json.Marshal(toSerialize)
}

type NullableVariation struct {
	value *Variation
	isSet bool
}

func (v NullableVariation) Get() *Variation {
	return v.value
}

func (v *NullableVariation) Set(val *Variation) {
	v.value = val
	v.isSet = true
}

func (v NullableVariation) IsSet() bool {
	return v.isSet
}

func (v *NullableVariation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariation(val *Variation) *NullableVariation {
	return &NullableVariation{value: val, isSet: true}
}

func (v NullableVariation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


