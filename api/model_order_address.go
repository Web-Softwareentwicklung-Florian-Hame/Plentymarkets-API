/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// OrderAddress struct for OrderAddress
type OrderAddress struct {
	Id *int32 `json:"id,omitempty"`
	Gender *string `json:"gender,omitempty"`
	Name1 *string `json:"name1,omitempty"`
	Name2 *string `json:"name2,omitempty"`
	Name3 *string `json:"name3,omitempty"`
	Name4 *string `json:"name4,omitempty"`
	Address1 *string `json:"address1,omitempty"`
	Address2 *string `json:"address2,omitempty"`
	Address3 *string `json:"address3,omitempty"`
	Address4 *string `json:"address4,omitempty"`
	PostalCode *string `json:"postalCode,omitempty"`
	Town *string `json:"town,omitempty"`
	CountryId *int32 `json:"countryId,omitempty"`
	StateId *int32 `json:"stateId,omitempty"`
	ReadOnly *bool `json:"readOnly,omitempty"`
	CheckedAt *time.Time `json:"checkedAt,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	Title *string `json:"title,omitempty"`
	ContactPerson *string `json:"contactPerson,omitempty"`
	TaxIdNumber *string `json:"taxIdNumber,omitempty"`
	Pivot *OrderAddressPivot `json:"pivot,omitempty"`
}

// NewOrderAddress instantiates a new OrderAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderAddress() *OrderAddress {
	this := OrderAddress{}
	return &this
}

// NewOrderAddressWithDefaults instantiates a new OrderAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderAddressWithDefaults() *OrderAddress {
	this := OrderAddress{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrderAddress) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrderAddress) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OrderAddress) SetId(v int32) {
	o.Id = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *OrderAddress) GetGender() string {
	if o == nil || o.Gender == nil {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetGenderOk() (*string, bool) {
	if o == nil || o.Gender == nil {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *OrderAddress) HasGender() bool {
	if o != nil && o.Gender != nil {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *OrderAddress) SetGender(v string) {
	o.Gender = &v
}

// GetName1 returns the Name1 field value if set, zero value otherwise.
func (o *OrderAddress) GetName1() string {
	if o == nil || o.Name1 == nil {
		var ret string
		return ret
	}
	return *o.Name1
}

// GetName1Ok returns a tuple with the Name1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetName1Ok() (*string, bool) {
	if o == nil || o.Name1 == nil {
		return nil, false
	}
	return o.Name1, true
}

// HasName1 returns a boolean if a field has been set.
func (o *OrderAddress) HasName1() bool {
	if o != nil && o.Name1 != nil {
		return true
	}

	return false
}

// SetName1 gets a reference to the given string and assigns it to the Name1 field.
func (o *OrderAddress) SetName1(v string) {
	o.Name1 = &v
}

// GetName2 returns the Name2 field value if set, zero value otherwise.
func (o *OrderAddress) GetName2() string {
	if o == nil || o.Name2 == nil {
		var ret string
		return ret
	}
	return *o.Name2
}

// GetName2Ok returns a tuple with the Name2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetName2Ok() (*string, bool) {
	if o == nil || o.Name2 == nil {
		return nil, false
	}
	return o.Name2, true
}

// HasName2 returns a boolean if a field has been set.
func (o *OrderAddress) HasName2() bool {
	if o != nil && o.Name2 != nil {
		return true
	}

	return false
}

// SetName2 gets a reference to the given string and assigns it to the Name2 field.
func (o *OrderAddress) SetName2(v string) {
	o.Name2 = &v
}

// GetName3 returns the Name3 field value if set, zero value otherwise.
func (o *OrderAddress) GetName3() string {
	if o == nil || o.Name3 == nil {
		var ret string
		return ret
	}
	return *o.Name3
}

// GetName3Ok returns a tuple with the Name3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetName3Ok() (*string, bool) {
	if o == nil || o.Name3 == nil {
		return nil, false
	}
	return o.Name3, true
}

// HasName3 returns a boolean if a field has been set.
func (o *OrderAddress) HasName3() bool {
	if o != nil && o.Name3 != nil {
		return true
	}

	return false
}

// SetName3 gets a reference to the given string and assigns it to the Name3 field.
func (o *OrderAddress) SetName3(v string) {
	o.Name3 = &v
}

// GetName4 returns the Name4 field value if set, zero value otherwise.
func (o *OrderAddress) GetName4() string {
	if o == nil || o.Name4 == nil {
		var ret string
		return ret
	}
	return *o.Name4
}

// GetName4Ok returns a tuple with the Name4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetName4Ok() (*string, bool) {
	if o == nil || o.Name4 == nil {
		return nil, false
	}
	return o.Name4, true
}

// HasName4 returns a boolean if a field has been set.
func (o *OrderAddress) HasName4() bool {
	if o != nil && o.Name4 != nil {
		return true
	}

	return false
}

// SetName4 gets a reference to the given string and assigns it to the Name4 field.
func (o *OrderAddress) SetName4(v string) {
	o.Name4 = &v
}

// GetAddress1 returns the Address1 field value if set, zero value otherwise.
func (o *OrderAddress) GetAddress1() string {
	if o == nil || o.Address1 == nil {
		var ret string
		return ret
	}
	return *o.Address1
}

// GetAddress1Ok returns a tuple with the Address1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetAddress1Ok() (*string, bool) {
	if o == nil || o.Address1 == nil {
		return nil, false
	}
	return o.Address1, true
}

// HasAddress1 returns a boolean if a field has been set.
func (o *OrderAddress) HasAddress1() bool {
	if o != nil && o.Address1 != nil {
		return true
	}

	return false
}

// SetAddress1 gets a reference to the given string and assigns it to the Address1 field.
func (o *OrderAddress) SetAddress1(v string) {
	o.Address1 = &v
}

// GetAddress2 returns the Address2 field value if set, zero value otherwise.
func (o *OrderAddress) GetAddress2() string {
	if o == nil || o.Address2 == nil {
		var ret string
		return ret
	}
	return *o.Address2
}

// GetAddress2Ok returns a tuple with the Address2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetAddress2Ok() (*string, bool) {
	if o == nil || o.Address2 == nil {
		return nil, false
	}
	return o.Address2, true
}

// HasAddress2 returns a boolean if a field has been set.
func (o *OrderAddress) HasAddress2() bool {
	if o != nil && o.Address2 != nil {
		return true
	}

	return false
}

// SetAddress2 gets a reference to the given string and assigns it to the Address2 field.
func (o *OrderAddress) SetAddress2(v string) {
	o.Address2 = &v
}

// GetAddress3 returns the Address3 field value if set, zero value otherwise.
func (o *OrderAddress) GetAddress3() string {
	if o == nil || o.Address3 == nil {
		var ret string
		return ret
	}
	return *o.Address3
}

// GetAddress3Ok returns a tuple with the Address3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetAddress3Ok() (*string, bool) {
	if o == nil || o.Address3 == nil {
		return nil, false
	}
	return o.Address3, true
}

// HasAddress3 returns a boolean if a field has been set.
func (o *OrderAddress) HasAddress3() bool {
	if o != nil && o.Address3 != nil {
		return true
	}

	return false
}

// SetAddress3 gets a reference to the given string and assigns it to the Address3 field.
func (o *OrderAddress) SetAddress3(v string) {
	o.Address3 = &v
}

// GetAddress4 returns the Address4 field value if set, zero value otherwise.
func (o *OrderAddress) GetAddress4() string {
	if o == nil || o.Address4 == nil {
		var ret string
		return ret
	}
	return *o.Address4
}

// GetAddress4Ok returns a tuple with the Address4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetAddress4Ok() (*string, bool) {
	if o == nil || o.Address4 == nil {
		return nil, false
	}
	return o.Address4, true
}

// HasAddress4 returns a boolean if a field has been set.
func (o *OrderAddress) HasAddress4() bool {
	if o != nil && o.Address4 != nil {
		return true
	}

	return false
}

// SetAddress4 gets a reference to the given string and assigns it to the Address4 field.
func (o *OrderAddress) SetAddress4(v string) {
	o.Address4 = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *OrderAddress) GetPostalCode() string {
	if o == nil || o.PostalCode == nil {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *OrderAddress) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *OrderAddress) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetTown returns the Town field value if set, zero value otherwise.
func (o *OrderAddress) GetTown() string {
	if o == nil || o.Town == nil {
		var ret string
		return ret
	}
	return *o.Town
}

// GetTownOk returns a tuple with the Town field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetTownOk() (*string, bool) {
	if o == nil || o.Town == nil {
		return nil, false
	}
	return o.Town, true
}

// HasTown returns a boolean if a field has been set.
func (o *OrderAddress) HasTown() bool {
	if o != nil && o.Town != nil {
		return true
	}

	return false
}

// SetTown gets a reference to the given string and assigns it to the Town field.
func (o *OrderAddress) SetTown(v string) {
	o.Town = &v
}

// GetCountryId returns the CountryId field value if set, zero value otherwise.
func (o *OrderAddress) GetCountryId() int32 {
	if o == nil || o.CountryId == nil {
		var ret int32
		return ret
	}
	return *o.CountryId
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetCountryIdOk() (*int32, bool) {
	if o == nil || o.CountryId == nil {
		return nil, false
	}
	return o.CountryId, true
}

// HasCountryId returns a boolean if a field has been set.
func (o *OrderAddress) HasCountryId() bool {
	if o != nil && o.CountryId != nil {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given int32 and assigns it to the CountryId field.
func (o *OrderAddress) SetCountryId(v int32) {
	o.CountryId = &v
}

// GetStateId returns the StateId field value if set, zero value otherwise.
func (o *OrderAddress) GetStateId() int32 {
	if o == nil || o.StateId == nil {
		var ret int32
		return ret
	}
	return *o.StateId
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetStateIdOk() (*int32, bool) {
	if o == nil || o.StateId == nil {
		return nil, false
	}
	return o.StateId, true
}

// HasStateId returns a boolean if a field has been set.
func (o *OrderAddress) HasStateId() bool {
	if o != nil && o.StateId != nil {
		return true
	}

	return false
}

// SetStateId gets a reference to the given int32 and assigns it to the StateId field.
func (o *OrderAddress) SetStateId(v int32) {
	o.StateId = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *OrderAddress) GetReadOnly() bool {
	if o == nil || o.ReadOnly == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetReadOnlyOk() (*bool, bool) {
	if o == nil || o.ReadOnly == nil {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *OrderAddress) HasReadOnly() bool {
	if o != nil && o.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *OrderAddress) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetCheckedAt returns the CheckedAt field value if set, zero value otherwise.
func (o *OrderAddress) GetCheckedAt() time.Time {
	if o == nil || o.CheckedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CheckedAt
}

// GetCheckedAtOk returns a tuple with the CheckedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetCheckedAtOk() (*time.Time, bool) {
	if o == nil || o.CheckedAt == nil {
		return nil, false
	}
	return o.CheckedAt, true
}

// HasCheckedAt returns a boolean if a field has been set.
func (o *OrderAddress) HasCheckedAt() bool {
	if o != nil && o.CheckedAt != nil {
		return true
	}

	return false
}

// SetCheckedAt gets a reference to the given time.Time and assigns it to the CheckedAt field.
func (o *OrderAddress) SetCheckedAt(v time.Time) {
	o.CheckedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OrderAddress) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OrderAddress) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *OrderAddress) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OrderAddress) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OrderAddress) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *OrderAddress) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *OrderAddress) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *OrderAddress) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *OrderAddress) SetTitle(v string) {
	o.Title = &v
}

// GetContactPerson returns the ContactPerson field value if set, zero value otherwise.
func (o *OrderAddress) GetContactPerson() string {
	if o == nil || o.ContactPerson == nil {
		var ret string
		return ret
	}
	return *o.ContactPerson
}

// GetContactPersonOk returns a tuple with the ContactPerson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetContactPersonOk() (*string, bool) {
	if o == nil || o.ContactPerson == nil {
		return nil, false
	}
	return o.ContactPerson, true
}

// HasContactPerson returns a boolean if a field has been set.
func (o *OrderAddress) HasContactPerson() bool {
	if o != nil && o.ContactPerson != nil {
		return true
	}

	return false
}

// SetContactPerson gets a reference to the given string and assigns it to the ContactPerson field.
func (o *OrderAddress) SetContactPerson(v string) {
	o.ContactPerson = &v
}

// GetTaxIdNumber returns the TaxIdNumber field value if set, zero value otherwise.
func (o *OrderAddress) GetTaxIdNumber() string {
	if o == nil || o.TaxIdNumber == nil {
		var ret string
		return ret
	}
	return *o.TaxIdNumber
}

// GetTaxIdNumberOk returns a tuple with the TaxIdNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetTaxIdNumberOk() (*string, bool) {
	if o == nil || o.TaxIdNumber == nil {
		return nil, false
	}
	return o.TaxIdNumber, true
}

// HasTaxIdNumber returns a boolean if a field has been set.
func (o *OrderAddress) HasTaxIdNumber() bool {
	if o != nil && o.TaxIdNumber != nil {
		return true
	}

	return false
}

// SetTaxIdNumber gets a reference to the given string and assigns it to the TaxIdNumber field.
func (o *OrderAddress) SetTaxIdNumber(v string) {
	o.TaxIdNumber = &v
}

// GetPivot returns the Pivot field value if set, zero value otherwise.
func (o *OrderAddress) GetPivot() OrderAddressPivot {
	if o == nil || o.Pivot == nil {
		var ret OrderAddressPivot
		return ret
	}
	return *o.Pivot
}

// GetPivotOk returns a tuple with the Pivot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderAddress) GetPivotOk() (*OrderAddressPivot, bool) {
	if o == nil || o.Pivot == nil {
		return nil, false
	}
	return o.Pivot, true
}

// HasPivot returns a boolean if a field has been set.
func (o *OrderAddress) HasPivot() bool {
	if o != nil && o.Pivot != nil {
		return true
	}

	return false
}

// SetPivot gets a reference to the given OrderAddressPivot and assigns it to the Pivot field.
func (o *OrderAddress) SetPivot(v OrderAddressPivot) {
	o.Pivot = &v
}

func (o OrderAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Gender != nil {
		toSerialize["gender"] = o.Gender
	}
	if o.Name1 != nil {
		toSerialize["name1"] = o.Name1
	}
	if o.Name2 != nil {
		toSerialize["name2"] = o.Name2
	}
	if o.Name3 != nil {
		toSerialize["name3"] = o.Name3
	}
	if o.Name4 != nil {
		toSerialize["name4"] = o.Name4
	}
	if o.Address1 != nil {
		toSerialize["address1"] = o.Address1
	}
	if o.Address2 != nil {
		toSerialize["address2"] = o.Address2
	}
	if o.Address3 != nil {
		toSerialize["address3"] = o.Address3
	}
	if o.Address4 != nil {
		toSerialize["address4"] = o.Address4
	}
	if o.PostalCode != nil {
		toSerialize["postalCode"] = o.PostalCode
	}
	if o.Town != nil {
		toSerialize["town"] = o.Town
	}
	if o.CountryId != nil {
		toSerialize["countryId"] = o.CountryId
	}
	if o.StateId != nil {
		toSerialize["stateId"] = o.StateId
	}
	if o.ReadOnly != nil {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if o.CheckedAt != nil {
		toSerialize["checkedAt"] = o.CheckedAt
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.ContactPerson != nil {
		toSerialize["contactPerson"] = o.ContactPerson
	}
	if o.TaxIdNumber != nil {
		toSerialize["taxIdNumber"] = o.TaxIdNumber
	}
	if o.Pivot != nil {
		toSerialize["pivot"] = o.Pivot
	}
	return json.Marshal(toSerialize)
}

type NullableOrderAddress struct {
	value *OrderAddress
	isSet bool
}

func (v NullableOrderAddress) Get() *OrderAddress {
	return v.value
}

func (v *NullableOrderAddress) Set(val *OrderAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderAddress(val *OrderAddress) *NullableOrderAddress {
	return &NullableOrderAddress{value: val, isSet: true}
}

func (v NullableOrderAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


