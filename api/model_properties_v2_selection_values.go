/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// PropertiesV2SelectionValues struct for PropertiesV2SelectionValues
type PropertiesV2SelectionValues struct {
	Id *int32 `json:"id,omitempty"`
	RelationId *int32 `json:"relationId,omitempty"`
	SelectionId *int32 `json:"selectionId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewPropertiesV2SelectionValues instantiates a new PropertiesV2SelectionValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertiesV2SelectionValues() *PropertiesV2SelectionValues {
	this := PropertiesV2SelectionValues{}
	return &this
}

// NewPropertiesV2SelectionValuesWithDefaults instantiates a new PropertiesV2SelectionValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertiesV2SelectionValuesWithDefaults() *PropertiesV2SelectionValues {
	this := PropertiesV2SelectionValues{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PropertiesV2SelectionValues) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertiesV2SelectionValues) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PropertiesV2SelectionValues) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PropertiesV2SelectionValues) SetId(v int32) {
	o.Id = &v
}

// GetRelationId returns the RelationId field value if set, zero value otherwise.
func (o *PropertiesV2SelectionValues) GetRelationId() int32 {
	if o == nil || o.RelationId == nil {
		var ret int32
		return ret
	}
	return *o.RelationId
}

// GetRelationIdOk returns a tuple with the RelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertiesV2SelectionValues) GetRelationIdOk() (*int32, bool) {
	if o == nil || o.RelationId == nil {
		return nil, false
	}
	return o.RelationId, true
}

// HasRelationId returns a boolean if a field has been set.
func (o *PropertiesV2SelectionValues) HasRelationId() bool {
	if o != nil && o.RelationId != nil {
		return true
	}

	return false
}

// SetRelationId gets a reference to the given int32 and assigns it to the RelationId field.
func (o *PropertiesV2SelectionValues) SetRelationId(v int32) {
	o.RelationId = &v
}

// GetSelectionId returns the SelectionId field value if set, zero value otherwise.
func (o *PropertiesV2SelectionValues) GetSelectionId() int32 {
	if o == nil || o.SelectionId == nil {
		var ret int32
		return ret
	}
	return *o.SelectionId
}

// GetSelectionIdOk returns a tuple with the SelectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertiesV2SelectionValues) GetSelectionIdOk() (*int32, bool) {
	if o == nil || o.SelectionId == nil {
		return nil, false
	}
	return o.SelectionId, true
}

// HasSelectionId returns a boolean if a field has been set.
func (o *PropertiesV2SelectionValues) HasSelectionId() bool {
	if o != nil && o.SelectionId != nil {
		return true
	}

	return false
}

// SetSelectionId gets a reference to the given int32 and assigns it to the SelectionId field.
func (o *PropertiesV2SelectionValues) SetSelectionId(v int32) {
	o.SelectionId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PropertiesV2SelectionValues) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertiesV2SelectionValues) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PropertiesV2SelectionValues) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PropertiesV2SelectionValues) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PropertiesV2SelectionValues) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertiesV2SelectionValues) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PropertiesV2SelectionValues) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PropertiesV2SelectionValues) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o PropertiesV2SelectionValues) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.RelationId != nil {
		toSerialize["relationId"] = o.RelationId
	}
	if o.SelectionId != nil {
		toSerialize["selectionId"] = o.SelectionId
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullablePropertiesV2SelectionValues struct {
	value *PropertiesV2SelectionValues
	isSet bool
}

func (v NullablePropertiesV2SelectionValues) Get() *PropertiesV2SelectionValues {
	return v.value
}

func (v *NullablePropertiesV2SelectionValues) Set(val *PropertiesV2SelectionValues) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertiesV2SelectionValues) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertiesV2SelectionValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertiesV2SelectionValues(val *PropertiesV2SelectionValues) *NullablePropertiesV2SelectionValues {
	return &NullablePropertiesV2SelectionValues{value: val, isSet: true}
}

func (v NullablePropertiesV2SelectionValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertiesV2SelectionValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


