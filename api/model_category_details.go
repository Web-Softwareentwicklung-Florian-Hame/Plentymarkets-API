/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// CategoryDetails category details model
type CategoryDetails struct {
	CategoryId *string `json:"categoryId,omitempty"`
	Lang *string `json:"lang,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Description2 *string `json:"description2,omitempty"`
	ShortDescription *string `json:"shortDescription,omitempty"`
	MetaKeywords *string `json:"metaKeywords,omitempty"`
	MetaDescription *string `json:"metaDescription,omitempty"`
	NameUrl *string `json:"nameUrl,omitempty"`
	MetaTitle *string `json:"metaTitle,omitempty"`
	Position *string `json:"position,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	UpdatedBy *string `json:"updatedBy,omitempty"`
	ItemListView *string `json:"itemListView,omitempty"`
	SingleItemView *string `json:"singleItemView,omitempty"`
	PageView *string `json:"pageView,omitempty"`
	Fulltext *string `json:"fulltext,omitempty"`
	MetaRobots *string `json:"metaRobots,omitempty"`
	CanonicalLink *string `json:"canonicalLink,omitempty"`
	PreviewUrl *string `json:"previewUrl,omitempty"`
	Image *string `json:"image,omitempty"`
	ImagePath *string `json:"imagePath,omitempty"`
	Image2 *string `json:"image2,omitempty"`
	Image2Path *string `json:"image2Path,omitempty"`
	PlentyId *int32 `json:"plentyId,omitempty"`
}

// NewCategoryDetails instantiates a new CategoryDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryDetails() *CategoryDetails {
	this := CategoryDetails{}
	return &this
}

// NewCategoryDetailsWithDefaults instantiates a new CategoryDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryDetailsWithDefaults() *CategoryDetails {
	this := CategoryDetails{}
	return &this
}

// GetCategoryId returns the CategoryId field value if set, zero value otherwise.
func (o *CategoryDetails) GetCategoryId() string {
	if o == nil || o.CategoryId == nil {
		var ret string
		return ret
	}
	return *o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetCategoryIdOk() (*string, bool) {
	if o == nil || o.CategoryId == nil {
		return nil, false
	}
	return o.CategoryId, true
}

// HasCategoryId returns a boolean if a field has been set.
func (o *CategoryDetails) HasCategoryId() bool {
	if o != nil && o.CategoryId != nil {
		return true
	}

	return false
}

// SetCategoryId gets a reference to the given string and assigns it to the CategoryId field.
func (o *CategoryDetails) SetCategoryId(v string) {
	o.CategoryId = &v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *CategoryDetails) GetLang() string {
	if o == nil || o.Lang == nil {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetLangOk() (*string, bool) {
	if o == nil || o.Lang == nil {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *CategoryDetails) HasLang() bool {
	if o != nil && o.Lang != nil {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *CategoryDetails) SetLang(v string) {
	o.Lang = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CategoryDetails) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CategoryDetails) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CategoryDetails) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CategoryDetails) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CategoryDetails) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CategoryDetails) SetDescription(v string) {
	o.Description = &v
}

// GetDescription2 returns the Description2 field value if set, zero value otherwise.
func (o *CategoryDetails) GetDescription2() string {
	if o == nil || o.Description2 == nil {
		var ret string
		return ret
	}
	return *o.Description2
}

// GetDescription2Ok returns a tuple with the Description2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetDescription2Ok() (*string, bool) {
	if o == nil || o.Description2 == nil {
		return nil, false
	}
	return o.Description2, true
}

// HasDescription2 returns a boolean if a field has been set.
func (o *CategoryDetails) HasDescription2() bool {
	if o != nil && o.Description2 != nil {
		return true
	}

	return false
}

// SetDescription2 gets a reference to the given string and assigns it to the Description2 field.
func (o *CategoryDetails) SetDescription2(v string) {
	o.Description2 = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *CategoryDetails) GetShortDescription() string {
	if o == nil || o.ShortDescription == nil {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetShortDescriptionOk() (*string, bool) {
	if o == nil || o.ShortDescription == nil {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *CategoryDetails) HasShortDescription() bool {
	if o != nil && o.ShortDescription != nil {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *CategoryDetails) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetMetaKeywords returns the MetaKeywords field value if set, zero value otherwise.
func (o *CategoryDetails) GetMetaKeywords() string {
	if o == nil || o.MetaKeywords == nil {
		var ret string
		return ret
	}
	return *o.MetaKeywords
}

// GetMetaKeywordsOk returns a tuple with the MetaKeywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetMetaKeywordsOk() (*string, bool) {
	if o == nil || o.MetaKeywords == nil {
		return nil, false
	}
	return o.MetaKeywords, true
}

// HasMetaKeywords returns a boolean if a field has been set.
func (o *CategoryDetails) HasMetaKeywords() bool {
	if o != nil && o.MetaKeywords != nil {
		return true
	}

	return false
}

// SetMetaKeywords gets a reference to the given string and assigns it to the MetaKeywords field.
func (o *CategoryDetails) SetMetaKeywords(v string) {
	o.MetaKeywords = &v
}

// GetMetaDescription returns the MetaDescription field value if set, zero value otherwise.
func (o *CategoryDetails) GetMetaDescription() string {
	if o == nil || o.MetaDescription == nil {
		var ret string
		return ret
	}
	return *o.MetaDescription
}

// GetMetaDescriptionOk returns a tuple with the MetaDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetMetaDescriptionOk() (*string, bool) {
	if o == nil || o.MetaDescription == nil {
		return nil, false
	}
	return o.MetaDescription, true
}

// HasMetaDescription returns a boolean if a field has been set.
func (o *CategoryDetails) HasMetaDescription() bool {
	if o != nil && o.MetaDescription != nil {
		return true
	}

	return false
}

// SetMetaDescription gets a reference to the given string and assigns it to the MetaDescription field.
func (o *CategoryDetails) SetMetaDescription(v string) {
	o.MetaDescription = &v
}

// GetNameUrl returns the NameUrl field value if set, zero value otherwise.
func (o *CategoryDetails) GetNameUrl() string {
	if o == nil || o.NameUrl == nil {
		var ret string
		return ret
	}
	return *o.NameUrl
}

// GetNameUrlOk returns a tuple with the NameUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetNameUrlOk() (*string, bool) {
	if o == nil || o.NameUrl == nil {
		return nil, false
	}
	return o.NameUrl, true
}

// HasNameUrl returns a boolean if a field has been set.
func (o *CategoryDetails) HasNameUrl() bool {
	if o != nil && o.NameUrl != nil {
		return true
	}

	return false
}

// SetNameUrl gets a reference to the given string and assigns it to the NameUrl field.
func (o *CategoryDetails) SetNameUrl(v string) {
	o.NameUrl = &v
}

// GetMetaTitle returns the MetaTitle field value if set, zero value otherwise.
func (o *CategoryDetails) GetMetaTitle() string {
	if o == nil || o.MetaTitle == nil {
		var ret string
		return ret
	}
	return *o.MetaTitle
}

// GetMetaTitleOk returns a tuple with the MetaTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetMetaTitleOk() (*string, bool) {
	if o == nil || o.MetaTitle == nil {
		return nil, false
	}
	return o.MetaTitle, true
}

// HasMetaTitle returns a boolean if a field has been set.
func (o *CategoryDetails) HasMetaTitle() bool {
	if o != nil && o.MetaTitle != nil {
		return true
	}

	return false
}

// SetMetaTitle gets a reference to the given string and assigns it to the MetaTitle field.
func (o *CategoryDetails) SetMetaTitle(v string) {
	o.MetaTitle = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *CategoryDetails) GetPosition() string {
	if o == nil || o.Position == nil {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetPositionOk() (*string, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *CategoryDetails) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *CategoryDetails) SetPosition(v string) {
	o.Position = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CategoryDetails) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CategoryDetails) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *CategoryDetails) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *CategoryDetails) GetUpdatedBy() string {
	if o == nil || o.UpdatedBy == nil {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetUpdatedByOk() (*string, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *CategoryDetails) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *CategoryDetails) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetItemListView returns the ItemListView field value if set, zero value otherwise.
func (o *CategoryDetails) GetItemListView() string {
	if o == nil || o.ItemListView == nil {
		var ret string
		return ret
	}
	return *o.ItemListView
}

// GetItemListViewOk returns a tuple with the ItemListView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetItemListViewOk() (*string, bool) {
	if o == nil || o.ItemListView == nil {
		return nil, false
	}
	return o.ItemListView, true
}

// HasItemListView returns a boolean if a field has been set.
func (o *CategoryDetails) HasItemListView() bool {
	if o != nil && o.ItemListView != nil {
		return true
	}

	return false
}

// SetItemListView gets a reference to the given string and assigns it to the ItemListView field.
func (o *CategoryDetails) SetItemListView(v string) {
	o.ItemListView = &v
}

// GetSingleItemView returns the SingleItemView field value if set, zero value otherwise.
func (o *CategoryDetails) GetSingleItemView() string {
	if o == nil || o.SingleItemView == nil {
		var ret string
		return ret
	}
	return *o.SingleItemView
}

// GetSingleItemViewOk returns a tuple with the SingleItemView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetSingleItemViewOk() (*string, bool) {
	if o == nil || o.SingleItemView == nil {
		return nil, false
	}
	return o.SingleItemView, true
}

// HasSingleItemView returns a boolean if a field has been set.
func (o *CategoryDetails) HasSingleItemView() bool {
	if o != nil && o.SingleItemView != nil {
		return true
	}

	return false
}

// SetSingleItemView gets a reference to the given string and assigns it to the SingleItemView field.
func (o *CategoryDetails) SetSingleItemView(v string) {
	o.SingleItemView = &v
}

// GetPageView returns the PageView field value if set, zero value otherwise.
func (o *CategoryDetails) GetPageView() string {
	if o == nil || o.PageView == nil {
		var ret string
		return ret
	}
	return *o.PageView
}

// GetPageViewOk returns a tuple with the PageView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetPageViewOk() (*string, bool) {
	if o == nil || o.PageView == nil {
		return nil, false
	}
	return o.PageView, true
}

// HasPageView returns a boolean if a field has been set.
func (o *CategoryDetails) HasPageView() bool {
	if o != nil && o.PageView != nil {
		return true
	}

	return false
}

// SetPageView gets a reference to the given string and assigns it to the PageView field.
func (o *CategoryDetails) SetPageView(v string) {
	o.PageView = &v
}

// GetFulltext returns the Fulltext field value if set, zero value otherwise.
func (o *CategoryDetails) GetFulltext() string {
	if o == nil || o.Fulltext == nil {
		var ret string
		return ret
	}
	return *o.Fulltext
}

// GetFulltextOk returns a tuple with the Fulltext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetFulltextOk() (*string, bool) {
	if o == nil || o.Fulltext == nil {
		return nil, false
	}
	return o.Fulltext, true
}

// HasFulltext returns a boolean if a field has been set.
func (o *CategoryDetails) HasFulltext() bool {
	if o != nil && o.Fulltext != nil {
		return true
	}

	return false
}

// SetFulltext gets a reference to the given string and assigns it to the Fulltext field.
func (o *CategoryDetails) SetFulltext(v string) {
	o.Fulltext = &v
}

// GetMetaRobots returns the MetaRobots field value if set, zero value otherwise.
func (o *CategoryDetails) GetMetaRobots() string {
	if o == nil || o.MetaRobots == nil {
		var ret string
		return ret
	}
	return *o.MetaRobots
}

// GetMetaRobotsOk returns a tuple with the MetaRobots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetMetaRobotsOk() (*string, bool) {
	if o == nil || o.MetaRobots == nil {
		return nil, false
	}
	return o.MetaRobots, true
}

// HasMetaRobots returns a boolean if a field has been set.
func (o *CategoryDetails) HasMetaRobots() bool {
	if o != nil && o.MetaRobots != nil {
		return true
	}

	return false
}

// SetMetaRobots gets a reference to the given string and assigns it to the MetaRobots field.
func (o *CategoryDetails) SetMetaRobots(v string) {
	o.MetaRobots = &v
}

// GetCanonicalLink returns the CanonicalLink field value if set, zero value otherwise.
func (o *CategoryDetails) GetCanonicalLink() string {
	if o == nil || o.CanonicalLink == nil {
		var ret string
		return ret
	}
	return *o.CanonicalLink
}

// GetCanonicalLinkOk returns a tuple with the CanonicalLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetCanonicalLinkOk() (*string, bool) {
	if o == nil || o.CanonicalLink == nil {
		return nil, false
	}
	return o.CanonicalLink, true
}

// HasCanonicalLink returns a boolean if a field has been set.
func (o *CategoryDetails) HasCanonicalLink() bool {
	if o != nil && o.CanonicalLink != nil {
		return true
	}

	return false
}

// SetCanonicalLink gets a reference to the given string and assigns it to the CanonicalLink field.
func (o *CategoryDetails) SetCanonicalLink(v string) {
	o.CanonicalLink = &v
}

// GetPreviewUrl returns the PreviewUrl field value if set, zero value otherwise.
func (o *CategoryDetails) GetPreviewUrl() string {
	if o == nil || o.PreviewUrl == nil {
		var ret string
		return ret
	}
	return *o.PreviewUrl
}

// GetPreviewUrlOk returns a tuple with the PreviewUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetPreviewUrlOk() (*string, bool) {
	if o == nil || o.PreviewUrl == nil {
		return nil, false
	}
	return o.PreviewUrl, true
}

// HasPreviewUrl returns a boolean if a field has been set.
func (o *CategoryDetails) HasPreviewUrl() bool {
	if o != nil && o.PreviewUrl != nil {
		return true
	}

	return false
}

// SetPreviewUrl gets a reference to the given string and assigns it to the PreviewUrl field.
func (o *CategoryDetails) SetPreviewUrl(v string) {
	o.PreviewUrl = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *CategoryDetails) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *CategoryDetails) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *CategoryDetails) SetImage(v string) {
	o.Image = &v
}

// GetImagePath returns the ImagePath field value if set, zero value otherwise.
func (o *CategoryDetails) GetImagePath() string {
	if o == nil || o.ImagePath == nil {
		var ret string
		return ret
	}
	return *o.ImagePath
}

// GetImagePathOk returns a tuple with the ImagePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetImagePathOk() (*string, bool) {
	if o == nil || o.ImagePath == nil {
		return nil, false
	}
	return o.ImagePath, true
}

// HasImagePath returns a boolean if a field has been set.
func (o *CategoryDetails) HasImagePath() bool {
	if o != nil && o.ImagePath != nil {
		return true
	}

	return false
}

// SetImagePath gets a reference to the given string and assigns it to the ImagePath field.
func (o *CategoryDetails) SetImagePath(v string) {
	o.ImagePath = &v
}

// GetImage2 returns the Image2 field value if set, zero value otherwise.
func (o *CategoryDetails) GetImage2() string {
	if o == nil || o.Image2 == nil {
		var ret string
		return ret
	}
	return *o.Image2
}

// GetImage2Ok returns a tuple with the Image2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetImage2Ok() (*string, bool) {
	if o == nil || o.Image2 == nil {
		return nil, false
	}
	return o.Image2, true
}

// HasImage2 returns a boolean if a field has been set.
func (o *CategoryDetails) HasImage2() bool {
	if o != nil && o.Image2 != nil {
		return true
	}

	return false
}

// SetImage2 gets a reference to the given string and assigns it to the Image2 field.
func (o *CategoryDetails) SetImage2(v string) {
	o.Image2 = &v
}

// GetImage2Path returns the Image2Path field value if set, zero value otherwise.
func (o *CategoryDetails) GetImage2Path() string {
	if o == nil || o.Image2Path == nil {
		var ret string
		return ret
	}
	return *o.Image2Path
}

// GetImage2PathOk returns a tuple with the Image2Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetImage2PathOk() (*string, bool) {
	if o == nil || o.Image2Path == nil {
		return nil, false
	}
	return o.Image2Path, true
}

// HasImage2Path returns a boolean if a field has been set.
func (o *CategoryDetails) HasImage2Path() bool {
	if o != nil && o.Image2Path != nil {
		return true
	}

	return false
}

// SetImage2Path gets a reference to the given string and assigns it to the Image2Path field.
func (o *CategoryDetails) SetImage2Path(v string) {
	o.Image2Path = &v
}

// GetPlentyId returns the PlentyId field value if set, zero value otherwise.
func (o *CategoryDetails) GetPlentyId() int32 {
	if o == nil || o.PlentyId == nil {
		var ret int32
		return ret
	}
	return *o.PlentyId
}

// GetPlentyIdOk returns a tuple with the PlentyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDetails) GetPlentyIdOk() (*int32, bool) {
	if o == nil || o.PlentyId == nil {
		return nil, false
	}
	return o.PlentyId, true
}

// HasPlentyId returns a boolean if a field has been set.
func (o *CategoryDetails) HasPlentyId() bool {
	if o != nil && o.PlentyId != nil {
		return true
	}

	return false
}

// SetPlentyId gets a reference to the given int32 and assigns it to the PlentyId field.
func (o *CategoryDetails) SetPlentyId(v int32) {
	o.PlentyId = &v
}

func (o CategoryDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CategoryId != nil {
		toSerialize["categoryId"] = o.CategoryId
	}
	if o.Lang != nil {
		toSerialize["lang"] = o.Lang
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Description2 != nil {
		toSerialize["description2"] = o.Description2
	}
	if o.ShortDescription != nil {
		toSerialize["shortDescription"] = o.ShortDescription
	}
	if o.MetaKeywords != nil {
		toSerialize["metaKeywords"] = o.MetaKeywords
	}
	if o.MetaDescription != nil {
		toSerialize["metaDescription"] = o.MetaDescription
	}
	if o.NameUrl != nil {
		toSerialize["nameUrl"] = o.NameUrl
	}
	if o.MetaTitle != nil {
		toSerialize["metaTitle"] = o.MetaTitle
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.UpdatedBy != nil {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if o.ItemListView != nil {
		toSerialize["itemListView"] = o.ItemListView
	}
	if o.SingleItemView != nil {
		toSerialize["singleItemView"] = o.SingleItemView
	}
	if o.PageView != nil {
		toSerialize["pageView"] = o.PageView
	}
	if o.Fulltext != nil {
		toSerialize["fulltext"] = o.Fulltext
	}
	if o.MetaRobots != nil {
		toSerialize["metaRobots"] = o.MetaRobots
	}
	if o.CanonicalLink != nil {
		toSerialize["canonicalLink"] = o.CanonicalLink
	}
	if o.PreviewUrl != nil {
		toSerialize["previewUrl"] = o.PreviewUrl
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.ImagePath != nil {
		toSerialize["imagePath"] = o.ImagePath
	}
	if o.Image2 != nil {
		toSerialize["image2"] = o.Image2
	}
	if o.Image2Path != nil {
		toSerialize["image2Path"] = o.Image2Path
	}
	if o.PlentyId != nil {
		toSerialize["plentyId"] = o.PlentyId
	}
	return json.Marshal(toSerialize)
}

type NullableCategoryDetails struct {
	value *CategoryDetails
	isSet bool
}

func (v NullableCategoryDetails) Get() *CategoryDetails {
	return v.value
}

func (v *NullableCategoryDetails) Set(val *CategoryDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryDetails(val *CategoryDetails) *NullableCategoryDetails {
	return &NullableCategoryDetails{value: val, isSet: true}
}

func (v NullableCategoryDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


