/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// Order struct for Order
type Order struct {
	Id *int32 `json:"id,omitempty"`
	ReferrerId *float32 `json:"referrerId,omitempty"`
	RoundTotalsOnly *bool `json:"roundTotalsOnly,omitempty"`
	NumberOfDecimals *int32 `json:"numberOfDecimals,omitempty"`
	ContactReceiver *Contact `json:"contactReceiver,omitempty"`
	ContactSender *Contact `json:"contactSender,omitempty"`
	WarehouseReceiver *WarehouseContact `json:"warehouseReceiver,omitempty"`
	WarehouseSender *WarehouseContact `json:"warehouseSender,omitempty"`
	PlentyId *int32 `json:"plentyId,omitempty"`
	Typeid *int32 `json:"typeid,omitempty"`
	LockStatus *string `json:"lockStatus,omitempty"`
	LocationId *string `json:"locationId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	StatusId *float32 `json:"statusId,omitempty"`
	OwnerId *string `json:"ownerId,omitempty"`
	Relations *[]OrderRelation `json:"relations,omitempty"`
	Addresses *[]OrderAddress `json:"addresses,omitempty"`
	Location *OrderLocation `json:"location,omitempty"`
	Documents *[]OrderDocument `json:"documents,omitempty"`
	OrderItems *[]OrderItem `json:"orderItems,omitempty"`
}

// NewOrder instantiates a new Order object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrder() *Order {
	this := Order{}
	return &this
}

// NewOrderWithDefaults instantiates a new Order object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderWithDefaults() *Order {
	this := Order{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Order) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Order) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Order) SetId(v int32) {
	o.Id = &v
}

// GetReferrerId returns the ReferrerId field value if set, zero value otherwise.
func (o *Order) GetReferrerId() float32 {
	if o == nil || o.ReferrerId == nil {
		var ret float32
		return ret
	}
	return *o.ReferrerId
}

// GetReferrerIdOk returns a tuple with the ReferrerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetReferrerIdOk() (*float32, bool) {
	if o == nil || o.ReferrerId == nil {
		return nil, false
	}
	return o.ReferrerId, true
}

// HasReferrerId returns a boolean if a field has been set.
func (o *Order) HasReferrerId() bool {
	if o != nil && o.ReferrerId != nil {
		return true
	}

	return false
}

// SetReferrerId gets a reference to the given float32 and assigns it to the ReferrerId field.
func (o *Order) SetReferrerId(v float32) {
	o.ReferrerId = &v
}

// GetRoundTotalsOnly returns the RoundTotalsOnly field value if set, zero value otherwise.
func (o *Order) GetRoundTotalsOnly() bool {
	if o == nil || o.RoundTotalsOnly == nil {
		var ret bool
		return ret
	}
	return *o.RoundTotalsOnly
}

// GetRoundTotalsOnlyOk returns a tuple with the RoundTotalsOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetRoundTotalsOnlyOk() (*bool, bool) {
	if o == nil || o.RoundTotalsOnly == nil {
		return nil, false
	}
	return o.RoundTotalsOnly, true
}

// HasRoundTotalsOnly returns a boolean if a field has been set.
func (o *Order) HasRoundTotalsOnly() bool {
	if o != nil && o.RoundTotalsOnly != nil {
		return true
	}

	return false
}

// SetRoundTotalsOnly gets a reference to the given bool and assigns it to the RoundTotalsOnly field.
func (o *Order) SetRoundTotalsOnly(v bool) {
	o.RoundTotalsOnly = &v
}

// GetNumberOfDecimals returns the NumberOfDecimals field value if set, zero value otherwise.
func (o *Order) GetNumberOfDecimals() int32 {
	if o == nil || o.NumberOfDecimals == nil {
		var ret int32
		return ret
	}
	return *o.NumberOfDecimals
}

// GetNumberOfDecimalsOk returns a tuple with the NumberOfDecimals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetNumberOfDecimalsOk() (*int32, bool) {
	if o == nil || o.NumberOfDecimals == nil {
		return nil, false
	}
	return o.NumberOfDecimals, true
}

// HasNumberOfDecimals returns a boolean if a field has been set.
func (o *Order) HasNumberOfDecimals() bool {
	if o != nil && o.NumberOfDecimals != nil {
		return true
	}

	return false
}

// SetNumberOfDecimals gets a reference to the given int32 and assigns it to the NumberOfDecimals field.
func (o *Order) SetNumberOfDecimals(v int32) {
	o.NumberOfDecimals = &v
}

// GetContactReceiver returns the ContactReceiver field value if set, zero value otherwise.
func (o *Order) GetContactReceiver() Contact {
	if o == nil || o.ContactReceiver == nil {
		var ret Contact
		return ret
	}
	return *o.ContactReceiver
}

// GetContactReceiverOk returns a tuple with the ContactReceiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetContactReceiverOk() (*Contact, bool) {
	if o == nil || o.ContactReceiver == nil {
		return nil, false
	}
	return o.ContactReceiver, true
}

// HasContactReceiver returns a boolean if a field has been set.
func (o *Order) HasContactReceiver() bool {
	if o != nil && o.ContactReceiver != nil {
		return true
	}

	return false
}

// SetContactReceiver gets a reference to the given Contact and assigns it to the ContactReceiver field.
func (o *Order) SetContactReceiver(v Contact) {
	o.ContactReceiver = &v
}

// GetContactSender returns the ContactSender field value if set, zero value otherwise.
func (o *Order) GetContactSender() Contact {
	if o == nil || o.ContactSender == nil {
		var ret Contact
		return ret
	}
	return *o.ContactSender
}

// GetContactSenderOk returns a tuple with the ContactSender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetContactSenderOk() (*Contact, bool) {
	if o == nil || o.ContactSender == nil {
		return nil, false
	}
	return o.ContactSender, true
}

// HasContactSender returns a boolean if a field has been set.
func (o *Order) HasContactSender() bool {
	if o != nil && o.ContactSender != nil {
		return true
	}

	return false
}

// SetContactSender gets a reference to the given Contact and assigns it to the ContactSender field.
func (o *Order) SetContactSender(v Contact) {
	o.ContactSender = &v
}

// GetWarehouseReceiver returns the WarehouseReceiver field value if set, zero value otherwise.
func (o *Order) GetWarehouseReceiver() WarehouseContact {
	if o == nil || o.WarehouseReceiver == nil {
		var ret WarehouseContact
		return ret
	}
	return *o.WarehouseReceiver
}

// GetWarehouseReceiverOk returns a tuple with the WarehouseReceiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetWarehouseReceiverOk() (*WarehouseContact, bool) {
	if o == nil || o.WarehouseReceiver == nil {
		return nil, false
	}
	return o.WarehouseReceiver, true
}

// HasWarehouseReceiver returns a boolean if a field has been set.
func (o *Order) HasWarehouseReceiver() bool {
	if o != nil && o.WarehouseReceiver != nil {
		return true
	}

	return false
}

// SetWarehouseReceiver gets a reference to the given WarehouseContact and assigns it to the WarehouseReceiver field.
func (o *Order) SetWarehouseReceiver(v WarehouseContact) {
	o.WarehouseReceiver = &v
}

// GetWarehouseSender returns the WarehouseSender field value if set, zero value otherwise.
func (o *Order) GetWarehouseSender() WarehouseContact {
	if o == nil || o.WarehouseSender == nil {
		var ret WarehouseContact
		return ret
	}
	return *o.WarehouseSender
}

// GetWarehouseSenderOk returns a tuple with the WarehouseSender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetWarehouseSenderOk() (*WarehouseContact, bool) {
	if o == nil || o.WarehouseSender == nil {
		return nil, false
	}
	return o.WarehouseSender, true
}

// HasWarehouseSender returns a boolean if a field has been set.
func (o *Order) HasWarehouseSender() bool {
	if o != nil && o.WarehouseSender != nil {
		return true
	}

	return false
}

// SetWarehouseSender gets a reference to the given WarehouseContact and assigns it to the WarehouseSender field.
func (o *Order) SetWarehouseSender(v WarehouseContact) {
	o.WarehouseSender = &v
}

// GetPlentyId returns the PlentyId field value if set, zero value otherwise.
func (o *Order) GetPlentyId() int32 {
	if o == nil || o.PlentyId == nil {
		var ret int32
		return ret
	}
	return *o.PlentyId
}

// GetPlentyIdOk returns a tuple with the PlentyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetPlentyIdOk() (*int32, bool) {
	if o == nil || o.PlentyId == nil {
		return nil, false
	}
	return o.PlentyId, true
}

// HasPlentyId returns a boolean if a field has been set.
func (o *Order) HasPlentyId() bool {
	if o != nil && o.PlentyId != nil {
		return true
	}

	return false
}

// SetPlentyId gets a reference to the given int32 and assigns it to the PlentyId field.
func (o *Order) SetPlentyId(v int32) {
	o.PlentyId = &v
}

// GetTypeid returns the Typeid field value if set, zero value otherwise.
func (o *Order) GetTypeid() int32 {
	if o == nil || o.Typeid == nil {
		var ret int32
		return ret
	}
	return *o.Typeid
}

// GetTypeidOk returns a tuple with the Typeid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTypeidOk() (*int32, bool) {
	if o == nil || o.Typeid == nil {
		return nil, false
	}
	return o.Typeid, true
}

// HasTypeid returns a boolean if a field has been set.
func (o *Order) HasTypeid() bool {
	if o != nil && o.Typeid != nil {
		return true
	}

	return false
}

// SetTypeid gets a reference to the given int32 and assigns it to the Typeid field.
func (o *Order) SetTypeid(v int32) {
	o.Typeid = &v
}

// GetLockStatus returns the LockStatus field value if set, zero value otherwise.
func (o *Order) GetLockStatus() string {
	if o == nil || o.LockStatus == nil {
		var ret string
		return ret
	}
	return *o.LockStatus
}

// GetLockStatusOk returns a tuple with the LockStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetLockStatusOk() (*string, bool) {
	if o == nil || o.LockStatus == nil {
		return nil, false
	}
	return o.LockStatus, true
}

// HasLockStatus returns a boolean if a field has been set.
func (o *Order) HasLockStatus() bool {
	if o != nil && o.LockStatus != nil {
		return true
	}

	return false
}

// SetLockStatus gets a reference to the given string and assigns it to the LockStatus field.
func (o *Order) SetLockStatus(v string) {
	o.LockStatus = &v
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *Order) GetLocationId() string {
	if o == nil || o.LocationId == nil {
		var ret string
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetLocationIdOk() (*string, bool) {
	if o == nil || o.LocationId == nil {
		return nil, false
	}
	return o.LocationId, true
}

// HasLocationId returns a boolean if a field has been set.
func (o *Order) HasLocationId() bool {
	if o != nil && o.LocationId != nil {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given string and assigns it to the LocationId field.
func (o *Order) SetLocationId(v string) {
	o.LocationId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Order) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Order) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Order) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Order) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Order) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Order) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetStatusId returns the StatusId field value if set, zero value otherwise.
func (o *Order) GetStatusId() float32 {
	if o == nil || o.StatusId == nil {
		var ret float32
		return ret
	}
	return *o.StatusId
}

// GetStatusIdOk returns a tuple with the StatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetStatusIdOk() (*float32, bool) {
	if o == nil || o.StatusId == nil {
		return nil, false
	}
	return o.StatusId, true
}

// HasStatusId returns a boolean if a field has been set.
func (o *Order) HasStatusId() bool {
	if o != nil && o.StatusId != nil {
		return true
	}

	return false
}

// SetStatusId gets a reference to the given float32 and assigns it to the StatusId field.
func (o *Order) SetStatusId(v float32) {
	o.StatusId = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *Order) GetOwnerId() string {
	if o == nil || o.OwnerId == nil {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetOwnerIdOk() (*string, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *Order) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *Order) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetRelations returns the Relations field value if set, zero value otherwise.
func (o *Order) GetRelations() []OrderRelation {
	if o == nil || o.Relations == nil {
		var ret []OrderRelation
		return ret
	}
	return *o.Relations
}

// GetRelationsOk returns a tuple with the Relations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetRelationsOk() (*[]OrderRelation, bool) {
	if o == nil || o.Relations == nil {
		return nil, false
	}
	return o.Relations, true
}

// HasRelations returns a boolean if a field has been set.
func (o *Order) HasRelations() bool {
	if o != nil && o.Relations != nil {
		return true
	}

	return false
}

// SetRelations gets a reference to the given []OrderRelation and assigns it to the Relations field.
func (o *Order) SetRelations(v []OrderRelation) {
	o.Relations = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *Order) GetAddresses() []OrderAddress {
	if o == nil || o.Addresses == nil {
		var ret []OrderAddress
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetAddressesOk() (*[]OrderAddress, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *Order) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []OrderAddress and assigns it to the Addresses field.
func (o *Order) SetAddresses(v []OrderAddress) {
	o.Addresses = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *Order) GetLocation() OrderLocation {
	if o == nil || o.Location == nil {
		var ret OrderLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetLocationOk() (*OrderLocation, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *Order) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given OrderLocation and assigns it to the Location field.
func (o *Order) SetLocation(v OrderLocation) {
	o.Location = &v
}

// GetDocuments returns the Documents field value if set, zero value otherwise.
func (o *Order) GetDocuments() []OrderDocument {
	if o == nil || o.Documents == nil {
		var ret []OrderDocument
		return ret
	}
	return *o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetDocumentsOk() (*[]OrderDocument, bool) {
	if o == nil || o.Documents == nil {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *Order) HasDocuments() bool {
	if o != nil && o.Documents != nil {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []OrderDocument and assigns it to the Documents field.
func (o *Order) SetDocuments(v []OrderDocument) {
	o.Documents = &v
}

// GetOrderItems returns the OrderItems field value if set, zero value otherwise.
func (o *Order) GetOrderItems() []OrderItem {
	if o == nil || o.OrderItems == nil {
		var ret []OrderItem
		return ret
	}
	return *o.OrderItems
}

// GetOrderItemsOk returns a tuple with the OrderItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetOrderItemsOk() (*[]OrderItem, bool) {
	if o == nil || o.OrderItems == nil {
		return nil, false
	}
	return o.OrderItems, true
}

// HasOrderItems returns a boolean if a field has been set.
func (o *Order) HasOrderItems() bool {
	if o != nil && o.OrderItems != nil {
		return true
	}

	return false
}

// SetOrderItems gets a reference to the given []OrderItem and assigns it to the OrderItems field.
func (o *Order) SetOrderItems(v []OrderItem) {
	o.OrderItems = &v
}

func (o Order) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ReferrerId != nil {
		toSerialize["referrerId"] = o.ReferrerId
	}
	if o.RoundTotalsOnly != nil {
		toSerialize["roundTotalsOnly"] = o.RoundTotalsOnly
	}
	if o.NumberOfDecimals != nil {
		toSerialize["numberOfDecimals"] = o.NumberOfDecimals
	}
	if o.ContactReceiver != nil {
		toSerialize["contactReceiver"] = o.ContactReceiver
	}
	if o.ContactSender != nil {
		toSerialize["contactSender"] = o.ContactSender
	}
	if o.WarehouseReceiver != nil {
		toSerialize["warehouseReceiver"] = o.WarehouseReceiver
	}
	if o.WarehouseSender != nil {
		toSerialize["warehouseSender"] = o.WarehouseSender
	}
	if o.PlentyId != nil {
		toSerialize["plentyId"] = o.PlentyId
	}
	if o.Typeid != nil {
		toSerialize["typeid"] = o.Typeid
	}
	if o.LockStatus != nil {
		toSerialize["lockStatus"] = o.LockStatus
	}
	if o.LocationId != nil {
		toSerialize["locationId"] = o.LocationId
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.StatusId != nil {
		toSerialize["statusId"] = o.StatusId
	}
	if o.OwnerId != nil {
		toSerialize["ownerId"] = o.OwnerId
	}
	if o.Relations != nil {
		toSerialize["relations"] = o.Relations
	}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Documents != nil {
		toSerialize["documents"] = o.Documents
	}
	if o.OrderItems != nil {
		toSerialize["orderItems"] = o.OrderItems
	}
	return json.Marshal(toSerialize)
}

type NullableOrder struct {
	value *Order
	isSet bool
}

func (v NullableOrder) Get() *Order {
	return v.value
}

func (v *NullableOrder) Set(val *Order) {
	v.value = val
	v.isSet = true
}

func (v NullableOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrder(val *Order) *NullableOrder {
	return &NullableOrder{value: val, isSet: true}
}

func (v NullableOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


