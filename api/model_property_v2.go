/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// PropertyV2 struct for PropertyV2
type PropertyV2 struct {
	Id *int32 `json:"id,omitempty"`
	PropertyId *int32 `json:"propertyId,omitempty"`
	GroupId *int32 `json:"groupId,omitempty"`
	Type *string `json:"type,omitempty"`
	TargetId *int32 `json:"targetId,omitempty"`
	Value *string `json:"value,omitempty"`
	Markup *int32 `json:"markup,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	Values *[]PropertiesV2Values `json:"values,omitempty"`
	SelectionValues *[]PropertiesV2SelectionValues `json:"selectionValues,omitempty"`
	Property *PropertyV2Property `json:"property,omitempty"`
}

// NewPropertyV2 instantiates a new PropertyV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertyV2() *PropertyV2 {
	this := PropertyV2{}
	return &this
}

// NewPropertyV2WithDefaults instantiates a new PropertyV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertyV2WithDefaults() *PropertyV2 {
	this := PropertyV2{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PropertyV2) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyV2) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PropertyV2) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PropertyV2) SetId(v int32) {
	o.Id = &v
}

// GetPropertyId returns the PropertyId field value if set, zero value otherwise.
func (o *PropertyV2) GetPropertyId() int32 {
	if o == nil || o.PropertyId == nil {
		var ret int32
		return ret
	}
	return *o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyV2) GetPropertyIdOk() (*int32, bool) {
	if o == nil || o.PropertyId == nil {
		return nil, false
	}
	return o.PropertyId, true
}

// HasPropertyId returns a boolean if a field has been set.
func (o *PropertyV2) HasPropertyId() bool {
	if o != nil && o.PropertyId != nil {
		return true
	}

	return false
}

// SetPropertyId gets a reference to the given int32 and assigns it to the PropertyId field.
func (o *PropertyV2) SetPropertyId(v int32) {
	o.PropertyId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *PropertyV2) GetGroupId() int32 {
	if o == nil || o.GroupId == nil {
		var ret int32
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyV2) GetGroupIdOk() (*int32, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *PropertyV2) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given int32 and assigns it to the GroupId field.
func (o *PropertyV2) SetGroupId(v int32) {
	o.GroupId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PropertyV2) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyV2) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PropertyV2) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PropertyV2) SetType(v string) {
	o.Type = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *PropertyV2) GetTargetId() int32 {
	if o == nil || o.TargetId == nil {
		var ret int32
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyV2) GetTargetIdOk() (*int32, bool) {
	if o == nil || o.TargetId == nil {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *PropertyV2) HasTargetId() bool {
	if o != nil && o.TargetId != nil {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given int32 and assigns it to the TargetId field.
func (o *PropertyV2) SetTargetId(v int32) {
	o.TargetId = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *PropertyV2) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyV2) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *PropertyV2) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *PropertyV2) SetValue(v string) {
	o.Value = &v
}

// GetMarkup returns the Markup field value if set, zero value otherwise.
func (o *PropertyV2) GetMarkup() int32 {
	if o == nil || o.Markup == nil {
		var ret int32
		return ret
	}
	return *o.Markup
}

// GetMarkupOk returns a tuple with the Markup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyV2) GetMarkupOk() (*int32, bool) {
	if o == nil || o.Markup == nil {
		return nil, false
	}
	return o.Markup, true
}

// HasMarkup returns a boolean if a field has been set.
func (o *PropertyV2) HasMarkup() bool {
	if o != nil && o.Markup != nil {
		return true
	}

	return false
}

// SetMarkup gets a reference to the given int32 and assigns it to the Markup field.
func (o *PropertyV2) SetMarkup(v int32) {
	o.Markup = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PropertyV2) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyV2) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PropertyV2) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PropertyV2) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PropertyV2) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyV2) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PropertyV2) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PropertyV2) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *PropertyV2) GetValues() []PropertiesV2Values {
	if o == nil || o.Values == nil {
		var ret []PropertiesV2Values
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyV2) GetValuesOk() (*[]PropertiesV2Values, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *PropertyV2) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []PropertiesV2Values and assigns it to the Values field.
func (o *PropertyV2) SetValues(v []PropertiesV2Values) {
	o.Values = &v
}

// GetSelectionValues returns the SelectionValues field value if set, zero value otherwise.
func (o *PropertyV2) GetSelectionValues() []PropertiesV2SelectionValues {
	if o == nil || o.SelectionValues == nil {
		var ret []PropertiesV2SelectionValues
		return ret
	}
	return *o.SelectionValues
}

// GetSelectionValuesOk returns a tuple with the SelectionValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyV2) GetSelectionValuesOk() (*[]PropertiesV2SelectionValues, bool) {
	if o == nil || o.SelectionValues == nil {
		return nil, false
	}
	return o.SelectionValues, true
}

// HasSelectionValues returns a boolean if a field has been set.
func (o *PropertyV2) HasSelectionValues() bool {
	if o != nil && o.SelectionValues != nil {
		return true
	}

	return false
}

// SetSelectionValues gets a reference to the given []PropertiesV2SelectionValues and assigns it to the SelectionValues field.
func (o *PropertyV2) SetSelectionValues(v []PropertiesV2SelectionValues) {
	o.SelectionValues = &v
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *PropertyV2) GetProperty() PropertyV2Property {
	if o == nil || o.Property == nil {
		var ret PropertyV2Property
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyV2) GetPropertyOk() (*PropertyV2Property, bool) {
	if o == nil || o.Property == nil {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *PropertyV2) HasProperty() bool {
	if o != nil && o.Property != nil {
		return true
	}

	return false
}

// SetProperty gets a reference to the given PropertyV2Property and assigns it to the Property field.
func (o *PropertyV2) SetProperty(v PropertyV2Property) {
	o.Property = &v
}

func (o PropertyV2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.PropertyId != nil {
		toSerialize["propertyId"] = o.PropertyId
	}
	if o.GroupId != nil {
		toSerialize["groupId"] = o.GroupId
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.TargetId != nil {
		toSerialize["targetId"] = o.TargetId
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Markup != nil {
		toSerialize["markup"] = o.Markup
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	if o.SelectionValues != nil {
		toSerialize["selectionValues"] = o.SelectionValues
	}
	if o.Property != nil {
		toSerialize["property"] = o.Property
	}
	return json.Marshal(toSerialize)
}

type NullablePropertyV2 struct {
	value *PropertyV2
	isSet bool
}

func (v NullablePropertyV2) Get() *PropertyV2 {
	return v.value
}

func (v *NullablePropertyV2) Set(val *PropertyV2) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyV2) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyV2(val *PropertyV2) *NullablePropertyV2 {
	return &NullablePropertyV2{value: val, isSet: true}
}

func (v NullablePropertyV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


