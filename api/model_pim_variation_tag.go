/*
Plentymarkets-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// PimVariationTag struct for PimVariationTag
type PimVariationTag struct {
	TagId *int32 `json:"tagId,omitempty"`
}

// NewPimVariationTag instantiates a new PimVariationTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPimVariationTag() *PimVariationTag {
	this := PimVariationTag{}
	return &this
}

// NewPimVariationTagWithDefaults instantiates a new PimVariationTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPimVariationTagWithDefaults() *PimVariationTag {
	this := PimVariationTag{}
	return &this
}

// GetTagId returns the TagId field value if set, zero value otherwise.
func (o *PimVariationTag) GetTagId() int32 {
	if o == nil || o.TagId == nil {
		var ret int32
		return ret
	}
	return *o.TagId
}

// GetTagIdOk returns a tuple with the TagId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PimVariationTag) GetTagIdOk() (*int32, bool) {
	if o == nil || o.TagId == nil {
		return nil, false
	}
	return o.TagId, true
}

// HasTagId returns a boolean if a field has been set.
func (o *PimVariationTag) HasTagId() bool {
	if o != nil && o.TagId != nil {
		return true
	}

	return false
}

// SetTagId gets a reference to the given int32 and assigns it to the TagId field.
func (o *PimVariationTag) SetTagId(v int32) {
	o.TagId = &v
}

func (o PimVariationTag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TagId != nil {
		toSerialize["tagId"] = o.TagId
	}
	return json.Marshal(toSerialize)
}

type NullablePimVariationTag struct {
	value *PimVariationTag
	isSet bool
}

func (v NullablePimVariationTag) Get() *PimVariationTag {
	return v.value
}

func (v *NullablePimVariationTag) Set(val *PimVariationTag) {
	v.value = val
	v.isSet = true
}

func (v NullablePimVariationTag) IsSet() bool {
	return v.isSet
}

func (v *NullablePimVariationTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePimVariationTag(val *PimVariationTag) *NullablePimVariationTag {
	return &NullablePimVariationTag{value: val, isSet: true}
}

func (v NullablePimVariationTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePimVariationTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


